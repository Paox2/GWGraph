------------------------- Base URL : https://www.w3schools.com/-------------------------







Network Node: 

Unique Id: d2624824-2d62-48a7-a659-64fc1fa2e6ba
URL: https://cdn.snigelweb.com/resources/fonts/roboto-bold-webfont.woff2
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 110d6722-edba-491c-a4d9-4d8b38186d2f
URL: https://www.w3schools.com/lib/fonts/freckle-face-v9-latin-regular.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 4a727d3a-07e5-4bf5-849e-791dbc8b6b27
URL: https://www.w3schools.com/lib/fonts/source-sans-pro-v14-latin-700.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: d153fad8-fa7a-4afc-9bf8-3cb28567deeb
URL: https://www.w3schools.com/spaces/files/check3.db67d31e.svg
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 4dd74e1f-fc48-4ed2-92a1-6c01ad1e78ca
URL: https://cdn.snigelweb.com/prebid/7.53.0/prebid.js?v=7529-1693414475147
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 543b652f-410b-4805-ad47-9fd65fca9f32
URL: https://www.w3schools.com/lib/common-deps.js?v=1.0.2
Method: GET
Request Flows:
  From:  HTML  To cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  -  true
HTTP Messages:
-----------------



Unique Id: d17d7c7d-b45a-4157-a1f5-33d6fa9ab8e2
URL: https://www.w3schools.com/images/w3schools_logo_500_04AA6D.png
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 1fcef5f0-1cec-4688-8ca6-96f0dec751a4
URL: https://securepubads.g.doubleclick.net/tag/js/gpt.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: ad214596-f78b-4cc0-8103-89cb994a09a8
URL: https://www.googletagmanager.com/ns.html?id=GTM-KTCFC3S
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: e027466a-2551-44a0-a26b-48f834aaa4be
URL: https://secure.cdn.fastclick.net/js/pubcid/latest/pubcid.min.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 0e038483-214e-4aa0-ac32-3296c9342c60
URL: https://www.w3schools.com/howto/tryhow_js_slideshow_ifr.htm
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: a0e90473-1000-46b8-bf74-df02b30573ac
URL: https://c.amazon-adsystem.com/bao-csm/aps-comm/aps_csm.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: d778919e-99eb-4f55-89a3-5f88a9aabd7d
URL: https://www.w3schools.com/lib/fonts/fontawesome.woff2?14663396
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 1cd08314-e5f7-41fb-a58d-23158d4775c0
URL: https://cdn.id5-sync.com/api/1.0/id5-api.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 60b62f52-fe36-43a3-b06b-38471ed8a408
URL: https://www.w3schools.com/lib/fonts/roboto-mono-v13-latin-500.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: e0746f40-28da-4aad-b429-494f5d31aa62
URL: https://www.googletagmanager.com/gtm.js?id=GTM-KTCFC3S
Method: GET
Request Flows:
  From: fc5b516f-b9f9-4853-8731-c8cb59446d99 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 03403d77-202f-4d74-b4ec-c918d7c8bbe6
URL: https://www.w3schools.com/lib/w3schools32.css
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 7c2987f4-22e5-4d5a-ad6c-1c44cebe0b9d
URL: https://www.w3schools.com/tryit/best2.gif
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 31f0f517-4c5b-405b-92d1-063651796bd3
URL: https://www.googletagmanager.com/gtag/js?id=G-9YNMTB56NB&l=dataLayer&cx=c
Method: GET
Request Flows:
  From: fc5b516f-b9f9-4853-8731-c8cb59446d99 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 36b34c21-0f31-4683-a04c-0ac454c7b70b
URL: https://www.google.co.uk/ads/ga-audiences?v=1&t=sr&slf_rd=1&_r=4&tid=G-9YNMTB56NB&cid=1583330111.1693799808&gtm=45je38u0&aip=1&z=36080190
Method: GET
Request Flows:
  From: fc5b516f-b9f9-4853-8731-c8cb59446d99 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 0375aae1-5b2f-4465-9ff1-a80462cff89d
URL: https://www.w3schools.com/codeeditor.gif
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 958a2448-8c57-49ad-a1ff-f1955f58a9a1
URL: https://www.w3schools.com/
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: b403d15f-847d-403f-810b-255a94a55737
URL: https://www.w3schools.com/lib/fonts/source-code-pro-v14-latin-regular.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 245fe4d4-6289-47cd-86fe-b3659812e700
URL: https://www.w3schools.com/lib/w3schools_footer.js?update=20230706
Method: GET
Request Flows:
  From:  HTML  To b144ee70-3b9c-4070-8210-d9e8eca83319 Script  -  true
HTTP Messages:
-----------------



Unique Id: c9b14844-63c4-4bcf-9aa6-afb58c84cba3
URL: https://cdn.snigelweb.com/gvl/vendor-list.json
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 5da96923-f91a-4eb1-8a1c-dd3194819513
URL: https://www.w3schools.com/lib/fonts/source-sans-pro-v14-latin-600.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: b2e20464-ce19-43eb-b656-9dc42b6780f8
URL: https://cdn.snigelweb.com/adconsent/76/views/adconsent__tcfapi_en.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 92eba235-1a69-42ab-bf57-8d29e8cea786
URL: https://stats.g.doubleclick.net/g/collect?v=2&tid=G-9YNMTB56NB&cid=1583330111.1693799808&gtm=45je38u0&aip=1
Method: POST
Request Flows:
  From: fc5b516f-b9f9-4853-8731-c8cb59446d99 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 0ec04e64-620b-43b3-ba46-4354f78d52c7
URL: https://region1.analytics.google.com/g/collect?v=2&tid=G-9YNMTB56NB&gtm=45je38u0&_p=1131437653&_gaz=1&cid=1583330111.1693799808&ul=zh-cn&sr=800x600&uaa=x86&uab=64&uafvl=Not.A%252FBrand%3B8.0.0.0%7CChromium%3B114.0.5735.199%7CHeadlessChrome%3B114.0.5735.199&uamb=0&uam=&uap=Windows&uapv=10.0.0&uaw=0&_s=1&sid=1693799807&sct=1&seg=0&dl=https%3A%2F%2Fwww.w3schools.com%2F&dt=W3Schools%20Online%20Web%20Tutorials&en=page_view&_fv=1&_nsi=1&_ss=1&ep.content_group=Other%20Group%2F
Method: POST
Request Flows:
  From: fc5b516f-b9f9-4853-8731-c8cb59446d99 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: dc6ad37a-f3a1-46f3-bcc8-0ad006f40022
URL: https://www.w3schools.com/lib/fonts/SourceSansPro-Regular.woff2
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: cb0d03b8-f7e3-4743-89ca-e4eaeb2391b9
URL: https://www.w3schools.com/how-spaces-works3.png
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: c775c4da-4218-4de8-8323-b6b57f1657f0
URL: https://www.w3schools.com/images/w3lynx_200.png
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: fb3c9dba-a604-4d7f-89ce-8e4f3b15f160
URL: https://cdn-ima.33across.com/ima.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: cb2d88c4-ee5b-4ab7-94f4-e535c727a97a
URL: https://www.w3schools.com/lib/w3codecolor.js
Method: GET
Request Flows:
  From:  HTML  To e8efc7c9-43f7-4aeb-8ec7-c2187b66dc8d Script  -  true
HTTP Messages:
-----------------



Unique Id: 035a437f-50d3-437e-9590-bf1fcb24a969
URL: https://www.w3schools.com/howto/img_nature_wide.jpg
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: cc416ca8-6c6a-4f08-9902-f3cd27a28692
URL: https://cdn.snigelweb.com/argus/argus.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 8f0cb3c7-7621-4eb3-9464-503440e65039
URL: https://www.w3schools.com/howto/img_snow_wide.jpg
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 419a7705-74cf-4a4e-a545-3735d402e656
URL: https://www.w3schools.com/lib/my-learning.js?v=1.0.21
Method: GET
Request Flows:
  From:  HTML  To 041326e6-1233-4146-9d88-7b92e4a0d796 Script  -  true
HTTP Messages:
-----------------



Unique Id: c47fd415-ce29-4e89-8617-84b43223ceac
URL: https://www.w3schools.com/lib/uic.js?v=1.0.5
Method: GET
Request Flows:
  From:  HTML  To f4f7d10b-b4b9-4295-b89a-fd86cd7ae3bb Script  -  true
HTTP Messages:
-----------------



Unique Id: f8ecf93c-e924-459d-9859-6dce926c5e25
URL: https://cdn.snigelweb.com/adengine/w3schools.com/loader.js
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 006494e7-8136-42e6-8a0a-8f8d0368a8ec
URL: https://www.w3schools.com/w3css_templates.jpg
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 4c5a8460-7e18-4d56-94b6-1ab360db202e
URL: https://c.amazon-adsystem.com/cdn/prod/config?src=3927&u=https%3A%2F%2Fwww.w3schools.com
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 605afd40-c036-4c2b-ae96-68269667a7aa
URL: https://c.amazon-adsystem.com/aax2/apstag.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 32194f48-ef5e-4019-a7cb-86bbd8fae41f
URL: https://www.w3schools.com/myl-green-off.png
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 31bd9424-449d-414d-8ac0-6bdb8dc8729b
URL: https://www.w3schools.com/images/colorpicker2000.png
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 4b10eaed-89ef-459b-a956-2cb7b542d6df
URL: https://www.w3schools.com/lib/user-session.js?v=1.0.29
Method: GET
Request Flows:
  From:  HTML  To d3c594f1-4719-41cf-9bce-f416e0e337d7 Script  -  true
HTTP Messages:
-----------------



Unique Id: ec0cec6f-e140-4aec-b606-17d26513efe0
URL: https://www.w3schools.com/images/colorpicker.png
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: bdb22315-f7e5-41b3-89b6-c2359a6e8eb0
URL: https://securepubads.g.doubleclick.net/pagead/managed/js/gpt/m202308300101/pubads_impl.js?cb=31077575
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: c6bc671f-0c11-4b58-942e-2286e1439b7c
URL: https://www.w3schools.com/spaces/dynamicspaces.gif
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: a208b3d9-a5c6-488b-b482-e1a8cf47d53c
URL: https://adengine.snigelweb.com/w3schools.com/7529-1693414475147/adngin.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: eec98766-e184-4b20-92e7-67ccb4ac6674
URL: https://cdn.snigelweb.com/adconsent/76/adconsent__tcfapi.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: ece5203d-7bd6-499c-a91b-80f0a8f71b79
URL: https://cdn.confiant-integrations.net/t_Qv_vWzcBDsyn934F1E0MWBb1c/prebid/config.js
Method: GET
Request Flows:
  From: cd5dfaf4-45ab-45e6-ba19-f99647d60411 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: c8150b34-67cc-47dd-bdc1-64203a29165e
URL: https://cdn.confiant-integrations.net/prebid/202307190925/wrap.js
Method: GET
Request Flows:
  From: d3c594f1-4719-41cf-9bce-f416e0e337d7 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: 867c5d70-2e00-4f52-8f0e-78e90afc01ae
URL: https://cdn.snigelweb.com/resources/fonts/roboto-regular-webfont.woff2
Method: GET
Request Flows:
  From: d3c594f1-4719-41cf-9bce-f416e0e337d7 Script  To null null  -  true
HTTP Messages:
-----------------



Unique Id: f3b6f2a7-d16b-47fe-a253-7b8a8b1ed3c7
URL: https://cdn.snigelweb.com/adengine/w3schools.com/loader.js
Method: GET
Request Flows:
  From:  HTML  To 4fbca80d-ef90-4d40-88af-c17add055676 Script  -  true
HTTP Messages:



Unique Id: d6d87e57-4175-4e2b-85e3-bba3fd2ebfc8
URL: https://www.w3schools.com/signup/lynxlogo.svg
Method: GET
Request Flows:
HTTP Messages:
-----------------



Unique Id: 808c18dd-205d-414e-a8fc-d0b9ec16da65
URL: https://www.w3schools.com/howto/img_mountains_wide.jpg
Method: GET
Request Flows:
HTTP Messages:
-----------------








Script Node: 

Unique Id: b7fde09e-d7d1-483a-a4c3-8977692af91c
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
    window.snigelPubConf = {
    "adengine": {

      "activeAdUnits": ["main_leaderboard", "sidebar_top", "bottom_left", "bottom_right"]

  }
}
uic_r_a()




Unique Id: 54fa0b59-d167-4d86-9aab-da2504c088e3
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
function secondSnigel() {};




Unique Id: cea7acdf-04a2-43aa-9f7f-693e3a2962b3
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
activate_subtopnav_scroll = 0;
from_scrollpos = -1;
current_scrollpos = -1;
goto_tut = 1;
function startscrolling_subtopnav(event) {
  event.preventDefault();
  from_scrollpos = event.clientX;
  activate_subtopnav_scroll = 1;
}
function scrolling_subtopnav(event) {
  current_scrollpos = event.clientX;
  if (current_scrollpos == from_scrollpos) return false;
  event.preventDefault();
  if (event.buttons == 0) return false;
  var scrollspeed;
  if (activate_subtopnav_scroll == 1) {
    goto_tut = 0;
    scrollspeed = current_scrollpos - from_scrollpos;
    scrollspeed = Math.abs(scrollspeed);
    if (current_scrollpos < from_scrollpos) {
     document.getElementById("scroll_left_btn").style.display = "block";     
     document.getElementById("subtopnav").scrollLeft += scrollspeed;        
    } else {
      document.getElementById("subtopnav").scrollLeft -= scrollspeed;        
    }
    scrollbtn_visible();
    from_scrollpos = current_scrollpos;
  }
}
function endscrolling_subtopnav(event) {
  event.preventDefault();
  activate_subtopnav_scroll = 0;
  from_scrollpos = -1;
  current_scrollpos = -1;
}
function pellessii(event) {
  if (goto_tut == 0) {
    event.preventDefault();  
    goto_tut = 1;
    return false;
  }
}
var scrollspeed = 1;
var scrollinterval
function scrollmenow(n) {
  scrollinterval = window.setInterval(function() {
    scrollspeed = scrollspeed * 1.1;
    if (scrollspeed > 10) {scrollspeed = 10;}
    if (n == 1) {
      document.getElementById("subtopnav").scrollLeft += scrollspeed;  
    } else {
      document.getElementById("subtopnav").scrollLeft -= scrollspeed;  
      
    }
    scrollbtn_visible();
  }, 10);
}

var p_s_l = 0;
var x_s_l = 0;
function scrollbtn_visible() {
  var c_s_l = document.getElementById("subtopnav").scrollLeft;
  if (c_s_l < 1) {
    document.getElementById("scroll_left_btn").style.display = "none";    
  } else {
    document.getElementById("scroll_left_btn").style.display = "block";    
  }
  if (c_s_l > 1 && c_s_l == p_s_l) {
    x_s_l++;
  } else {
    x_s_l = 0;  
  }
  if (x_s_l > 3) {
    document.getElementById("scroll_right_btn").style.display = "none";    
  } else {
    document.getElementById("scroll_right_btn").style.display = "block";  
  }
  p_s_l = document.getElementById("subtopnav").scrollLeft;
}

function stopscrollmenow() {
  scrollspeed = 1;
  window.clearInterval(scrollinterval);
}

//window.addEventListener("load", subtopnav_intoview);

function subtopnav_intoview() {
  var a, b, c, d, i = 0;
  a = document.getElementById("subtopnav");
  if (!a || !a.getElementsByClassName) {return false;}
  var x = a.getElementsByTagName("A");
  for (i = 0; i < x.length; i++) {
    b = document.location.pathname;
    c = x[i].pathname;
    if (c.indexOf("void(0)") == -1 && b.substr(0, b.indexOf("/",1)) ==  c.substr(0, c.indexOf("/",1))) {
      x[i].className += " active";
    }
  }
  d = a.getElementsByClassName("active");
  if (d.length < 1) {return false;}  
  while (!amIIntoView(a, d[0])) {
    i++
    if (i > 1000) {break;}
    a.scrollLeft += 10;
  }
  scrollbtn_visible();
}

function amIIntoView(x, y) {
  var a = x.scrollLeft;
  var b = a + window.innerWidth;
  var ytop = y.offsetLeft;
  var c = y.offsetWidth;
  var d = 0;
  if (document.getElementById("btn_container_subtopnav")) d = document.getElementById("btn_container_subtopnav").offsetWidth;
  var ybottom = ytop + c + d + 20;
  return ((ybottom <= b) && (ytop >= a));
}





Unique Id: a1d32cf9-d4a8-46b3-a73c-bf8c908d3246
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
function openLangTab(evtEd, codeName) {
  var indexEditor, proglanguage, progtablinks;
  proglanguage = document.getElementsByClassName("proglang");
  for (indexEditor = 0; indexEditor < proglanguage.length; indexEditor++) {
    proglanguage[indexEditor].style.display = "none";
  }
  progtablinks = document.getElementsByClassName("codeeditorbr-tablink");
  for (indexEditor = 0; indexEditor < proglanguage.length; indexEditor++) {
    progtablinks[indexEditor].className = progtablinks[indexEditor].className.replace(" ws-grey", "");
  }
  document.getElementById(codeName).style.display = "block";
  evtEd.currentTarget.className += " ws-grey";
}


function open_search(elmnt, sfb) {
  var a = document.getElementById("googleSearch");
  if (a.style.visibility == "hidden" && a.style.display == "") {
    a.style.visibility = "";
    a.style.display = "none";
  }
  if (sfb == false) {
    if (a.style.display == "") {
      a.style.visibility = "";
      a.style.display = "none";
      //elmnt.innerHTML = "<i class='fa'>&#xe802;</i>";    
    } else {
      a.style.display = "";
      a.style.visibility == "hidden"
    if (window.innerWidth > 700) {
      a.style.width = "40%";
    } else {
      a.style.width = "80%";
    }
    window.setTimeout(function () {
          if (document.getElementById("gsc-i-id1")) {
            document.getElementById("gsc-i-id1").focus();
          }
        }, 400);
    }
  } else {
    if (a.style.display == "") {
      a.style.visibility = "";
      a.style.display = "none";
    } else {
      a.style.display = "";
      a.style.visibility == "hidden"
    }
    a.style.visibility = "hidden";
    a.style.display = ""; 
  }
}

//w3CodeColor();

var pagesArr = [
  ["html", "/html/default.asp", "HTML Tutorial"],
  ["css", "/css/default.asp", "CSS Tutorial"],
  ["js", "/js/default.asp", "JavaScript Tutorial"],
  ["python", "/python/default.asp", "Python Tutorial"],
  ["sql", "/sql/default.asp", "SQL Tutorial"],
  ["php", "/php/default.asp", "PHP Tutorial"],
  ["java", "/java/default.asp", "JAVA Tutorial"],
  ["c", "/c/index.php", "C Tutorial"],
  ["c++", "/cpp/default.asp", "C++ Tutorial"],
  ["c#", "/cs/index.php", "C# Tutorial"],
  ["jquery", "/jquery/default.asp", "jQuery Tutorial"],
  ["w3css", "/w3css/default.asp", "W3.CSS Tutorial"],
  ["bootstrap 3", "/bootstrap/default.asp", "Bootstrap3 Tutorial"],
  ["bootstrap 4", "/bootstrap4/default.asp", "Bootstrap4 Tutorial"],
  ["bootstrap 5", "/bootstrap5/index.php", "Bootstrap5 Tutorial"],
  ["r", "/r/default.asp", "R Tutorial"],
  ["kotlin", "/kotlin/index.php", "KOTLIN Tutorial"],
  ["mysql", "/mysql/default.asp", "MySQL Tutorial"],
  ["postgresql", "/postgresql/index.php", "PostgreSQL Tutorial"],
  ["nodejs", "/nodejs/default.asp", "Node.js Tutorial"],
  ["react.js", "/react/default.asp", "REACT Tutorial"],
  ["vuejs", "/vue/index.php", "Vue.js Tutorial"],  
  ["json", "/js/js_json.asp", "JSON Tutorial"],
  ["angularjs", "/angular/default.asp", "AngularJS Tutorial"],
  ["w3.js", "/w3js/default.asp", "W3.JS Tutorial"],
  ["xml", "/xml/default.asp", "XML Tutorial"],
  ["sass", "/sass/default.php", "SASS Tutorial"],
  ["icons", "/icons/default.asp", "Icons Tutorial"],
  ["", "/icons/icons_reference.asp", "Font Awesome Icons"],  
  ["", "/howto/howto_google_fonts.asp", "Google Fonts"],    
  ["rwd", "/css/css_rwd_intro.asp", "Responsive Web Design Tutorial"],
  ["graphics", "/graphics/default.asp", "Graphics Tutorial"],
  ["graphics", "/graphics/svg_intro.asp", "SVG Tutorial"],
  ["canvas", "/graphics/canvas_intro.asp", "Canvas Tutorial"],
  ["raspberry pi", "/nodejs/nodejs_raspberrypi.asp", "RaspberryPi Tutorial"],
  ["cybersecurity", "/cybersecurity/index.php", "Cyber Security Tutorial"],
  ["colors", "/colors/default.asp", "Colors Tutorial"],
  ["typescript", "/typescript/index.php", "TypeScript Tutorial"],
  ["git", "/git/default.asp", "Git Tutorial"],
  ["matplotlib", "/python/matplotlib_intro.asp", "Matplotlib Tutorial"],
  ["numpy", "/python/numpy/default.asp", "NumPy Tutorial"],
  ["pandas", "/python/pandas/default.asp", "Pandas Tutorial"],
  ["scipy", "/python/scipy/index.php", "SciPy Tutorial"],
  ["asp", "/asp/default.asp", "ASP Tutorial"],
  ["accessibility", "/accessibility/index.php", "Accessibility Tutorial"],
  ["appml", "/appml/default.asp", "AppML Tutorial"],
  ["go", "/go/index.php", "GO Tutorial"],
  ["excell", "/excel/index.php", "Excel Tutorial"],
  ["google sheets", "/googlesheets/index.php", "Google Sheets Tutorial"],
  ["ml", "/python/python_ml_getting_started.asp", "Machine Learning Tutorial"],
  ["artificial intelligence", "/ai/default.asp", "AI Tutorial"],
  ["statistics", "/statistics/index.php", "Statistics Tutorial"],
  ["data science", "/datascience/default.asp", "Data Science Tutorial"],
  ["code editor", "/tryit/tryit.asp?filename=tryhtml_hello", "Tryit Editor"],
  ["color picker", "/colors/colors_picker.asp", "Color Picker"],
  ["code game", "/codegame/index.html", "Code Game"],
  ["exercises", "/exercises/index.php", "Exercises"],
  ["quizzes", "/quiztest/default.asp", "Quizzes"],
  ["templates", "/w3css/w3css_templates.asp", "W3.CSS Templates"],
  ["courses", "https://shop.w3schools.com/collections/course-catalog", "Courses"],
  ["certificates", "https://shop.w3schools.com/collections/certifications", "Certificates"],
  ["spaces", "/spaces/index.html", "W3Schools Spaces"],
  ["website", "/spaces/index.html", "Create website"],
  ["how to", "/howto/default.asp", "How-To Library"],
  ["aws cloud", "/aws/index.php", "AWS Cloud Tutorial"],
  ["html reference", "/tags/default.asp", "HTML Tag Reference"],
  ["html certificate", "https://campus.w3schools.com/collections/certifications/products/html-certificate", "HTML Certificate"], 
  ["", "/tags/ref_html_browsersupport.asp", "HTML Browser Support"],   
  ["events reference", "/tags/ref_eventattributes.asp", "HTML Event Reference"],
  ["color reference", "/colors/default.asp", "HTML Color Reference"],
  ["attributes", "/tags/ref_attributes.asp", "HTML Attribute Reference"],
  ["canvas reference", "/jsref/api_canvas.asp", "HTML Canvas Reference"],
  ["svg reference", "/graphics/svg_reference.asp", "HTML SVG Reference"],
  ["", "/graphics/google_maps_reference.asp", "Google Maps Reference"],
  ["", "/cssref/index.php", "CSS Reference"],
  ["", "/cssref/css3_browsersupport.asp", "CSS Browser Support"],
  ["", "/cssref/css_selectors.asp", "CSS Selector Reference"],
  ["", "/bootstrap/bootstrap_ref_all_classes.asp", "Bootstrap 3 Reference"],
  ["", "/bootstrap4/bootstrap_ref_all_classes.asp", "Bootstrap 4 Reference"],
  ["", "/w3css/w3css_references.asp", "W3.CSS Reference"],
  ["", "/icons/icons_reference.asp", "Icon Reference"],
  ["", "/sass/sass_functions_string.php", "Sass Reference"],
  ["", "/jsref/default.asp", "JavaScript Reference"],
  ["", "/jsref/default.asp", "HTML DOM Reference"],
  ["", "/jquery/jquery_ref_overview.asp", "jQuery Reference"],
  ["", "/angular/angular_ref_directives.asp", "AngularJS Reference"],
  ["", "/python/python_reference.asp", "Python Reference"],
  ["", "/java/java_ref_keywords.asp", "Java Reference"],
  ["", "/sql/sql_ref_keywords.asp", "SQL Reference"],
  ["", "/mysql/mysql_ref_functions.asp", "MySQL Reference"],
  ["", "/php/php_ref_overview.asp", "PHP Reference"],
  ["", "/asp/asp_ref_response.asp", "ASP Reference"],
  ["", "/xml/dom_nodetype.asp", "XML DOM Reference"],
  ["", "/xml/dom_http.asp", "XML Http Reference"],
  ["", "/xml/xsl_elementref.asp", "XSLT Reference"],
  ["", "/xml/schema_elements_ref.asp", "XML Schema Reference"],
  ["", "/charsets/default.asp", "HTML Character Sets"],
  ["", "/charsets/ref_html_ascii.asp", "HTML ASCII"],
  ["", "/charsets/ref_html_ansi.asp", "HTML ANSI"],
  ["", "/charsets/ref_html_ansi.asp", "HTML Windows-1252"],
  ["", "/charsets/ref_html_8859.asp", "HTML ISO-8859-1"],
  ["", "/charsets/ref_html_symbols.asp", "HTML Symbols"],
  ["", "/charsets/ref_html_utf8.asp", "HTML UTF-8"],
  ["django", "/django/index.php", "Django Tutorial"],
  ["mongodb", "/mongodb/index.php", "MongoDB Tutorial"],    
  ["", "/typingspeed/default.asp", "Test your typing speed"],  
  ["css certificate", "https://campus.w3schools.com/collections/certifications/products/css-certificate", "CSS Certificate"], 
  ["js certificate", "https://campus.w3schools.com/collections/certifications/products/javascript-certificate", "JavaScript Certificate"],   
  ["front end certificate", "https://campus.w3schools.com/collections/certifications/products/front-end-certificate", "Front End Certificate"],   
  ["sql certificate", "https://campus.w3schools.com/collections/certifications/products/sql-certificate", "SQL Certificate"],     
  ["python certificate", "https://campus.w3schools.com/collections/certifications/products/python-certificate", "Python Certificate"],       
  ["php certificate", "https://campus.w3schools.com/collections/certifications/products/php-certificate", "PHP Certificate"],       
  ["jquery certificate", "https://campus.w3schools.com/collections/certifications/products/jquery-certificate", "jQuery Certificate"],       
  ["java certificate", "https://campus.w3schools.com/collections/certifications/products/java-certificate", "Java Certificate"],       
  ["c++ certificate", "https://campus.w3schools.com/collections/certifications/products/c-certificate", "C++ Certificate"],       
  ["c# certificate", "https://campus.w3schools.com/collections/certifications/products/c-certificate-1", "C# Certificate"],       
  ["xml certificate", "https://campus.w3schools.com/collections/certifications/products/xml-certificate", "XML Certificate"],         
  ["hosting", "/spaces/index.html", "W3Schools Spaces"],         
  ["free website", "/spaces/index.html", "Free website with W3Schools Spaces"],           
  ["pro", "/pro/index.php", "W3Schools Pro User"],           
  ["ad free", "/pro/index.php", "W3Schools without ads"],             
  ["videos", "/videos/index.php", "W3Schools Video"],             
  ["login", "https://profile.w3schools.com", "Log into your W3Schools account"],               
  ["sign up", "https://profile.w3schools.com", "Sign up - Create a W3Schools account"],
  ["", "/tryit/tryit.asp?filename=tryhtml_hello", "HTML Compiler"],
  ["", "/python/trypython.asp?filename=demo_default", "Python Compiler"],  
  ["", "/sql/trysql.asp?filename=trysql_select_where", "SQL Compiler"],    
  ["", "/php/phptryit.asp?filename=tryphp_intro", "PHP Compiler"],    
  ["", "/java/tryjava.asp?filename=demo_helloworld", "JAVA Compiler"],    
  ["", "/cpp/trycpp.asp?filename=demo_helloworld", "C++ Compiler"],    
  ["", "/c/tryc.php?filename=demo_helloworld", "C Compiler"],            
  ["", "/cs/trycs.php?filename=demo_helloworld", "C# Compiler"],            
  ["", "/r/tryr.asp?filename=demo_default", "R Compiler"],            
  ["", "/kotlin/trykotlin.php?filename=demo_helloworld", "Kotlin Compiler"],            
  ["", "/go/trygo.php?filename=demo_helloworld", "GO Compiler"],            
  ["", "/typescript/trytypescript.php?filename=demo_helloworld", "TypeScript Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_bash", "Bash Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_clojure", "Clojure Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_fortran", "Fortran Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_nodejs", "Node.js Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_perl", "Perl Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_ruby", "Ruby Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_scala", "Scala Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_swift", "Swift Compiler"],            
  ["", "/tryit/trycompiler.asp?filename=demo_vbnet", "VB.NET Compiler"],                
  
      
];
var searchFromBox = false;
function click_learntocode_search_btn() {
  var x = document.getElementsByClassName("search_item");
  if (x.length == 0) {
    cc = 1;
  }
  for (i = 0; i < x.length; i++) {
    if (x[i].className.indexOf("search_active") > -1) {
      n = x[i].href;
      if (n.indexOf("search_entire_w3schools") > -1) {
        cc = 1;
      }
      break;
    }
  }
  if (cc == 1) {
    searchFromBox = true;
    submit_search_form();
  } else {
    window.location = n;
  }
}
function find_search_results(inp) {
  var a, val, i, l, resultIndexes = [], resultTexts = [], html = "", classAtt = "", pos1, posNext, cc, c0, c1, c2;
  a = document.getElementById("listofsearchresults");
  a.innerHTML = "";
  a.style.display = "none";
  document.getElementById("search2").style.borderBottomLeftRadius = "25px";
  val = inp.value.toUpperCase();
  if (val == "") return false;
  for (i = 0; i < pagesArr.length; i++) {
    if (pagesArr[i][0].toUpperCase().substr(0, val.length) == val || pagesArr[i][2].toUpperCase().substr(0, val.length) == val) {
      if (resultTexts.indexOf(pagesArr[i][2]) == -1) {
        resultIndexes.push(i);
        resultTexts.push(pagesArr[i][2]);
        if (resultIndexes.length > 5) break;
      }
    }
  }
  for (i = 0; i < pagesArr.length; i++) {
    if (resultIndexes.indexOf(i) == -1 && (pagesArr[i][0].toUpperCase().indexOf(val) > -1 || pagesArr[i][2].toUpperCase().indexOf(val) > -1)) {
      if (resultTexts.indexOf(pagesArr[i][2]) == -1) {
        resultIndexes.push(i);
        resultTexts.push(pagesArr[i][2]);        
        if (resultIndexes.length > 5) break;
      }
    }
  }
  //if (resultIndexes.length == 0) return false;
  document.getElementById("search2").style.borderBottomLeftRadius = "0";
  a.style.display = "block";
  for (i = 0; i < resultIndexes.length; i++) {
    cc = pagesArr[resultIndexes[i]][2];
    pos1 = cc.toUpperCase().indexOf(val);
    dd = "";
    while (pos1 > -1) {
      c0 = cc.substr(0, pos1);
      c1 = "<span class='span_search'>" + cc.substr(pos1, val.length) + "</span>";
      c2 = cc.substr(pos1 + val.length);
      dd += c0 + c1;
      posNext = c2.toUpperCase().indexOf(val);
      if (posNext > -1) {
        cc = c2;
        pos1 = posNext;
      } else {
        cc = dd + c2;
        pos1 = -1;
      }
    }
    classAtt = "";
    if (html == "") classAtt = " search_active";
    html += "<a class='search_item" + classAtt + "' href='" + pagesArr[resultIndexes[i]][1] + "'>" + cc + "</a>";
  }
  if (resultIndexes.length == 0) {
    classAtt = "";
    if (html == "") classAtt = " search_active";
    html += "<a class='search_item" + classAtt + "' onclick='click_search_w3schools_link(event)' href='search_entire_w3schools'>Search W3Schools</a>";
  }
  a.innerHTML = html;
}
function click_search_w3schools_link(event) {
  event.preventDefault();
  submit_search_form();
}
function key_pressed_in_search(event) {
  var x, n, nn, i, cc = 0;
  var keycode = event.keyCode;
  //console.log(keycode);
  if (keycode == 38 || keycode == 40) { //up || down
    x = document.getElementsByClassName("search_item");
    for (i = 0; i < x.length; i++) {
      if (x[i].className.indexOf("search_active") > -1) {
        x[i].className = "search_item";
        n = i;
        break;
      }
    }
    if (keycode == 38) {
      nn = n - 1;
      if (nn < 0) nn = 0;
    }
    if (keycode == 40) {
      nn = n + 1;
      if (nn >= x.length) nn = nn - 1; 
    }
    x[nn].className = "search_item search_active";
  }
  if (keycode == 13) {  //enter
    event.preventDefault();
    x = document.getElementsByClassName("search_item");
    if (x.length == 0) {
      cc = 1;
    }
    for (i = 0; i < x.length; i++) {
      if (x[i].className.indexOf("search_active") > -1) {
        n = x[i].href;
        if (n.indexOf("search_entire_w3schools") > -1) {
          cc = 1;
        }
        break;
      }
    }
    if (cc == 1) {
      searchFromBox = true;
      submit_search_form();
    } else {
      window.location = n;
    }
  }
}

function submit_search_form() {
    searchFromBox = true;
    gSearch();
    var delayInMilliseconds = 100; //0.1 second
    setTimeout(execute_google_search, delayInMilliseconds);
}

function execute_google_search() {
  if (typeof google == 'object') {
    google.search.cse.element.getElement("standard0").execute(document.getElementById("search2").value);
  } else {
    setTimeout(execute_google_search, 100);
  }  
}

document.body.addEventListener("click", function(event) {
  var a, x = event.srcElement;
  if (x.id == "search2" ||x.id == "learntocode_searchbtn" || x.id == "learntocode_searchicon" || x.classList.contains("search_item")) {
  } else {
    a = document.getElementById("listofsearchresults");
    a.innerHTML = "";
    a.style.display = "none";
    document.getElementById("search2").style.borderBottomLeftRadius = "25px";
    if (searchFromBox == true) {
      document.getElementById("googleSearch").style.display = "none";
      document.getElementById("googleSearch").style.visibility = "block";  
    }
    searchFromBox = false;
  }
});





Unique Id: 4fbca80d-ef90-4d40-88af-c17add055676
Related html node: 
Type: external
Src: https://cdn.snigelweb.com/adengine/w3schools.com/loader.js
Async: 1
Defer: 0
Content: !function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){var o=t(1);o.init();var r=o.get();try{!function(){var e={scripts:[{name:"qchoice",loadModule:function(){t(4)}},{name:"adconsent",skipLoadOnExists:!0,loadModule:function(){t(5)},onLoad:{emitEvent:"adnginLoaderReady",scripts:[{name:"pbjs",obj:{que:[]},queue:"que",path:"?v="+escape(r.version)},{name:"apstag",obj:{init:function(){this._Q.push(["i",arguments])},fetchBids:function(){this._Q.push(["f",arguments])},setDisplayBids:function(){},targetingKeys:function(){return[]},_Q:[]}},{name:"gpt",obj:{cmd:[]},queue:"cmd"},{name:"adsbygoogle",obj:[]},{name:"adngin",obj:{queue:[],metrics:{timing:{}}},queue:"queue",path:"/"+escape(r.site)+"/"+escape(r.version)+"/adngin.js"},{name:"scripts",argus:{obj:{cmd:[]},queue:"cmd"}}]}}]},n=window.performance,o=n&&n.now?function(){return Math.floor(n.now())}:function(){return-1};function i(e,t){var r=function(e){if(n&&n.getEntriesByType)for(var t=0;t<n.getEntriesByType("resource").length;t++){var o=n.getEntriesByType("resource")[t];if(e(o.name))return o}return{startTime:-1,responseEnd:-1}}(t);d[e]=d[e]||{},d[e].requested=[Math.floor(r.startTime)],d[e].loaded=[Math.floor(r.responseEnd)],d[e].ready=[o()]}function a(e,n,t){var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.onload=function(){i(e,(function(e){return-1!==e.indexOf(n.toLowerCase())})),r.resources[e].loaded=!0,t&&t()},d[e]=d[e]||{},d[e].queued=[o()],r.resources=r.resources||{},r.resources[e]={scriptElement:a,loaded:!1},a.src=n,document.head.appendChild(a)}function s(e,n,t){e.scripts.forEach((function(e){var o=r.settings[e.name]||{};!Array.isArray(o)&&o.load&&n(o.objName,e),e.onLoad&&e.onLoad.scripts&&t(e.onLoad)}))}function c(e,n){var t=n.obj;if(t)if(window[e]){var o=window[e];for(var r in t)o[r]=o[r]||t[r]}else window[e]=t}function u(e,n){n.queue&&window[e][n.queue].push((function(){d[n.name]=d[n.name]||{},d[n.name].apiReady=[o()]}))}(window.adsbygoogle=window.adsbygoogle||[]).pauseAdRequests=1,window.snigelPubConf=window.snigelPubConf||{},function e(n){s(n,c,e)}(e);var l=window[r.settings.adngin.objName],d=l.metrics.timing;i("loader",(function(e){return/.*snigel.*loader.js$/i.test(e)})),function e(n){s(n,u,e)}(e),function e(n){if(!n)return!1;n.emitEvent&&(window.dispatchEvent(new CustomEvent(n.emitEvent)),l[n.emitEvent]=!0,d.loader[n.emitEvent]=[o()]),n.scripts&&n.scripts.forEach((function(n){var t=r.settings[n.name]||{};if(Array.isArray(t))t.forEach((function(e){if(!e.freq||Math.floor(100*Math.random())<e.freq){var t=e.name,o=n[t]||{};c(t,o),u(t,o),a(e.name||e.url,e.url)}}));else{var o=function(){var e=!!window[t.objName];return t.load&&(!e||e&&!n.skipLoadOnExists)};o()&&n.loadModule&&n.loadModule(),o()&&t.url?function(e,n){var t=r.settings[e.name].queryParameters,o=r.settings[e.name].url+(e.path||"")+(t?"?"+t:"");a(e.name,o,n)}(n,(function(){e(n.onLoad)})):e(n.onLoad)}}))}(e)}()}catch(e){if(!0===r.passThroughException)throw e;console.error(e)}},function(e,n,t){function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==t)return;var o,r,i=[],a=!0,s=!1;try{for(t=t.call(e);!(a=(o=t.next()).done)&&(i.push(o.value),!n||i.length!==n);a=!0);}catch(e){s=!0,r=e}finally{try{a||null==t.return||t.return()}finally{if(s)throw r}}return i}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return r(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return r(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=new Array(n);t<n;t++)o[t]=e[t];return o}var i=t(2),a=t(3);function s(e,n,t){var o=function(){var o=e.getElementById("sn-session-override-warnings");o||((o=e.createElement("div")).id="sn-session-override-warnings",o.setAttribute("style","background: darkred; position: fixed; bottom: 0; left: 0; right: 0; z-index: 1000000; padding: 0.25em; color: white; font-family: monospace; font-size: small;"),o.innerHTML="(!) Session overrides:",o.addEventListener("mouseover",(function(){this.style.opacity="0.20"})),o.addEventListener("mouseout",(function(){this.style.opacity="1"})),e.body.appendChild(o)),o.innerHTML+=" ("+n+":"+t+")"},r=e.readyState;if("interactive"===r||"complete"===r)o();else{e.addEventListener("DOMContentLoaded",(function n(){e.removeEventListener("DOMContentLoaded",n,!1),o()}),!1)}}n.init=function(){try{for(var e in window._snigelConfig=window._snigelConfig||{},a)"exp"!=e&&(window._snigelConfig[e]=a[e]);var n=window.localStorage;if(a.exp){var t,r,c=o((n.getItem("_sn_exp")||"").split(";"),2);t=c[0],r=c[1],t!=a.cfgVer&&(t=a.cfgVer,r=i.undefined),a.exp.some((function(e){if(r==e.id||r==i.undefined&&Math.random()<e.freq){var n="exp="+(r=e.id),t=e.settings.adngin.queryParameters;return e.settings.adngin.queryParameters=t?t+"&"+n:n,window._snigelConfig.settings=e.settings,!0}return!1}))||(r=0),n.setItem("_sn_exp",t+";"+r)}else n.removeItem("_sn_exp");var u=JSON.parse(window.sessionStorage.getItem("snSessionOverrides"));if(null!==u)for(var l in u){var d=u[l];a.settings[l].url=d.url,a.settings[l].overrideBranch=d.branch,console.warn("Override detected. Loading '"+l+"' branch '"+d.branch+"'."),s(document,l,d.branch)}}catch(e){}},n.get=function(){return window._snigelConfig||{}}},function(e,n){n.undefined=void 0},function(e){e.exports=JSON.parse('{"site":"w3schools.com","version":"7529-1693414475147","cfgVer":"8636","settings":{"adconsent":{"load":true,"objName":"adconsent","url":"//cdn.snigelweb.com/adconsent/adconsent.js"},"pbjs":{"load":true,"objName":"pbjs","url":"//cdn.snigelweb.com/prebid/7.53.0/prebid.js"},"gpt":{"load":true,"objName":"googletag","url":"//securepubads.g.doubleclick.net/tag/js/gpt.js"},"adngin":{"load":true,"objName":"adngin","url":"//adengine.snigelweb.com"},"apstag":{"load":true,"objName":"apstag","url":"//c.amazon-adsystem.com/aax2/apstag.js"},"scripts":[{"url":"//cdn.snigelweb.com/argus/argus.js","freq":100,"name":"argus"},{"url":"//boot.pbstck.com/v1/tag/6b8021b6-6874-4ef7-a983-9bb3141ccb5c","freq":5,"name":"pubstack"}]}}')},function(e,n){},function(e,n,t){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){return(r="function"==typeof Symbol&&"symbol"==o(Symbol.iterator)?function(e){return o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":o(e)})(e)}!function(e,n,t,o,i,a){var s=e._snigelConfig;if(s)try{t=s.settings.adconsent.objName}catch(e){}var c=void 0,u="__"+t;try{a=localStorage}catch(e){}var l,d=e.performance,f=d&&d.now?function(){return Math.floor(d.now())}:function(){return 0};function p(e){if(window.argus){var n=1===e.length&&e[0]instanceof Error?{stack:e[0].stack}:{log:e,stack:(new Error).stack};window.argus.cmd.push((function(){window.argus.queueError("adconsent",n)}))}}!function(){if("function"===r(e.CustomEvent))return!1;function t(e,t){t=t||{bubbles:!1,cancelable:!1,detail:c};var o=n.createEvent("CustomEvent");return o.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),o}t.prototype=e.Event.prototype,e.CustomEvent=t}();try{var g=function(n,t,o,r){e.console[n]&&L.level>=t&&console[n].apply(console,function(e,n,t){return e=[].slice.call(e),n&&e.unshift(n),e.unshift("display: inline-block; color: #fff; background: "+t+"; padding: 1px 4px; border-radius: 3px;"),e.unshift("%cAdConsent"),e}(o,n.toUpperCase()+":",r))},v=function(e,n){return{region:e,loaded:!1,applies:c,version:n,status:"stub"}},m=function(n){return function(t,o,r){e[n](t,c,r,o)}},b=function(e,n,t){return!n||n===e.version||(C(t,null,!1),x("Wrong framework version detected: "+n),!1)},y=function(e,n,t){var o=M.applies?c:M.applies,r={tcString:c,tcfPolicyVersion:2,cmpId:229,cmpVersion:76,gdprApplies:o,eventStatus:!1===o?"tcloaded":c,cmpStatus:M.status,listenerId:n,isServiceSpecific:!0,useNonStandardStacks:!1,publisherCC:j.publisherCC,purposeOneTreatment:!1};x("Sending TCData structure:",r,t),C(t,r,!0)},h=function(e,n,t,o,r){e.queue.push({command:n,version:t,parameter:o,callback:r})},w=function(t,o){var i=t+"Locator";!function t(){if(!e.frames[i]){var o=n.body;if(o){var r=n.createElement("iframe");r.style.display="none",r.name=i,o.appendChild(r)}else setTimeout(t,5)}}();var a=function(n){var o=n.data,r="string"==typeof o;try{var i=(r?JSON.parse(o):o)[t+"Call"];i&&e[t](i.command,i.version,(function(e,o){try{if(n&&n.source&&n.source.postMessage){var a={};a[t+"Return"]={returnValue:e,success:o===c||o,callId:i.callId},n.source.postMessage(r?JSON.stringify(a):a,"*")}}catch(e){}}),i.parameter)}catch(e){}};"function"!==r(e[t])&&(e[t]=function(n,r,i,a){var s=e[t];if(s.queue){for(var c in o)if(n===c){var u=!0;(0,o[c])(s,n,r,i,a);break}u||h(s,n,r,a,i)}else s(n,r,i,a)},e[t].queue=[],e.addEventListener?e.addEventListener("message",a,!1):e.attachEvent("onmessage",a))},C=function(e,n,t){e&&"function"==typeof e&&setTimeout((function(){e(n,t)}),0)},E=function(n,t,o,r,a){if(o||I("setConsentRegion is deprecated and should be only used in debug mode."),A.region===c)if(O[a]){for(var s in T){var u=T[s];u.applies=u.region==a,u.applies?J=s:(u.loaded=!0,u.status="loaded")}A.region=a,q("Configured consent region "+O[a]),function(){if(1!==A.region&&_.processListeners(y),2!==A.region){var n=e[i],t=n.queue;if(t){n.queue=[];for(var o=0;o<t.length;o++){var r=t[o];n(r.command,r.version,r.callback,r.parameter)}}}}()}else k("Incorrect consent region "+a)},S=m(u);S.gdpr=m("__tcfapi");var _=S.gdpr;_.listenerId=1,_.tcfListeners=[],_.addEventListener=function(e,n,t){if(b(M,e,n)){x("Adding event listener "+_.listenerId,n);var o={id:_.listenerId++,callback:n||function(){}};_.tcfListeners.push(o),t(null,o.id,o.callback)}},_.removeEventListener=function(e,n,t,o,r){if(b(M,t,o)){x("Removing event listener "+r);for(var i=0;i<_.tcfListeners.length;i++)if(_.tcfListeners[i].id==r)return _.tcfListeners.splice(i,1),void C(o,!0);I("Couldn't find listener id "+r+"."),C(o,!1)}},_.getTCData=function(e,n,t,o){b(M,t,o)&&y(0,0,o)},_.processListeners=function(e){for(var n=_.tcfListeners.slice(),t=0;t<n.length;t++)e(null,n[t].id,n[t].callback)},S.ccpa=m(i),S.version=76,S.cmpId=229,S.cfg={apiBaseUrl:"https://cdn.snigelweb.com/adconsent/76",publisherCC:"US"};var j=S.cfg;S.log={levels:{off:0,error:1,warning:2,info:3,debug:4},level:2,error:function(){p(arguments),g("error",1,arguments,"#ff0000")},warn:function(){g("warn",2,arguments,"#ffe600")},info:function(){g("info",3,arguments,"#3b88a3")},debug:function(){g("debug",4,arguments,"#808080")}};var L=S.log,x=L.debug,q=L.info,I=L.warn,k=L.error;S.consent={regions:{0:"NONE",1:"GDPR",2:"CCPA"},region:c,api:{__tcfapi:v(1,2),__uspapi:v(2,1)}};var A=S.consent,O=A.regions,T=A.api,M=T.__tcfapi,N=T[i];S.analytics={enabled:!1,callback:c,send:function(e){P.sendEvent(O[A.region],e,f())},sendEvent:function(n,t,o){q("Sending analytics event action"+(P.enabled?"":" disabled")+": "+n+", label: "+t+", value: "+o),P.enabled&&(P.callback||function(n){e.gtag?gtag("event",n.action,{event_category:n.category,event_label:n.label,event_value:n.value}):e.ga?ga("send",{hitType:"event",eventCategory:n.category,eventAction:n.action,eventLabel:n.label,eventValue:n.value,nonInteraction:n.nonInteraction}):I("Unable to find Google Analytics module (gtag or ga).")})({category:"AdConsent",action:n,label:t||n,value:o||0,nonInteraction:!0})}};var P=S.analytics,D=P.send;S.event={fired:{},dispatchCustomEvent:function(e,t,o){o&&B[e]||(B[e]=!0,x("Emitting custom event "+e+" with details: ",t),n.dispatchEvent(new CustomEvent(e,t)))},dispatchCustomEventConsent:function(e,n){var t={0:"N/A",1:"NoConsent",2:"PartialConsent",3:"FullConsent"};D(t[n]),1==A.region&&0!=e&&D("Publisher"+t[e]),V.dispatchCustomEvent("cmpConsentAvailable",{detail:{consentSummary:{mapping:{0:"not available",1:"no consent",2:"partial consent",3:"full consent"},publisherConsent:e,vendorsConsent:n,gdprApplies:M.applies,uspApplies:N.applies}}})}};var V=S.event,B=V.fired,R=(l=e.location.search)?l.replace(/^\?/,"").split("&").reduce((function(e,n){var t=n.split("="),o=t[0],r=t.length>1?t[1]:c;return/\[\]$/.test(o)?(e[o=o.replace("[]","")]=e[o]||[],e[o].push(r)):e[o]=r||"",e}),{}):{},U=("true"==R.sn_debug?"debug":null)||("true"==R.adconsent_debug?"debug":null)||R.adconsent_log;if(L.level=L.levels[U]||L.level,e[t])return void k("Stub is tried to load again!");if(e.__tcfapi||e[i])return void I("A cmp is already registered in the system. AdConsent is stopping.");e[t]=S;var J=c,G=!1;w("__tcfapi",{ping:function(e,n,t,o){var r={gdprApplies:M.applies,cmpLoaded:M.loaded,cmpStatus:M.status,displayStatus:"disabled",apiVersion:"2.0",cmpVersion:76,cmpId:229,gvlVersion:c,tcfPolicyVersion:2};C(o,r,!0)},getTCData:_.getTCData,addEventListener:function(e,n,t,o,r){_.addEventListener(t,o,y)},removeEventListener:_.removeEventListener}),w(i,{getUSPData:function(e,n,t,o,r){!1===N.applies?b(N,t,o)&&C(o,{version:1,uspString:"1---"},!0):h(e,n,t,r,o)}}),w(u,{start:function t(o,r,i,s,u){if(A.region!==c){if(!G)if(G=!0,0==A.region)V.dispatchCustomEventConsent(3,3);else if(J){var l=n.createElement("script");l.type="text/javascript",l.async=!0,l.charset="utf-8",l.src=S.cfg.apiBaseUrl+"/adconsent"+J+".js",n.head.appendChild(l)}}else!function(n,t){if((!n||!n.country)&&(n=null,a)){var o=a.getItem("snconsent_geo");if(o){var r=a.getItem("snconsent_geo_exp");if(r)try{parseInt(r)>=(new Date).getTime()&&(n=JSON.parse(e.atob(o)))}catch(e){}}}if(n)t(n);else{var i=new XMLHttpRequest;i.open("GET","https://pro.ip-api.com/json/?fields=57354&key=33arzTfj1gigDqW"),i.timeout=5e3,i.onload=function(){var n=i.responseText.toLowerCase(),o=JSON.parse(n);o={country:o.countrycode,region:o.regionname},a&&(a.setItem("snconsent_geo",e.btoa(JSON.stringify(o))),a.setItem("snconsent_geo_exp",(new Date).getTime()+36e5)),t(o)},i.onerror=i.ontimeout=function(){t(null)},i.send()}}(u,(function(e){e&&(j.country=e.country?e.country.toLowerCase():null,j.region=(e.region||"").toLowerCase()),"us"!==j.country||"california"!==j.region&&"ca"!==j.region?-1!=="at be bg hr cy cz dk ee fi fr de gr hu is ie it lv li lt lu mt nl no pl pt ro sk si es se gb".indexOf(j.country)?E(0,0,1,0,1):(j.country||(D("ErrorGeotargeting"),k("Geotargeting failed")),E(0,0,1,0,0)):E(0,0,1,0,2),t()}))},setPublisherCC:function(e,n,t,o,r){"string"!=typeof r||2!=r.length?C(o,{message:"Invalid publisher country code detected. Ignoring call."},!1):(j.publisherCC=r.toUpperCase(),C(o,null,!0))},setConsentRegion:E,enableGoogleAnalytics:function(e,n,t,o,r){P.enabled=r===c||!!r,P.callback=o}})}catch(e){if(p(e),s&&s.passThroughException)throw e;console.error(e)}}(window,document,"adconsent",0,"__uspapi")}]);



Unique Id: d3c594f1-4719-41cf-9bce-f416e0e337d7
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/user-session.js?v=1.0.29
Async: 0
Defer: 0
Content: /*
  User session script
  Version: 1.0.29
*/

window.UserSession = {
  _debug: null,
  // _tmpAccessTokenCleanupTimeout: null,
  _fetchTimeout: 15000, // in ms
  _refreshUserSessionState: {
    inProgress: false,
    awaitingResult: {},
  },
  _cookies: null,
  loggedIn: null,
  _cognito: {
    region: 'us-east-1',
    userPoolId: 'us-east-1_uG9SGX7Wd',
  },
  _profileBaseUrl: 'https://profile.w3schools.com',
};

UserSession.getCognitoIssuerUrl = function (cognitoCfg) {
  return 'https://cognito-idp.' + cognitoCfg.region + '.amazonaws.com/' + cognitoCfg.userPoolId;
};

UserSession.verifyUserSession = function (
  cognitoCfg,
) {
  var output = {
    error: {
      code: 'FPVUS',
      description: 'Failed performing "verifyUserSession"',
    },
    data: {},
  };

  var userSessionStatusCode = UserSession.getCookie('userSession'); // userSessionStatusCode
  var userSessionMetaRawStr = UserSession.getCookie('userSessionMeta');
  var accessToken = UserSession.getCookie('accessToken');

  var userSessionStatusCodeIsSet = typeof userSessionStatusCode !== 'undefined' && userSessionStatusCode;
  var userSessionMetaIsSet = typeof userSessionMetaRawStr !== 'undefined' && userSessionMetaRawStr;
  var accessTokenIsSet = typeof accessToken !== 'undefined' && accessToken;

  if (
    !accessTokenIsSet
    && !userSessionStatusCodeIsSet // long time no visit on new sessions
  ) { // backwards compatible
    output.error = {
      code: 'USNF', // legacy code
      description: 'User session not found',
      meta: {
        origin: 'verifyUserSession',
      },
    };

    return output;
  } else if (
    userSessionStatusCodeIsSet
    && userSessionStatusCode === '0' // UserSessionStatusCodeEnum.LoggedOut
  ) { // new flow backwards compatible ( new states are fine )
    output.error = {
      code: 'USNF', // legacy code
      description: 'User session not found',
      meta: {
        origin: 'verifyUserSession',
        legacy: false,
        logOut: true,
        flow: 'Explicit "userSessionStatusCode" flag',
      },
    };

    return output;
  } else if (
    userSessionStatusCodeIsSet
    && userSessionStatusCode === '-1' // UserSessionStatusCodeEnum.LegacySendToRefresh
  ) { // backwards compatible ( previously "userSession" cookie was set to "-1" and user was redirected to profile refresh page )
    output.error = {
      code: 'USSBR', // legacy code
      description: 'User session should be refreshed via redirect',
      meta: {
        legacy: true,
        flow: 'Explicit "userSessionStatusCode" flag',
      }
    };

    return output;
  } else if (
    userSessionStatusCodeIsSet
    && userSessionStatusCode === '-2' // UserSessionStatusCodeEnum.LoginRequired
  ) { // new flow backwards compatible ( new states are fine )
    output.error = {
      code: 'USLA',
      description: 'User should login again',
      meta: {
        legacy: false,
        flow: 'Explicit "userSessionStatusCode" flag',
      }
    };

    return output;
  } else if (
    userSessionStatusCodeIsSet
    && userSessionStatusCode === '-3' // UserSessionStatusCodeEnum.RefreshRequired
  ) { // new flow backwards compatible ( new states are fine )
    output.error = {
      code: 'ATSBR',
      description: 'Access token should be refreshed',
      meta: {
        legacy: !userSessionMetaIsSet,
        flow: 'Explicit "userSessionStatusCode" flag',
      }
    };

    return output;
  } else if ( // backwards compatible
    !userSessionMetaIsSet // previously "userSessionMeta" cookie did not exist -> legacy flow
    && userSessionStatusCodeIsSet
    && !accessTokenIsSet
  ) {
    output.error = {
      code: 'USHE', // legacy code
      description: 'User session has expired',
      meta: {
        legacy: true,
      }
    };

    return output;
  } else if (userSessionMetaIsSet) { // new flow backwards compatible
    var getUserSessionCookieMetaRes = UserSession.getUserSessionCookieMeta();

    if (getUserSessionCookieMetaRes.error.code !== '0') {
      output.error = {
        code: 'USMINV',
        description: 'User session meta is not valid',
        meta: {
          legacy: false,
          getUserSessionCookieMetaRes: getUserSessionCookieMetaRes,
        }
      };

      return output;
    }

    var currentUts = UserSession.getLocalCurrentUts();

    if (getUserSessionCookieMetaRes.data.rtexp < currentUts) {
      output.error = {
        code: 'RTHE',
        description: 'Refresh token has expired',
        meta: {
          legacy: false,
        }
      };

      return output;
    } else if (getUserSessionCookieMetaRes.data.atexp < currentUts) {
      output.error = {
        code: 'ATHE',
        description: 'Access token has expired',
        meta: {
          legacy: false,
        }
      };

      return output;
    }
  }

  var verifyAccessTokenRes = UserSession.verifyAccessToken(
    cognitoCfg,
    accessToken,
  );

  if (verifyAccessTokenRes.error.code !== '0') {
    output.error = verifyAccessTokenRes.error;

    return output;
  }

  output.data = verifyAccessTokenRes.data;

  output.error = { code: '0' };

  return output;
};

UserSession.verifyAccessToken = function (
  cognitoCfg,
  accessToken,
) {
  var output = {
    error: {
      code: 'FPVAT',
      description: 'Failed performing "verifyAccessToken"',
    },
    data: {},
  };

  var accessTokenMeta = UserSession.parseAccessToken(accessToken);

  if (accessTokenMeta.error.code !== '0') {
    output.error = accessTokenMeta.error;

    return output;
  }

  output.data = accessTokenMeta.data;

  var claim = accessTokenMeta.data.payload;

  var issuer = UserSession.getCognitoIssuerUrl(cognitoCfg);

  if (claim.iss !== issuer) {
    output.error = {
      code: 'ATINVCIDNM',
      description: 'Access token is not valid. Claim issuer does not match',
      meta: {
        accessToken: accessToken,
        issuer: issuer,
        claim: claim,
      }
    };

    return output;
  }

  if (claim.token_use !== 'access') {
    output.error = {
      code: 'ATINVCUINA',
      description: 'Access token is not valid. Claim use is not access',
      meta: {
        accessToken: accessToken,
        claim: claim,
      }
    };

    return output;
  }

  output.error = { code: '0' };

  return output;
};

UserSession.parseAccessToken = function (
  accessToken,
  parseHeader,
) {
  var output = {
    error: {
      code: '0'
    },
    data: {},
  };

  if (
    typeof accessToken === 'undefined'
    || !accessToken
  ) {
    output.error = {
      code: 'USNF', // legacy code
      description: 'User session not found'
    };

    return output;
  }

  try {
    var accessTokenSections = accessToken.split('.');

    if (accessTokenSections.length < 3) { // maybe in future we may have more than 3 chunks
      output.error = {
        code: 'ATINVWNOTS',
        description: 'Access token is not valid. Wrong number of token sections',
        meta: {
          accessToken: accessToken,
          accessTokenSections: accessTokenSections,
        }
      };

      return output;
    }

    var accessTokenHeader = undefined;

    if (typeof parseHeader !== 'undefined' && parseHeader) {
      var accessTokenHeaderEncodedStr = accessTokenSections[0];

      var accessTokenHeaderDecodedStrRes = UserSession.decodeBase64UrlEncodedJwtSection(accessTokenHeaderEncodedStr);

      if (accessTokenHeaderDecodedStrRes.error.code !== '0') {
        output.error = {
          code: 'ATINVFDTTH',
          description: 'Access token is not valid. Failed decoding the token header',
          meta: {
            accessToken: accessToken,
            accessTokenHeaderEncodedStr: accessTokenHeaderEncodedStr,
            decodingError: accessTokenHeaderDecodedStrRes.error
          }
        };

        return output;
      }

      var accessTokenHeaderParseRes = UserSession.parseJson(
        accessTokenHeaderDecodedStrRes.data, // jsonStr
        ['kid', 'alg'], // requiredFields
      );

      if (accessTokenHeaderParseRes.error.code !== '0') {
        output.error = {
          code: 'ATINVFPTH',
          description: 'Access token is not valid. Failed parsing token header',
          meta: {
            accessToken: accessToken,
            accessTokenHeaderEncodedStr: accessTokenHeaderEncodedStr,
            accessTokenHeaderDecodedStr: accessTokenHeaderDecodedStrRes.data,
            parseError: accessTokenHeaderParseRes.error
          }
        };

        return output;
      }

      accessTokenHeader = accessTokenHeaderParseRes.data;
    }

    var accessTokenPayloadEncodedStr = accessTokenSections[1];

    var accessTokenPayloadDecodedStrRes = UserSession.decodeBase64UrlEncodedJwtSection(accessTokenPayloadEncodedStr);

    if (accessTokenPayloadDecodedStrRes.error.code !== '0') {
      output.error = {
        code: 'ATINVFDTTP',
        description: 'Access token is not valid. Failed decoding the token payload',
        meta: {
          accessToken: accessToken,
          accessTokenPayloadEncodedStr: accessTokenPayloadEncodedStr,
          decodingError: accessTokenPayloadDecodedStrRes.error
        }
      };

      return output;
    }

    var accessTokenPayloadParseRes = UserSession.parseJson(
      accessTokenPayloadDecodedStrRes.data, // jsonStr
      [
        'sub',
        // 'event_id',
        'token_use',
        'scope',
        'auth_time',
        'iss',
        'exp',
        'iat',
        'jti',
        'client_id',
        'username',
      ], // requiredFields
    );

    if (accessTokenPayloadParseRes.error.code !== '0') {
      output.error = {
        code: 'ATINVFPTP',
        description: 'Access token is not valid. Failed parsing token payload',
        meta: {
          accessToken: accessToken,
          accessTokenPayloadEncodedStr: accessTokenPayloadEncodedStr,
          accessTokenPayloadDecodedStr: accessTokenPayloadDecodedStrRes.data,
          parseError: accessTokenPayloadParseRes.error
        }
      };

      return output;
    }

    var accessTokenPayload = accessTokenPayloadParseRes.data;

    var accessTokenExpiryUts = parseInt(accessTokenPayload.exp);

    var accessTokenExpiryDto = new Date(accessTokenExpiryUts * 1000);

    var accessTokenTtl = 43200 - 60; // 12 hours in seconds - 1 minute to invalidate slightly earlier

    var localCurrentUts = UserSession.getLocalCurrentUts();

    var accessTokenLocalExpiryUts = localCurrentUts + accessTokenTtl;

    var accessTokenLocalExpiryDto = new Date(accessTokenLocalExpiryUts * 1000);

    output.data = {
      rawStr: accessToken,
      header: accessTokenHeader,
      payload: accessTokenPayload,
      expiryDto: accessTokenExpiryDto,
      expiryUts: accessTokenExpiryUts,
      ttl: accessTokenTtl,
      localCurrentUts: localCurrentUts,
      localExpiryUts: accessTokenLocalExpiryUts,
      localExpiryDto: accessTokenLocalExpiryDto,
    };
  } catch (exc) {
    output.error = UserSession.getMetaPreparedFromException(exc);
  }

  return output;
};

UserSession.getUserSessionCookieMeta = function () {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "getUserSessionCookieMeta"'
    },
    data: {},
  };

  var userSessionMetaRawStr = UserSession.getCookie('userSessionMeta');

  if (
    typeof userSessionMetaRawStr === 'undefined'
    || !userSessionMetaRawStr
  ) {
    output.error = {
      code: 'USMCINP',
      description: 'User session meta cookie is not present',
    };

    return output;
  }

  var userSessionMetaRawStrDecodeRes = UserSession.getCookieValueDecodedStr(
    userSessionMetaRawStr,
    1, // atob
  );

  if (userSessionMetaRawStrDecodeRes.error.code !== '0') {
    output.error = {
      code: 'DFUSMC',
      description: 'Failed decoding user session meta cookie',
      meta: {
        userSessionMetaRawStr: userSessionMetaRawStr,
        userSessionMetaRawStrDecodeRes: userSessionMetaRawStrDecodeRes,
      }
    };

    return output;
  }

  var userSessionMetaRawJsonStr = userSessionMetaRawStrDecodeRes.data;

  if (userSessionMetaRawJsonStr.indexOf('{') !== 0) {
    output.error = {
      code: 'USMCINV1',
      description: 'User session meta cookie is not valid',
      meta: {
        userSessionMetaRawStr: userSessionMetaRawStr,
        userSessionMetaRawJsonStr: userSessionMetaRawJsonStr,
      },
    };

    return output;
  }

  var userSessionMetaParseRes = UserSession.parseJson(
    userSessionMetaRawJsonStr,
    [
      'id',
      'iss',
      'atexp',
      'rtexp',
    ],
  );

  if (userSessionMetaParseRes.error.code !== '0') {
    output.error = {
      code: 'FPUSMC',
      description: 'Failed parsing user session meta cookie',
      meta: {
        userSessionMetaRawJsonStr: userSessionMetaRawJsonStr,
        userSessionMetaParseRes: userSessionMetaParseRes,
      },
    };

    return output;
  }

  output.data = userSessionMetaParseRes.data;

  output.error = { code: '0' };

  return output;
};

UserSession.getAccessTokenCookieLifespan = function (
  userSessionMeta,
  userSessionLifespan,
) {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "getAccessTokenCookieLifespan"'
    },
    data: {},
  };

  var currentUts = UserSession.getLocalCurrentUts();

  var expiryUts = 0;

  if (typeof userSessionLifespan !== 'undefined') {
    if (userSessionLifespan.accessTokenExpiryUiUts > userSessionLifespan.refreshTokenExpiryUiUts) { // possible on last refresh
      expiryUts = userSessionLifespan.accessTokenExpiryUiUts;
    } else {
      expiryUts = userSessionLifespan.refreshTokenExpiryUiUts;
    }
  } else if (typeof userSessionMeta === 'undefined') {
    var getUserSessionCookieMetaRes = UserSession.getUserSessionCookieMeta();

    if (getUserSessionCookieMetaRes.error.code !== '0') {
      output.error = getUserSessionCookieMetaRes.error;

      return output;
    }

    userSessionMeta = getUserSessionCookieMetaRes.data;
  }

  if (
    expiryUts === 0
    && typeof userSessionMeta !== 'undefined'
  ) {
    if (userSessionMeta.atexp > userSessionMeta.rtexp) { // possible on last refresh
      expiryUts = userSessionMeta.atexp;
    } else {
      expiryUts = userSessionMeta.rtexp;
    }
  }

  output.data = {
    currentUts: currentUts,
    expiryUts: expiryUts,
    expiryDto: new Date(expiryUts * 1000),
    ttl: expiryUts - currentUts,
  };

  output.error = { code: '0' };

  return output;
};

UserSession.changeStatusCodeInUserSessionCookies = function (newStatusCode) {
  var userSessionCookieTtl = 7776000; // 90 days in seconds
  var userSessionCookieExpiryUts = UserSession.getLocalCurrentUts() + userSessionCookieTtl;
  var userSessionCookieExpiryDto = new Date(userSessionCookieExpiryUts * 1000);

  UserSession.resetCookie({
    name: 'userSession', // userSessionStatusCode
    value: newStatusCode,
    maxAge: userSessionCookieTtl,
    expires: userSessionCookieExpiryDto,
  });

  var userSessionMetaRawStr = UserSession.getCookie('userSessionMeta');

  if (
    typeof userSessionMetaRawStr !== 'undefined'
    && userSessionMetaRawStr
  ) {
    // reseting only to sync the expiry date-time with "userSession" cookie
    UserSession.resetCookie({
      name: 'userSessionMeta',
      value: userSessionMetaRawStr,
      maxAge: userSessionCookieTtl,
      expires: userSessionCookieExpiryDto,
    });
  }
};

UserSession.upsertActiveUserSessionCookies = function (
  accessToken,
  userInfoCookie,
  sessionLifespan,
) {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "upsertActiveUserSessionCookies"',
    },
    data: {},
  };

  var userSessionCookieTtl = 7776000; // 90 days in seconds
  var userSessionCookieExpiryUts = sessionLifespan.currentUiUts + userSessionCookieTtl;
  var userSessionCookieExpiryDto = new Date(userSessionCookieExpiryUts * 1000);

  if (typeof sessionId === 'undefined') { // previously initialized
    var getUserSessionCookieMetaRes = UserSession.getUserSessionCookieMeta();

    if (getUserSessionCookieMetaRes.error.code !== '0') {
      output.error = {
        code: 'FRUSM',
        description: 'Failed retrieving user session meta',
        meta: {
          getUserSessionCookieMetaRes: getUserSessionCookieMetaRes,
        }
      };

      return output;
    }

    sessionId = getUserSessionCookieMetaRes.data.id;
  }

  var userSessionMeta = {
    id: sessionId,
    iss: sessionLifespan.refreshTokenBaseUiUts,
    atexp: sessionLifespan.accessTokenExpiryUiUts,
    rtexp: sessionLifespan.refreshTokenExpiryUiUts,
  };

  var getAccessTokenCookieLifespanRes = UserSession.getAccessTokenCookieLifespan(
    undefined,
    sessionLifespan,
  );

  UserSession.logDebug('upsertActiveUserSessionCookies -> getAccessTokenCookieLifespanRes: ', getAccessTokenCookieLifespanRes);

  if (getAccessTokenCookieLifespanRes.error.code !== '0') {
    output.error = {
      code: 'FRATCL',
      description: 'Failed retrieving access token cookie lifespan',
      meta: {
        getAccessTokenCookieLifespanRes: getAccessTokenCookieLifespanRes,
      }
    };

    return output;
  }

  var userSessionMetaEncodingRes = UserSession.getCookieValueEncodedStr(
    JSON.stringify(userSessionMeta),
    1, // btoa
  );

  if (userSessionMetaEncodingRes.error.code !== '0') {
    output.error = {
      code: 'FEUSMD',
      description: 'Failed encoding user session meta data',
      meta: {
        userSessionMetaEncodingRes: userSessionMetaEncodingRes,
      }
    };

    return output;
  }

  UserSession.resetCookie({
    name: 'userSession', // userSessionStatusCode
    value: '1', // UserSessionStatusCodeEnum.Active
    maxAge: userSessionCookieTtl,
    expires: userSessionCookieExpiryDto,
  });

  UserSession.resetCookie({
    name: 'userSessionMeta',
    value: userSessionMetaEncodingRes.data,
    maxAge: userSessionCookieTtl,
    expires: userSessionCookieExpiryDto,
  });

  var accessTokenTtl = getAccessTokenCookieLifespanRes.data.ttl;
  var accessTokenExpiryDto = getAccessTokenCookieLifespanRes.data.expiryDto;

  UserSession.resetCookie({
    name: 'accessToken',
    value: accessToken,
    maxAge: accessTokenTtl,
    expires: accessTokenExpiryDto,
  });

  UserSession.resetCookie({
    name: '__c_u_i_1', // userInfoCookie
    value: userInfoCookie,
    maxAge: accessTokenTtl,
    expires: accessTokenExpiryDto,
  });

  output.data = userSessionMeta;

  output.data.statusCode = '1'; // UserSessionStatusCodeEnum.Active

  output.error = { code: '0' };

  return output;
};

/**
 * @deprecated Legacy user session refresh logic kept for backwards compatibility.
 * Redirect to profile then refresh and bring the user back to current location
 */
UserSession.refreshUserSessionViaRedirect = function (context, originUrl, reason) {
  UserSession.logDebug('refreshUserSessionViaRedirect -> init: ', {
    context: context,
    originUrl: originUrl,
  });

  UserSession.setUserSessionCookieDebugMeta({
    origin: originUrl,
    context: context,
    description: 'refreshUserSessionViaRedirect',
    reason: reason,
    prevStatusCode: UserSession.getCookie('userSession'),
    newStatusCode: '-1', // UserSessionStatusCodeEnum.LegacySendToRefresh
  });

  UserSession.changeStatusCodeInUserSessionCookies(
    '-1', // UserSessionStatusCodeEnum.LegacySendToRefresh
  );

  var redirectUrl = UserSession._profileBaseUrl + '/refresh-session?redirect_url=' + encodeURIComponent(originUrl);

  UserSession.logDebug('refreshUserSessionViaRedirect -> redirectUrl: ', redirectUrl);

  if (
    localStorage.getItem('skipRedirect') === 'true'
    && UserSession._isDebugMode()
  ) {
    debugger;

    return;
  }

  window.location.href = redirectUrl;
};

/**
 * Redirect to profile for re-sign in and bring the user back to current location
 */
UserSession.restartUserSessionViaRedirect = function (context, originUrl, reason) {
  UserSession.logDebug('restartUserSessionViaRedirect -> init: ', {
    context: context,
    originUrl: originUrl,
  });

  UserSession.setUserSessionCookieDebugMeta({
    origin: originUrl,
    context: context,
    description: 'restartUserSessionViaRedirect',
    reason: reason,
    prevStatusCode: UserSession.getCookie('userSession'),
    newStatusCode: '-2', // UserSessionStatusCodeEnum.LoginRequired
  });

  UserSession.changeStatusCodeInUserSessionCookies(
    '-2', // UserSessionStatusCodeEnum.LoginRequired
  );

  var redirectUrl = UserSession._profileBaseUrl + '/log-in?redirect_url=' + encodeURIComponent(originUrl)

  UserSession.logDebug('restartUserSessionViaRedirect -> redirectUrl: ', redirectUrl);

  if (
    localStorage.getItem('skipRedirect') === 'true'
    && UserSession._isDebugMode()
  ) {
    debugger;

    return;
  }

  window.location.href = redirectUrl;
};

// UserSession.logOut = function () {
//   UserSession.changeStatusCodeInUserSessionCookies(
//     '0', // UserSessionStatusCodeEnum.LoggedOut
//   );

//   UserSession.loggedIn = false;
// };

UserSession._sleep = function (
  ms,
  callback,
) {
  setTimeout(callback, ms);
};

UserSession._refreshBackendUserSession = function (
  context,
  callback,
) {
  UserSession.logDebug('(1) _refreshBackendUserSession -> init: ', {
    context: context,
  });

  var accessToken = UserSession.getCookie('accessToken');

  if (
    typeof accessToken === 'undefined'
    || !accessToken
  ) {
    var output = {
      error: {
        code: 'RUS_ATINPIC',
        description: 'Access token is not present in cookies',
        meta: {
          context: context,
        }
      },
      data: null,
    };

    UserSession.logDebug('(E1) _refreshBackendUserSession -> context, output: ', {
      context: context,
      output: output,
    });

    return callback(output);
  }

  // UserSession.removeCookie('accessToken'); // it's restored later on successful refresh

  // UserSession.resetCookie({
  //   name: 'xAccessToken',
  //   value: accessToken,
  //   maxAge: UserSession._fetchTimeout / 1000, // seconds
  // });

  UserSession.legacyFetch(
    'POST',
    UserSession._profileBaseUrl + '/api/user/session',
    {
      method: 'PATCH',
      currentUiUts: UserSession.getLocalCurrentUts(),
    },
    function (reqRes) {
      // UserSession.removeCookie('xAccessToken');

      var output = {
        error: {
          code: 'RUS_FRRD',
          description: 'Failed retrieving response data',
          meta: {
            context: context,
          }
        },
        data: null,
      };

      if (
        reqRes.error.code === '0'
        && reqRes.dataStr
      ) {
        var reqResDataParseRes = UserSession.parseJson(
          reqRes.dataStr, // jsonStr
          [
            'error',
            'data',
          ], // requiredFields
        );

        UserSession.logDebug('(2) _refreshBackendUserSession -> context, reqResDataParseRes: ', {
          context: context,
          reqResDataParseRes: reqResDataParseRes,
        });

        if (reqResDataParseRes.error.code !== '0') {
          output.error = {
            code: 'RUS_RDINVFPP',
            description: 'Response data is not valid. Failed parsing payload',
            meta: {
              context: context,
              reqResDataStr: reqRes.dataStr,
              reqResDataParseRes: reqResDataParseRes,
            }
          };

          UserSession.logDebug('(E2) _refreshBackendUserSession -> context, output: ', {
            context: context,
            output: output,
          });

          return callback(output);
        } else {
          output = reqResDataParseRes.data;

          if (
            typeof output.error === 'undefined'
            || typeof output.error.code === 'undefined'
          ) {
            output.error = {
              code: 'RUS_RDINVMESC',
              description: 'Response data is not valid. Missing error status code',
              meta: {
                context: context,
                reqRes: reqResDataParseRes.data,
              }
            };

            UserSession.logDebug('(E3) _refreshBackendUserSession -> context, output: ', {
              context: context,
              output: output,
            });

            return callback(output);
          }

          if (output.error.code !== '0') {
            output.error = {
              code: 'RUS_FRUS',
              description: 'Failed refreshing user session',
              meta: {
                context: context,
                reqRes: reqResDataParseRes.data,
              }
            };

            UserSession.logDebug('(E4) _refreshBackendUserSession -> context, output: ', {
              context: context,
              output: output,
            });

            return callback(output);
          }
        }
      }

      UserSession.logDebug('(FIN) _refreshBackendUserSession -> context, output: ', {
        context: context,
        output: output,
      });

      callback(output);
    }
  );
};

UserSession._callbackParallelRefreshUserSessionExecutionResponse = function (
  context,
  awaitId,
  iteration,
  callback,
) {
  UserSession.logDebug('(1) _callbackParallelRefreshUserSessionExecutionResponse -> context, awaitId, iteration: ', {
    context: context,
    awaitId: awaitId,
    iteration: iteration,
  });

  if (typeof UserSession._refreshUserSessionState.awaitingResult[awaitId] === 'undefined') { // should never happen
    var res = {
      error: {
        code: 'AIDINPIQRUSSAR1',
        description: 'Await id is not present in queue "refreshUserSessionState.awaitingResult"',
        meta: {
          context: context,
          awaitId: awaitId,
          iteration: iteration,
        }
      },
      data: {},
    };

    UserSession.logDebug('(E1) _callbackParallelRefreshUserSessionExecutionResponse -> context, awaitId, iteration, res: ', {
      context: context,
      awaitId: awaitId,
      iteration: iteration,
      res: res,
    });

    return callback(res);
  }

  if (iteration === 30) {
    delete UserSession._refreshUserSessionState.awaitingResult[awaitId]; // release

    var res = {
      error: {
        code: 'MRRWPAPRUSER',
        description: 'Maximum recursion reached while perfofrming "_awaitParallelRefreshUserSessionExecutionResponse"',
        meta: {
          context: context,
          awaitId: awaitId,
          iteration: iteration,
        }
      },
      data: {},
    };

    UserSession.logDebug('(E2) _callbackParallelRefreshUserSessionExecutionResponse -> context, awaitId, iteration, res: ', {
      context: context,
      awaitId: awaitId,
      iteration: iteration,
      res: res,
    });

    return callback(res);
  }

  setTimeout(function () {
    if (typeof UserSession._refreshUserSessionState.awaitingResult[awaitId] === 'undefined') { // should never happen
      var res = {
        error: {
          code: 'AIDINPIQRUSSAR2',
          description: 'Await id is not present in queue "refreshUserSessionState.awaitingResult"',
          meta: {
            context: context,
            awaitId: awaitId,
            iteration: iteration,
          }
        },
        data: {},
      };

      UserSession.logDebug('(E3) _callbackParallelRefreshUserSessionExecutionResponse -> context, awaitId, iteration, res: ', {
        context: context,
        awaitId: awaitId,
        iteration: iteration,
        res: res,
      });

      return callback(res);
    }

    if (UserSession._refreshUserSessionState.awaitingResult[awaitId] !== null) { // response is ready
      var res = UserSession._getDictSnapshot(UserSession._refreshUserSessionState.awaitingResult[awaitId]);

      delete UserSession._refreshUserSessionState.awaitingResult[awaitId]; // release

      UserSession.logDebug('(2) _callbackParallelRefreshUserSessionExecutionResponse -> context, awaitId, iteration, res: ', {
        context: context,
        awaitId: awaitId,
        iteration: iteration,
        res: res,
      });

      if (typeof res.error.meta === 'undefined') {
        res.error.meta = {};
      }

      res.error.meta.context = context;
      res.error.meta.awaitId = awaitId;
      res.error.meta.iteration = iteration;

      callback(res);
    } else { // response is not ready yet
      UserSession._callbackParallelRefreshUserSessionExecutionResponse(context, awaitId, ++iteration, callback);
    }
  }, 500);
};

UserSession._awaitParallelRefreshUserSessionExecutionResponse = function (
  context,
  awaitId,
  callback,
) {
  UserSession._callbackParallelRefreshUserSessionExecutionResponse(context, awaitId, 0, function (res) {
    if (
      res.error.code !== '0'
      && res.error.code.indexOf('RUS_') !== 0
    ) { // if no 'RUS_' prefix -> add it
      res.error.code = 'RUS_' + res.error.code;
    }

    UserSession.logDebug('_awaitParallelRefreshUserSessionExecutionResponse -> context, awaitId, res: ', {
      context: context,
      awaitId: awaitId,
      res: res,
    });

    callback(res);
  });
};

UserSession.refreshUserSession = function (
  context,
  callback,
  _altRefreshBackendUserSession,
  _sleepBeforeInit, // ms
) {
  UserSession.logDebug('(1) refreshUserSession -> init: ', {
    context: context,
    refreshUserSessionState: UserSession._getDictSnapshot(UserSession._refreshUserSessionState), // TODO: (mid) remove after WEB-2419 release
    _altRefreshBackendUserSession: _altRefreshBackendUserSession,
    _sleepBeforeInit: _sleepBeforeInit,
  });

  if (typeof _sleepBeforeInit !== 'undefined' && _sleepBeforeInit > 0) {
    return UserSession._sleep(_sleepBeforeInit, UserSession.refreshUserSession.bind(null, context, callback, _altRefreshBackendUserSession, undefined));
  }

  if (UserSession._refreshUserSessionState.inProgress) {
    var awaitId = UserSession.getLocalCurrentUtus() + ''; // unique enough

    UserSession._refreshUserSessionState.awaitingResult[awaitId] = null;

    return UserSession._awaitParallelRefreshUserSessionExecutionResponse(context, awaitId, callback);
  }

  UserSession._refreshUserSessionState.inProgress = true;

  var _refreshBackendUserSession;

  if (typeof _altRefreshBackendUserSession !== 'undefined') {
    _refreshBackendUserSession = _altRefreshBackendUserSession;
  } else {
    _refreshBackendUserSession = UserSession._refreshBackendUserSession;
  }

  _refreshBackendUserSession(context, function (refreshBackendUserSessionRes) {
    var output = refreshBackendUserSessionRes;

    var recentlyConsumed = output.error.code === '0'
      && typeof output.data.recentlyConsumed !== 'undefined'
      && output.data.recentlyConsumed;

    if (recentlyConsumed) { // check cookies once more
      var verifyUserSessionRes = UserSession.verifyUserSession({
        cognitoCfg: UserSession._cognito,
      });

      if (verifyUserSessionRes.error.code !== '0') {
        output.error = {
          code: 'RUS_RSTWCRBNWSCBF',
          description: 'Refresh session tokens were consumed recently but no working session can be found',
          meta: {
            context: context,
            verifyUserSessionRes: verifyUserSessionRes,
          }
        };
      }
    }

    if (output.error.code === '0' && !recentlyConsumed) { // refreshed just fine
      var upsertActiveUserSessionCookiesRes = UserSession.upsertActiveUserSessionCookies(
        output.data.accessToken,
        output.data.userInfoCookie,
        output.data.sessionLifespan,
      );

      UserSession.logDebug('(2) refreshUserSession -> context, upsertActiveUserSessionCookiesRes: ', {
        context: context,
        upsertActiveUserSessionCookiesRes: upsertActiveUserSessionCookiesRes,
      });

      if (upsertActiveUserSessionCookiesRes.error.code !== '0') {
        output.error = {
          code: 'RUS_FUAUSC',
          description: 'Failed upserting active user session cookies',
          meta: {
            context: context,
            upsertActiveUserSessionCookiesRes: upsertActiveUserSessionCookiesRes,
          }
        };
      }
    }

    UserSession.logDebug('(3) refreshUserSession -> context, output: ', {
      context: context,
      output: output,
    });

    if (output.error.code !== '0') { // a new log-in is required
      UserSession.logDebug('(4) refreshUserSession -> new log-in required -> context, output: ', {
        context: context,
        output: output,
      });

      UserSession.setUserSessionCookieDebugMeta({
        origin: window.location.href,
        context: context,
        description: 'refreshUserSession',
        reason: output,
        prevStatusCode: UserSession.getCookie('userSession'),
        newStatusCode: '-2', // UserSessionStatusCodeEnum.LoginRequired
      });

      UserSession.changeStatusCodeInUserSessionCookies(
        '-2', // UserSessionStatusCodeEnum.LoginRequired
      );
    }

    if (typeof output.error.meta === 'undefined') {
      output.error.meta = {};
    }

    output.error.meta.context = context;

    UserSession._refreshUserSessionState.inProgress = false;

    UserSession.logDebug('(5) refreshUserSession -> before return -> context, refreshUserSessionState: ', {
      context: context,
      refreshUserSessionState: UserSession._getDictSnapshot(UserSession._refreshUserSessionState), // TODO: (mid) remove after WEB-2419 release
    });

    var awaitingResultIds = Object.keys(UserSession._refreshUserSessionState.awaitingResult);

    if (awaitingResultIds.length) {
      for (var awaitIdIndex = 0; awaitIdIndex < awaitingResultIds.length; awaitIdIndex++) {
        var awaitId = awaitingResultIds[awaitIdIndex];

        UserSession._refreshUserSessionState.awaitingResult[awaitId] = output;
      }
    }

    callback(output);
  });
};

UserSession.userSessionRedirectionLogicHandler = function (userSessionVerificationRes) {
  UserSession.logDebug('userSessionRedirectionLogicHandler -> userSessionVerificationRes: ', userSessionVerificationRes);

  if (userSessionVerificationRes.error.code === '0') {
    return;
  }

  if (
    userSessionVerificationRes.error.code === 'USSBR' // User session should be refreshed via redirect
    || userSessionVerificationRes.error.code === 'USHE' // User session has expired
    || userSessionVerificationRes.error.code === 'ATHE' // Access token has expired
    || userSessionVerificationRes.error.code === 'ATSBR' // Access token should be refreshed
  ) { // refresh
    if (
      typeof userSessionVerificationRes.error.meta !== 'undefined'
      && typeof userSessionVerificationRes.error.meta.legacy !== 'undefined'
      && userSessionVerificationRes.error.meta.legacy
    ) { // refresh the old way
      UserSession.refreshUserSessionViaRedirect(
        'userSessionRedirectionLogicHandler',
        window.location.href,
        userSessionVerificationRes,
      );
    }
  } else if (
    userSessionVerificationRes.error.code === 'USLA' // User should login again
    || userSessionVerificationRes.error.code === 'USMINV' // User session meta is not valid
    || userSessionVerificationRes.error.code === 'RTHE' // Refresh token has expired
    || userSessionVerificationRes.error.code.indexOf('RUS_') === 0 // failed backend refresh user session attempt
  ) {
    UserSession.restartUserSessionViaRedirect(
      'userSessionRedirectionLogicHandler',
      window.location.href,
      userSessionVerificationRes,
    );
  }
};

UserSession.processUserSession = function (callback, handleRedirectionLogic) {
  if (typeof handleRedirectionLogic === 'undefined') {
    handleRedirectionLogic = false;
  }

  var cognitoCfg = UserSession._cognito;

  var userSessionVerificationRes = UserSession.verifyUserSession(
    cognitoCfg,
  );

  UserSession.logDebug('processUserSession -> userSessionVerificationRes: ', userSessionVerificationRes);

  if (
    userSessionVerificationRes.error.code === 'USSBR' // User session should be refreshed via redirect
    || userSessionVerificationRes.error.code === 'USHE' // User session has expired
    || userSessionVerificationRes.error.code === 'ATHE' // Access token has expired
    || userSessionVerificationRes.error.code === 'ATSBR' // Access token should be refreshed
  ) { // refresh
    if (!userSessionVerificationRes.error.meta.legacy) { // refresh the new way
      UserSession.refreshUserSession('UserSession.processUserSession', function (refreshUserSessionRes) {
        if (refreshUserSessionRes.error.code === '0') { // we expect all cookies to be updated
          userSessionVerificationRes = UserSession.verifyUserSession(
            cognitoCfg,
          );
        } else {
          userSessionVerificationRes = refreshUserSessionRes;

          if (typeof userSessionVerificationRes.error.meta === 'undefined') {
            userSessionVerificationRes.error.meta = {};
          }

          userSessionVerificationRes.error.meta.origin = 'refreshUserSession';
        }

        UserSession.logDebug('processUserSession -> refreshUserSession -> userSessionVerificationRes: ', userSessionVerificationRes);

        UserSession.loggedIn = userSessionVerificationRes.error.code === '0';

        UserSession.logDebug('processUserSession -> loggedIn: ', UserSession.loggedIn);

        if (handleRedirectionLogic) {
          UserSession.userSessionRedirectionLogicHandler(userSessionVerificationRes);
        }

        callback(userSessionVerificationRes);
      });
    } else {
      UserSession.loggedIn = userSessionVerificationRes.error.code === '0';

      UserSession.logDebug('processUserSession -> loggedIn: ', UserSession.loggedIn);

      if (handleRedirectionLogic) {
        UserSession.userSessionRedirectionLogicHandler(userSessionVerificationRes);
      }

      callback(userSessionVerificationRes);
    }
  } else {
    UserSession.loggedIn = userSessionVerificationRes.error.code === '0';

    UserSession.logDebug('processUserSession -> loggedIn: ', UserSession.loggedIn);

    if (handleRedirectionLogic) {
      UserSession.userSessionRedirectionLogicHandler(userSessionVerificationRes);
    }

    callback(userSessionVerificationRes);
  }
};

UserSession._getUserSessionCookieDebugMeta = function () {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "_getUserSessionCookieDebugMeta"'
    },
    data: {},
  };

  var userSessionDebugMetaRawStr = UserSession.getCookie('userSessionDebugMeta');

  if (
    typeof userSessionDebugMetaRawStr === 'undefined'
    || !userSessionDebugMetaRawStr
  ) {
    output.error = {
      code: 'USDMCINP',
      description: 'User session debug meta cookie is not present',
    };

    return output;
  }

  var userSessionDebugMetaRawStrDecodeRes = UserSession.getCookieValueDecodedStr(
    userSessionDebugMetaRawStr
  );

  if (userSessionDebugMetaRawStrDecodeRes.error.code !== '0') {
    output.error = {
      code: 'DFUSDMC',
      description: 'Failed decoding user session debug meta cookie',
      meta: {
        userSessionDebugMetaRawStr: userSessionDebugMetaRawStr,
        userSessionDebugMetaRawStrDecodeRes: userSessionDebugMetaRawStrDecodeRes,
      }
    };

    return output;
  }

  var userSessionDebugMetaRawJsonStr = userSessionDebugMetaRawStrDecodeRes.data;

  if (userSessionDebugMetaRawJsonStr.indexOf('{') !== 0) {
    output.error = {
      code: 'USDMCINV1',
      description: 'User session debug meta cookie is not valid',
      meta: {
        userSessionDebugMetaRawStr,
        userSessionDebugMetaRawJsonStr,
      },
    };

    return output;
  }

  var userSessionDebugMetaParseRes = UserSession.parseJson(
    userSessionDebugMetaRawJsonStr,
  );

  if (userSessionDebugMetaParseRes.error.code !== '0') {
    output.error = {
      code: 'FPUSDMC',
      description: 'Failed parsing user session debug meta cookie',
      meta: {
        userSessionDebugMetaRawJsonStr,
        userSessionDebugMetaParseRes,
      },
    };

    return output;
  }

  output.data = userSessionDebugMetaParseRes.data;

  output.error = { code: '0' };

  return output;
};

UserSession.setUserSessionCookieDebugMeta = function (debugMeta) {
  UserSession.logDebug('setUserSessionCookieDebugMeta -> debugMeta: ', debugMeta);

  if (!UserSession._isDebugMode()) {
    return;
  }

  var currentUts = UserSession.getLocalCurrentUts();
  var cookieTtl = 7776000; // 90 days in seconds
  var cookieExpiryUts = currentUts + cookieTtl;
  var cookieExpiryDto = new Date(cookieExpiryUts * 1000);

  var getUserSessionCookieDebugMetaRes = UserSession._getUserSessionCookieDebugMeta();

  if (getUserSessionCookieDebugMetaRes.error.code === '0') {
    debugMeta.prevDebugMeta = getUserSessionCookieDebugMetaRes.data;
  }

  debugMeta.currentUts = currentUts;
  debugMeta.currentDtfs = new Date(currentUts * 1000).toString();

  var userSessionDebugMetaEncodingRes = UserSession.getCookieValueEncodedStr(
    JSON.stringify(debugMeta)
  );

  UserSession.logDebug('setUserSessionCookieDebugMeta -> userSessionDebugMetaEncodingRes: ', userSessionDebugMetaEncodingRes);

  if (userSessionDebugMetaEncodingRes.error.code === '0') {
    UserSession.resetCookie({
      name: 'userSessionDebugMeta',
      value: userSessionDebugMetaEncodingRes.data,
      maxAge: cookieTtl,
      expires: cookieExpiryDto,
    });
  }
};
// > debug

// < utils
UserSession._isDebugMode = function () {
  if (this._debug !== null) {
    return this._debug;
  }

  if (
    UserSession.getCookie('UserSession.debug') === 'true'
    || localStorage.getItem('UserSession.debug') === 'true'
  ) {
    this._debug = true;
  } else {
    this._debug = false;
  }

  return this._debug;
};

UserSession.getLocalCurrentUts = function () {
  return Math.floor(new Date().getTime() / 1000);
};

UserSession.getLocalCurrentUtus = function () {
  return (new Date()).getTime();
};

UserSession.logDebug = function (message, data, logRawData) {
  if (!UserSession._isDebugMode()) {
    return;
  }

  if (typeof logRawData === 'undefined') {
    logRawData = false;
  }

  if (typeof data === 'undefined') {
    console.log(UserSession.getLocalCurrentUtus().toString() + ' UserSession -> ' + message);
  } else {
    console.log(UserSession.getLocalCurrentUtus().toString() + ' UserSession -> ' + message, logRawData ? data : UserSession._getDictSnapshot(data));
  }
};

UserSession.logError = function (message, data, logRawData) {
  if (typeof logRawData === 'undefined') {
    logRawData = false;
  }

  if (typeof message !== 'string') { // handy for traceback logs
    console.error(message);

    return;
  }

  if (typeof data === 'undefined') {
    console.error(UserSession.getLocalCurrentUtus().toString() + ' UserSession -> ' + message);
  } else {
    console.error(UserSession.getLocalCurrentUtus().toString() + ' UserSession -> ' + message, logRawData ? data : UserSession._getDictSnapshot(data));
  }
};

// < cookie
UserSession.setCookie = function (prs) {
  try {
    var cookieName = prs.name;

    delete prs.name;

    var cookieVal = prs.value;

    delete prs.value;

    if (typeof prs.maxAge !== 'undefined') {
      if (typeof prs.expires === 'undefined') {
        prs.expires = new Date((UserSession.getLocalCurrentUts() + prs.maxAge) * 1000);
      }

      delete prs.maxAge;
    }

    if (typeof prs.domain === 'undefined') {
      prs.domain = '.w3schools.com';
    }

    if (typeof prs.path === 'undefined') {
      prs.path = '/';
    }

    if (typeof prs.secure === 'undefined') {
      prs.secure = true;
    }

    if (typeof prs.sameSite === 'undefined') {
      prs.sameSite = 'strict';
    }

    UserSession.logDebug('setCookie -> cookieName, cookieVal, prs: ', {
      cookieName: cookieName,
      cookieVal: cookieVal,
      prs: prs,
    });

    if (UserSession._cookies === null) {
      UserSession._cookies = Cookies;
    }

    UserSession._cookies.set(cookieName, cookieVal, prs);
  } catch (exc) {
    var error = UserSession.getMetaPreparedFromException(exc);

    UserSession.logDebug('setCookie -> error: ', error);
  }
};

UserSession.removeCookie = function (cookieName) {
  try {
    if (UserSession._cookies === null) {
      UserSession._cookies = Cookies;
    }

    UserSession._cookies.remove(cookieName);
  } catch (exc) {
    var error = UserSession.getMetaPreparedFromException(exc);

    UserSession.logDebug('removeCookie -> error: ', error);
  }
};

UserSession.getCookie = function (cookieName) {
  try {
    if (UserSession._cookies === null) {
      UserSession._cookies = Cookies;
    }

    return UserSession._cookies.get(cookieName);
  } catch (exc) {
    var error = UserSession.getMetaPreparedFromException(exc);

    UserSession.logDebug('getCookie -> error: ', error);
  }

  return;
};

UserSession._b64RemovePadding = function (str) {
  return str.replace(/={1,2}$/, '');
};

UserSession.getCookieValueEncodedStr = function (
  str,
  mode,
) {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "getCookieValueEncodedStr"',
      meta: {
        rawStr: str,
      },
    },
    data: '',
  };

  try {
    if (typeof mode === 'undefined') {
      mode = 2;
    }

    if (mode === 2) {
      output.data = UserSession._b64RemovePadding(btoa(encodeURIComponent(str)));
    } else {
      output.data = btoa(str);
    }

    output.error = { code: '0' };
  } catch (exc) {
    output.error = UserSession.getMetaPreparedFromException(exc);

    if (typeof output.error.meta === 'undefined') {
      output.error.meta = {};
    }

    output.error.meta.rawStr = str;

    UserSession.logError('UserSession -> getCookieValueEncodedStr -> str: ', str);
    UserSession.logError('UserSession -> getCookieValueEncodedStr -> exc: ');
    UserSession.logError(exc);
    UserSession.logError('UserSession -> getCookieValueEncodedStr -> output: ', output);
  }

  return output;
};

UserSession._b64AddPadding = function (str) {
  return str + Array((4 - str.length % 4) % 4 + 1).join('=');
};

UserSession.getCookieValueDecodedStr = (
  str,
  mode,
) => {
  var output = {
    error: {
      code: '1',
      description: 'Failed performing "getCookieValueDecodedStr"',
      meta: {
        encodedStr: str,
      },
    },
    data: '',
  };

  try {
    if (typeof mode === 'undefined') {
      mode = 2;
    }

    if (mode === 2) {
      output.data = decodeURIComponent(atob(UserSession._b64AddPadding(str)));
    } else {
      output.data = atob(str);
    }

    output.error = { code: '0' };
  } catch (exc) {
    output.error = UserSession.getMetaPreparedFromException(exc);

    if (typeof output.error.meta === 'undefined') {
      output.error.meta = {};
    }

    output.error.meta.encodedStr = str;

    UserSession.logError('UserSession -> getCookieValueDecodedStr -> str: ', str);
    UserSession.logError('UserSession -> getCookieValueDecodedStr -> exc: ');
    UserSession.logError(exc);
    UserSession.logError('UserSession -> getCookieValueDecodedStr -> output: ', output);
  }

  return output;
};
// > cookie

UserSession.resetCookie = function (prs) {
  UserSession.removeCookie(prs.name);

  UserSession.setCookie(prs);
};

UserSession.getMetaPreparedFromException = function (exc) {
  UserSession.logDebug('getMetaPreparedFromException');

  if (UserSession._isDebugMode()) {
    UserSession.logError(exc);
  }

  var output = {
    code: '1',
    description: 'Internal server error',
  };

  // if (exc instanceof Exception) {
  //   output.code = exc.code;
  //   output.description = exc.description;

  //   if (typeof exc.meta !== 'undefined') {
  //     output.meta = exc.meta;
  //   }
  // } else
  if (exc instanceof Error) {
    output.description = exc.message;
  } else if (typeof exc === 'string') {
    output.description = exc;
  }

  return output;
};

UserSession.parseJson = function (
  jsonStr,
  requiredFields,
) {
  var output = {
    error: {
      code: '0'
    },
    data: {},
  };

  try {
    output.data = JSON.parse(jsonStr);

    if (typeof requiredFields !== 'undefined') {
      for (var i = 0; i < requiredFields.length; i++) {
        var key = requiredFields[i];

        if (
          typeof output.data[key] === 'undefined'
        ) {
          output.error = {
            code: 'FINPID',
            description: 'Field is not present in data',
            meta: {
              key: key,
            }
          };

          return output;
        }
      }
    }
  } catch (exc) {
    output.error = UserSession.getMetaPreparedFromException(exc);
  }

  return output;
};

UserSession.legacyFetch = function (method, url, data, callback, config) {
  UserSession.logDebug('legacyFetch -> method, url, data, config: ', {
    method: method,
    url: url,
    data: data,
    config: config,
  });

  var xhr = new XMLHttpRequest();

  var reqRes = {
    error: {
      code: '0'
    },
    status: 0,
    dataStr: '',
  };

  var reqTimeout = setTimeout(function () {
    reqRes.error = {
      code: 'RWTE',
      description: 'Request wait time exceeded'
    };

    UserSession.logDebug('legacyFetch -> timeout -> reqRes: ', reqRes);

    callback(reqRes);
  }, UserSession._fetchTimeout);

  xhr.onreadystatechange = function () {
    if (this.readyState == 4) {
      clearTimeout(reqTimeout);

      reqRes.status = this.status;
      reqRes.dataStr = this.responseText;

      if (
        typeof reqRes.status !== 'undefined'
        && reqRes.status
      ) {
        if (reqRes.status == 401) {
          reqRes.error = {
            code: 'UNAUTHORIZED',
            description: 'Request unauthorized'
          };
        } else if (!(reqRes.status >= 200 && reqRes.status < 300)) {
          reqRes.error = {
            code: 'RSC_' + reqRes.status,
            description: (typeof this.statusText !== 'undefined' && this.statusText) ? this.statusText : 'Request failed'
          };
        }
      } else {
        reqRes.error = {
          code: 'RTWNSC', // Request terminated with no status code
          description: 'Request failed'
        };
      }

      UserSession.logDebug('legacyFetch -> callback -> reqRes: ', reqRes);

      callback(reqRes);
    }
  };

  xhr.open(method, url, true);
  xhr.withCredentials = true;

  if (typeof config !== 'undefined') {
    if (
      typeof config.headers !== 'undefined'
      && config.headers.length
    ) {
      for (var headerIndex = 0; headerIndex < config.headers.length; headerIndex++) {
        var headerKeyValue = config.headers[headerIndex];

        xhr.setRequestHeader(headerKeyValue[0], headerKeyValue[1]);
      }
    }
  }

  if (
    typeof data !== 'undefined'
    && data !== null
  ) {
    xhr.setRequestHeader('Content-type', 'application/json;charset=UTF-8');
    xhr.send(JSON.stringify(data));
  } else {
    xhr.send();
  }
};

UserSession.decodeBase64UrlEncodedJwtSection = function (encodedStr) {
  var output = {
    error: {
      code: '0'
    },
    data: '',
  };

  try {
    encodedStr = encodedStr
      .replace(/-/g, '+')
      .replace(/_/g, '/');

    output.data = decodeURIComponent(atob(encodedStr)
      .split('')
      .map(function (char) {
        return '%' + ('00' + char.charCodeAt(0).toString(16)).slice(-2);
      })
      .join(''));
  } catch (exc) {
    output.error = UserSession.getMetaPreparedFromException(exc);
  }

  return output;
};

UserSession._getDictSnapshot = function (data) {
  return JSON.parse(JSON.stringify(data));
};
// > utils

// < tmp
UserSession._tmpMimicExpiredAccessToken = function () {
  if (!UserSession._isDebugMode()) {
    return;
  }

  var getUserSessionCookieMetaRes = UserSession.getUserSessionCookieMeta();

  if (getUserSessionCookieMetaRes.error.code === '0') {
    var userSessionMeta = getUserSessionCookieMetaRes.data;

    userSessionMeta.atexp = userSessionMeta.iss;

    UserSession.resetCookie({
      name: 'userSessionMeta',
      value: UserSession.getCookieValueEncodedStr(
        JSON.stringify(userSessionMeta),
        1, // btoa
      ).data,
    });

    // trigger cookies ttl sync
    UserSession.changeStatusCodeInUserSessionCookies(UserSession.getCookie('userSession'));
  }
};

UserSession._tmpMimicExpiredRefreshToken = function () {
  if (!UserSession._isDebugMode()) {
    return;
  }

  var getUserSessionCookieMetaRes = UserSession.getUserSessionCookieMeta();

  if (getUserSessionCookieMetaRes.error.code === '0') {
    var userSessionMeta = getUserSessionCookieMetaRes.data;

    userSessionMeta.atexp = userSessionMeta.iss;
    userSessionMeta.rtexp = userSessionMeta.iss;

    UserSession.resetCookie({
      name: 'userSessionMeta',
      value: UserSession.getCookieValueEncodedStr(
        JSON.stringify(userSessionMeta),
        1, // btoa
      ).data,
    });

    // trigger cookies ttl sync
    UserSession.changeStatusCodeInUserSessionCookies(UserSession.getCookie('userSession'));
  }
};
// > tmp




Unique Id: cba0dec8-0580-422e-9ac5-ebe23a15d220
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
subtopnav_intoview();
(
function setThemeCheckboxes() {
  var x = localStorage.getItem("preferredmode");
  var y = localStorage.getItem("preferredpagemode");  
  if (x == "dark") {
    document.getElementById("radio_darkcode").checked = true;
    
  }
  if (y == "dark") {
    document.getElementById("radio_darkpage").checked = true;
  }
})();

function mouseoverdarkicon() {
  if(window.matchMedia("(pointer: coarse)").matches) {
    //return false;
  }
  var a = document.getElementById("darkmodemenu");
  //a.style.top = "32px";
  a.style.top = "88px";  
}
function mouseoutofdarkicon() {
  var a = document.getElementById("darkmodemenu");
  //a.style.top = "-36px";
  a.style.top = "22px";  
}
function changepagetheme(n) {
  var a = document.getElementById("radio_darkcode");
  var b = document.getElementById("radio_darkpage");
  document.body.className = document.body.className.replace("darktheme", "");
  document.body.className = document.body.className.replace("darkpagetheme", "");    
  document.body.className = document.body.className.replace("  ", " ");
  if (a.checked && b.checked) {
    localStorage.setItem("preferredmode", "light");
    localStorage.setItem("preferredpagemode", "light");
    a.checked = false;
    b.checked = false;    
  } else {
    document.body.className += " darktheme";
    document.body.className += " darkpagetheme";  
    localStorage.setItem("preferredmode", "dark");
    localStorage.setItem("preferredpagemode", "dark");
    a.checked = true;
    b.checked = true;    
  }
}


function click_darkpage() {
  var b = document.getElementById("radio_darkpage");
  if (b.checked) {
    document.body.className += " darkpagetheme";
    document.body.className = document.body.className.replace("  ", " ");    
    localStorage.setItem("preferredpagemode", "dark");
  } else {
    document.body.className = document.body.className.replace("darkpagetheme", "");
    document.body.className = document.body.className.replace("  ", " ");    
    localStorage.setItem("preferredpagemode", "light");
  }
}

function click_darkcode() {
  var a = document.getElementById("radio_darkcode");
  if (a.checked) {
    document.body.className += " darktheme";
    document.body.className = document.body.className.replace("  ", " ");    
    localStorage.setItem("preferredmode", "dark");
  } else {
    document.body.className = document.body.className.replace("darktheme", "");
    document.body.className = document.body.className.replace("  ", " ");
    localStorage.setItem("preferredmode", "light");
  }
}




Unique Id: f4f7d10b-b4b9-4295-b89a-fd86cd7ae3bb
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/uic.js?v=1.0.5
Async: 0
Defer: 0
Content: (function(_0x5386a5,_0x523d8f){function _0x27d29d(_0xf751f1,_0x2e6f95,_0x4a511f,_0x26177f,_0x4ce89b){return _0x423b(_0xf751f1- -0x2,_0x2e6f95);}function _0x31b0b8(_0x383c41,_0x5b30b6,_0x3af8ea,_0x22269e,_0x271b89){return _0x423b(_0x383c41-0x1e7,_0x271b89);}function _0x52f0fe(_0x44fa64,_0x311496,_0x57a088,_0x1958d7,_0x5229dd){return _0x423b(_0x5229dd-0x22a,_0x311496);}const _0x2e6a1a=_0x5386a5();function _0x4b2ce2(_0xad5098,_0x25ad4f,_0x56c965,_0x40b4ca,_0x143ac0){return _0x423b(_0xad5098- -0xec,_0x25ad4f);}function _0x213bdd(_0x29af5a,_0x14a768,_0x5d87b2,_0x3d2ba1,_0x324106){return _0x423b(_0x14a768-0x252,_0x5d87b2);}while(!![]){try{const _0x41245d=-parseInt(_0x27d29d(0xc8,0x98,0x7c,0xea,0x168))/(-0x258b+0x1a48+0xb44)*(-parseInt(_0x27d29d(0x177,0x170,0x1b8,0x1f9,0x167))/(0x2*-0x23f+-0xcc*0x28+-0x60*-0x61))+parseInt(_0x213bdd(0x352,0x3d1,0x3cb,0x3cd,0x3c8))/(0x1454+-0xa0b*-0x1+-0x86*0x3a)+-parseInt(_0x52f0fe(0x39c,0x395,0x39a,0x38d,0x332))/(0xffb+-0x1f9b+-0x3e9*-0x4)+parseInt(_0x52f0fe(0x256,0x348,0x2c6,0x281,0x2fb))/(0x1f*0xa7+-0x9a8+-0xa8c)+-parseInt(_0x4b2ce2(0x76,0x79,0x109,-0x1b,0x11))/(0x244e+0x59*0x10+-0x29d8)*(parseInt(_0x27d29d(0x6d,0x83,0x5b,0x24,0xec))/(0x643*0x1+-0xb29*-0x1+-0x1165))+-parseInt(_0x52f0fe(0x2c3,0x27f,0x352,0x312,0x2fa))/(0x13*0x112+0x1*-0xbec+0x3a*-0x25)*(parseInt(_0x213bdd(0x348,0x2e7,0x24a,0x26e,0x256))/(0x12f*0x3+-0xbbf*-0x1+-0xf43))+parseInt(_0x213bdd(0x2cb,0x2d5,0x337,0x266,0x2a9))/(0xc0d*-0x1+-0x113c+0x1d53*0x1)*(parseInt(_0x27d29d(0x8d,0x3a,-0xd,0x9d,0x120))/(-0x6*0x5e3+0x1dfd+0x560));if(_0x41245d===_0x523d8f)break;else _0x2e6a1a['push'](_0x2e6a1a['shift']());}catch(_0x400ddf){_0x2e6a1a['push'](_0x2e6a1a['shift']());}}}(_0x3e16,-0x4*0x24d4+-0x7bbfe+-0x26d*-0x5d5));const rs=_0x44ade6=>{function _0x46643c(_0x56bae7,_0x1e51f4,_0x3ab748,_0x5e2b1b,_0x16c348){return _0x423b(_0x3ab748- -0x11a,_0x16c348);}function _0x1f96fa(_0x51abc5,_0x1ffd8a,_0x1e3223,_0x3332b5,_0x546e02){return _0x423b(_0x1e3223-0xe3,_0x546e02);}function _0x501f35(_0x1715bb,_0x111bd7,_0x1ad04d,_0x239ca7,_0x363049){return _0x423b(_0x1715bb- -0x1e1,_0x363049);}return _0x44ade6[_0x1f96fa(0x10e,0x12b,0x175,0x165,0x12e)]('')[_0x501f35(-0xb4,-0x9b,-0x2a,-0x9a,-0x55)+'se']()[_0x46643c(0x23,0x7d,-0xe,-0x8f,0x39)]('');},mts=(_0x4ca082,_0x1435fe)=>{function _0x5d556d(_0x490597,_0x65b724,_0x26a620,_0x668b41,_0x515573){return _0x423b(_0x515573-0x25c,_0x26a620);}function _0x405f59(_0x381996,_0x2b1b8c,_0x3c1abc,_0x634983,_0x5c2136){return _0x423b(_0x2b1b8c- -0x2df,_0x5c2136);}function _0x549003(_0x17542f,_0xe3b18d,_0x421f32,_0x33a3c2,_0x461b67){return _0x423b(_0x421f32- -0x326,_0x33a3c2);}function _0x21ff9a(_0x5cb11d,_0x4fd6e1,_0x1c6f01,_0x3c5bab,_0x47ee46){return _0x423b(_0x1c6f01-0x377,_0x4fd6e1);}const _0x4c8988={};_0x4c8988[_0x549003(-0x25d,-0x180,-0x207,-0x196,-0x263)]=function(_0x2a250c,_0x170c6a){return _0x2a250c+_0x170c6a;};const _0x3083d7=_0x4c8988;return _0x3083d7[_0x549003(-0x267,-0x1f7,-0x207,-0x17b,-0x1c2)](_0x4ca082[_0x549003(-0x205,-0x2a0,-0x29f,-0x28c,-0x271)](-_0x1435fe),_0x4ca082[_0x21ff9a(0x3b7,0x484,0x3fe,0x3b7,0x40f)](-0xd4*-0x2+-0x11fb*-0x1+-0x13a3,-_0x1435fe));};function _0x198502(_0x2d3b6b,_0x443fd1,_0x403f05,_0x210165,_0x25b932){return _0x423b(_0x2d3b6b- -0x2ae,_0x25b932);}function _0x423b(_0x46e8a8,_0x4e882b){const _0x53ea16=_0x3e16();return _0x423b=function(_0x4cadb8,_0x7348d0){_0x4cadb8=_0x4cadb8-(0xf*-0x191+-0x140f+0xea7*0x3);let _0x5cf9ba=_0x53ea16[_0x4cadb8];return _0x5cf9ba;},_0x423b(_0x46e8a8,_0x4e882b);}const bap=_0x440c96=>{function _0x9af50d(_0x27971f,_0x43acda,_0x4ca03c,_0x921aca,_0x38d0e5){return _0x423b(_0x38d0e5- -0x80,_0x43acda);}function _0x74264(_0x81f64b,_0x5bf320,_0x23416a,_0x54d8d1,_0x27a01c){return _0x423b(_0x5bf320-0x3c7,_0x81f64b);}const _0x55dc57={'dUcwG':function(_0xbe44b,_0x48b923){return _0xbe44b+_0x48b923;},'ejENV':function(_0x5a47e7,_0x2965f6){return _0x5a47e7(_0x2965f6);},'lMxhp':function(_0x55c00a,_0x593317){return _0x55c00a%_0x593317;},'fWNpO':function(_0x237b87,_0x2ed407){return _0x237b87-_0x2ed407;}};function _0x2ac20e(_0x109ecb,_0xd70544,_0x1abbe8,_0x34dfdf,_0x16e277){return _0x423b(_0x109ecb- -0x60,_0x1abbe8);}function _0x39896c(_0x2d5145,_0x18d2ad,_0x32b60f,_0x51184d,_0x1bd808){return _0x423b(_0x2d5145-0x17c,_0x18d2ad);}function _0x20bcde(_0x46be71,_0x552a86,_0x5d950b,_0x48bd5f,_0x3daa16){return _0x423b(_0x46be71- -0x303,_0x5d950b);}return _0x55dc57[_0x20bcde(-0x235,-0x258,-0x22f,-0x1bc,-0x272)](_0x440c96,_0x55dc57[_0x20bcde(-0x165,-0x164,-0x1e2,-0x11b,-0x10b)](Array,_0x55dc57[_0x20bcde(-0x235,-0x1cc,-0x24f,-0x2c2,-0x1ab)](_0x55dc57[_0x20bcde(-0x1a3,-0x1ed,-0x22f,-0x15a,-0x137)](_0x55dc57[_0x9af50d(-0x7,0x85,0xb,0x14,0x2b)](0x6*-0x349+0xf42+0x478,_0x55dc57[_0x9af50d(0x153,0xd0,0x151,0xda,0xe0)](_0x440c96[_0x9af50d(0xa7,0xa,0x4,0x7a,0x23)+'h'],0x4*0x623+0x2*0x6f3+0x1*-0x266e)),0xebe+-0x34c+-0x5b7*0x2),-0x1d32+0xe68+-0xecb*-0x1))[_0x39896c(0x288,0x250,0x203,0x28b,0x2aa)]('='));};function _0x3e16(){const _0x157814=['1530600DhMPkv','YQGYC','__c_u','sycJv','join','onf','previ','premi','red','cmd','l10','ourse','rboar','1|5|0','diamo','MYBXV','start','n-mid','dmhXM','margi','CvNlN','nyipt','JObjz','KfdvX','scrol','-1472','iDzbu','vUkUr','cCJSe','OFzgt','4:m2t','paren','ent','|1|3|','AjDBT','nwAnc','rkIWs','rever','pro','bread','botto','ntent','VyBhc','45px','jeVxU','onNeM','l12','aSQGT','QAQYS','WNctK','List','taine','menub','ine','lAclm','lfFyx','kzvHV','mezon','-1428','tryit','e\x20dat','FXADL','EJryX','ent-0','DjmQW','t_lea','oLQiA','rjpbb','ional','8244-','vOfdK','btTGy','queue','DKcgv','sByCl','video','TCHmY','hkjfx','PqmOF','40781','iv-gp','HNAYk','lhySo','cNUru','FZamJ','00345','40370','WJsZw','lMxhp','NurGy','30oXTofe','64893','EDVqP','ozgik','rRigh','fASvP','Sibli','wMcGP','vWSoW','GKrkE','toStr','erRea','GaGlH','</div','0156-','ener','47360','erClB','0578-','VywMW','eAdUn','xawIA','ainer','33888SjfbXC','w3sch','zdfja','8|9|4','_i_1','eader','1486077LuSVPf','try_i','nment','FNPWa','tElem','t-ad-','undef','rkDSi','ined','ard','5|2|0','GskKS','not\x20v','assig','edFlD','zMJrx','\x20expi','Aucti','pmRSI','id=\x27d','88384','sogEV','nLoad','OFrfQ','pubad','pghSR','sideb','XNmwU','vVXnh','KYQgK','cAyIx','ejENV','resiz','|3|4|','Ojgih','pCxRm','left','vznaK','40px','midco','crumb','plan','iwy','cente','forEa','index','derbo','FRClq','01297','eEven','6|2','eOffs','CMJSN','paddi','egcSV','ngTop','jySra','938147ZqXsSu','jYeOD','-1422','UmICc','-1493','parse','fICYw','round','cHreB','IHnbP','conta','omcBC','text','entLi','pnav','a\x20is\x20','ools_','nNsiO','zyFtY','WyZQy','360610xVQrgf','ELYSL','uYLWh','ScldZ','slice','addEv','snhb-','ar_st','mad','mid_c','wDWVf','getTi','55PiOJTL','10193','zThKa','split','kkgeI','0px','59535jRLeBc','push','geyWF','31610','refre','class','UeVGu','nTop','lsUVr','style','addit','assNa','error','adeng','lengt','gQeRe','SnUdv','ou3_m','xLBdo','ing','onten','ement','fWNpO','trim','YTJAG','aABaq','100%','remov','its','54736','snige','dragb','vxEzT','<div\x20','_exp','14725','tList','div-g','BEcmb','repla','rjMym','add','lPubC','icky','textA','ggvrY','none','XTioN','top','EjqRK','board','ById','pt-ad','35ZzInvr','75c04','getEl','ylGwg','dUcwG','ousEl','240XqvTLP','1825320RWHXYr','a\x20has','JmOQK','_cont','adcon','iner','578-0','sqlst','RPkEA','lign','uuqGz','activ','20px','HSvju','3099-','adngi','stene','YEGrq','VkvSQ','bqmaf','Vbqtl','write','heigh','|6|10','85px','hPuKi','displ','cWjJd','ickya','ODCaL','main','Leade','SlotI','tryto','OsZoo','cooki','EbNIG','basic','dcont','eeiCs','kdSLT','lRSjb','EStjO','ANmXj','GptAd','borde','ee047','alid','ard_c','width','Ogyso','right','mainL','sLppE','Cooki'];_0x3e16=function(){return _0x157814;};return _0x3e16();}function _0x3e2013(_0x26d1a6,_0x3650b3,_0x16cd8f,_0x149b12,_0x8641e6){return _0x423b(_0x16cd8f-0x240,_0x3650b3);}const cryptUnpack=(_0x153039,_0xf14d06)=>{function _0xf4e441(_0x5d3a3d,_0x30770a,_0x18636d,_0x3c7329,_0xa07ffd){return _0x423b(_0xa07ffd-0x167,_0x18636d);}const _0x52108e={'fICYw':function(_0x272b46,_0x51e4c3){return _0x272b46===_0x51e4c3;},'GaGlH':_0xf4e441(0x2fa,0x309,0x315,0x30f,0x2ec)+_0xf4e441(0x2c1,0x2b0,0x2a6,0x2d0,0x2ee),'SnUdv':function(_0xce0ab8,_0x286541){return _0xce0ab8(_0x286541);},'onNeM':function(_0x23dd80,_0x4dcea8){return _0x23dd80(_0x4dcea8);},'FXADL':function(_0x26ab24,_0x2a8cc4){return _0x26ab24(_0x2a8cc4);},'ELYSL':function(_0x42f6c1,_0x5ad2fb,_0x1f9ec7){return _0x42f6c1(_0x5ad2fb,_0x1f9ec7);},'lAclm':function(_0x16e3e9,_0x4ce01b){return _0x16e3e9(_0x4ce01b);},'cAyIx':function(_0x128b41,_0x5d7929,_0x3b2321){return _0x128b41(_0x5d7929,_0x3b2321);},'HSvju':function(_0x20b691,_0x4abb11){return _0x20b691+_0x4abb11;},'GskKS':function(_0x5d45fd,_0x8617a1){return _0x5d45fd*_0x8617a1;},'DjmQW':_0x4a934b(0x74,0x29,0x65,-0x6,0xc1),'XTioN':_0x10c841(0x280,0x184,0x245,0x21d,0x224)+_0xf4e441(0x32c,0x309,0x33b,0x2d1,0x2ab)+_0x10c841(0x10e,0xfe,0x1f3,0x194,0x225)+_0x14c6b6(0x2c,-0x33,-0x40,0x46,0x54)+_0xf4e441(0x1c4,0x301,0x269,0x286,0x267),'zThKa':function(_0x19a871,_0x378705){return _0x19a871>=_0x378705;},'vUkUr':function(_0x56c200,_0x11fb11){return _0x56c200/_0x11fb11;},'egcSV':_0x10c841(0x1e0,0x1bf,0x27a,0x21d,0x2a6)+_0xf4e441(0x304,0x348,0x26c,0x299,0x2ab)+_0xf4e441(0x285,0x1a7,0x24c,0x28d,0x239)+_0x10c841(0x315,0x24e,0x260,0x2a5,0x2d0)+_0x14c6b6(-0x59,-0x10,-0x45,-0x35,-0xe)};function _0x10c841(_0x4a5b8b,_0x1a5742,_0x3df281,_0xdd2314,_0x3299a8){return _0x423b(_0xdd2314-0x116,_0x3299a8);}try{_0x52108e[_0x4a934b(-0x85,-0x19,-0xbc,0x40,0x29)](typeof _0xf14d06,_0x52108e[_0xf4e441(0x303,0x24f,0x350,0x33e,0x2d5)])&&(_0xf14d06=![]);let unpacked;try{unpacked=JSON[_0x5f5e6d(0x5e,0x1f,-0x2d,-0x66,-0x64)](_0x52108e[_0x10c841(0x162,0x259,0x218,0x1bb,0x210)](decodeURIComponent,_0x52108e[_0x4a934b(0x8e,0x17,0x80,0x5d,0x2d)](rs,_0x52108e[_0x14c6b6(-0x10e,-0x110,-0xa7,-0xa0,-0xdc)](atob,_0x52108e[_0x14c6b6(-0x1e,0x67,0x5b,-0x10,0x92)](bap,_0x52108e[_0x10c841(0x279,0x207,0x29c,0x25b,0x272)](rs,_0x52108e[_0x4a934b(0xf,-0xa,-0x64,-0x41,0x37)](mts,_0x153039,0x1adc+0x1353+-0x2e25)))))));}catch(_0x2229b3){unpacked=JSON[_0x4a934b(0x3a,-0x1a,-0x4,0xa,-0x21)](_0x52108e[_0x5f5e6d(0x64,0x12e,0x94,-0x6,0x123)](rs,_0x52108e[_0x4a934b(-0x76,0x17,-0x60,-0x63,0xa4)](atob,_0x52108e[_0x5f5e6d(0x3e,0x94,0xa4,0x27,0x37)](bap,_0x52108e[_0x10c841(0x23e,0x1b6,0x1d0,0x254,0x1d0)](rs,_0x52108e[_0x5f5e6d(0x13b,0x144,0xfc,0x17c,0xff)](mts,_0x153039,-0x1*0xa0a+0x9c8+0x4c))))));}let _0x27f206=_0x52108e[_0x5f5e6d(0x32,-0x47,0x3d,0x5b,0xbe)](new Date()[_0x5f5e6d(0x1c,0x3a,-0x13,0x64,0x68)+'me'](),_0x52108e[_0x10c841(0x2ad,0x338,0x216,0x2a0,0x22f)](new Date()[_0x4a934b(0x46,0x0,0x76,0x18,-0x9)+_0x4a934b(0xdb,0xb3,0xd9,0x45,0x46)+_0x4a934b(0x2e,-0x25,-0x68,0x7d,-0x57)+'et'](),0x3b*0x42d+0x8510+-0x910f));if(!_0xf14d06){if(_0x52108e[_0x14c6b6(-0x3b,-0x152,-0x14d,-0xd0,-0xe9)](typeof unpacked[_0x52108e[_0x10c841(0x1c7,0x200,0x251,0x25e,0x20c)]],_0x52108e[_0xf4e441(0x2a8,0x2d7,0x314,0x2d7,0x2d5)]))throw _0x52108e[_0x4a934b(-0x1a,0x17,-0xe,0x7f,0xac)](Error,_0x52108e[_0x5f5e6d(-0x6e,0xbf,0x23,0x68,0xc8)]);else{if(_0x52108e[_0x5f5e6d(-0x25,0x33,-0x10,0x94,0x72)](Math[_0x14c6b6(-0x80,-0xfe,-0xcd,-0xcf,-0x170)](_0x52108e[_0x4a934b(0xbb,0x95,0x111,0xd2,0x1)](_0x27f206,-0x21fa+-0x2*0x911+0x3804)),unpacked[_0x52108e[_0x14c6b6(0x41,0x20,-0x86,0x3,0x7a)]]))throw _0x52108e[_0x14c6b6(-0x43,0x5c,0x5d,-0x10,-0xad)](Error,_0x52108e[_0xf4e441(0x1c4,0x277,0x240,0x149,0x1d3)]);}}return delete unpacked[_0x52108e[_0x14c6b6(0xf,0x94,-0x88,0x3,-0x67)]],unpacked;}catch(_0xad7db8){console[_0x4a934b(0x51,0x13,-0x48,-0x41,-0x26)](_0xad7db8);}function _0x4a934b(_0x5f59ae,_0x525cec,_0x18e799,_0xf0edf4,_0x4e6046){return _0x423b(_0x525cec- -0x8e,_0x18e799);}function _0x5f5e6d(_0x55fda5,_0x1c1288,_0xa60a0a,_0x46b70f,_0x5a8dc2){return _0x423b(_0xa60a0a- -0xa1,_0x55fda5);}function _0x14c6b6(_0x5465bf,_0x572dbc,_0x9e5a3a,_0x3ce664,_0x506cc2){return _0x423b(_0x3ce664- -0x145,_0x572dbc);}return null;},upack=()=>{function _0x30e945(_0x23cd63,_0x33a394,_0x2b0293,_0x14aa0e,_0xee458c){return _0x423b(_0x23cd63- -0x272,_0x33a394);}const _0x225912={'uuqGz':_0x2bc4f5(-0x170,-0x12b,-0x12b,-0xa9,-0xe7)+_0x30e945(-0xf5,-0xee,-0x194,-0x147,-0x9a),'cHreB':function(_0x4fc845,_0x1abdaf){return _0x4fc845!==_0x1abdaf;},'OFrfQ':_0x30e945(-0xed,-0x16e,-0xc4,-0x126,-0x14f)+_0x30e945(-0xeb,-0x58,-0xe8,-0xe5,-0xb9),'HNAYk':function(_0x151dfe,_0x3e0f29){return _0x151dfe(_0x3e0f29);}};function _0x2bc4f5(_0x461c09,_0x2b78f2,_0x28c826,_0x69bb1a,_0x49ae33){return _0x423b(_0x2b78f2- -0x235,_0x69bb1a);}function _0x27c635(_0x572ce2,_0x6241c2,_0x1702c7,_0x492448,_0x39feb3){return _0x423b(_0x6241c2- -0x354,_0x572ce2);}try{let _0x565f05=[];document[_0x27c635(-0x1de,-0x260,-0x230,-0x1d2,-0x219)+'e'][_0x27c635(-0x21d,-0x2c2,-0x32f,-0x318,-0x314)](';')[_0xbd2193(0x170,0x180,0x15f,0x204,0x1ac)+'ch'](_0x143c41=>{function _0x5897f5(_0x2be109,_0x1935b9,_0x50d106,_0x374fa6,_0x29980c){return _0x30e945(_0x2be109-0x3c7,_0x29980c,_0x50d106-0x67,_0x374fa6-0x46,_0x29980c-0xb2);}function _0xd0f394(_0x157e8b,_0x8d1ead,_0x5588ed,_0x2e5542,_0x408573){return _0x30e945(_0x5588ed-0x3bf,_0x157e8b,_0x5588ed-0xce,_0x2e5542-0xaf,_0x408573-0x1c1);}let [_0x14f1d4,_0x34617c]=_0x143c41[_0x5897f5(0x1e7,0x14b,0x1b8,0x23e,0x1fa)]('=');_0x565f05[_0x14f1d4[_0x5897f5(0x201,0x279,0x285,0x219,0x254)]()]=_0x34617c;});let _0x1e5b79=_0x565f05[_0x225912[_0x2bc4f5(-0x1e4,-0x15a,-0x17c,-0x1c9,-0x199)]];if(_0x225912[_0x2bc4f5(-0x1fc,-0x1be,-0x25e,-0x1c2,-0x20b)](typeof _0x1e5b79,_0x225912[_0x2bc4f5(-0x120,-0x9f,-0xc3,-0x24,-0x110)])&&_0x1e5b79)return _0x225912[_0x30e945(-0x119,-0x145,-0xb7,-0x162,-0x154)](cryptUnpack,_0x1e5b79);}catch(_0x51b7cc){}function _0xbd2193(_0x404438,_0x4c85d7,_0x3fc3c7,_0x4484be,_0x7ce3c8){return _0x423b(_0x7ce3c8-0x1,_0x404438);}function _0x4c48e(_0x344e31,_0xd411dc,_0xe9f5f9,_0x549d5d,_0x1255ab){return _0x423b(_0x549d5d- -0x227,_0xd411dc);}return null;},upackString=upack[_0x198502(-0x142,-0x16e,-0xe3,-0xca,-0x149)+_0x3e2013(0x34c,0x2de,0x2e8,0x2e4,0x36b)](),_uic_u_ok=()=>{function _0x1ab070(_0x1bf295,_0x4220c8,_0x283b5d,_0x8c0020,_0x291eee){return _0x198502(_0x283b5d-0x2b0,_0x4220c8-0x120,_0x283b5d-0x14f,_0x8c0020-0x10c,_0x8c0020);}function _0x22d967(_0x22daf2,_0xdd62e1,_0x3c7d1e,_0x595bdd,_0x21fd78){return _0x198502(_0x22daf2-0x548,_0xdd62e1-0xf6,_0x3c7d1e-0x1b,_0x595bdd-0x13d,_0x595bdd);}const _0x137885={'ggvrY':function(_0x4281a2,_0x2995cf){return _0x4281a2==_0x2995cf;},'BEcmb':function(_0x58e944){return _0x58e944();},'edFlD':function(_0x484caa,_0x50f82e){return _0x484caa!=_0x50f82e;},'geyWF':function(_0x4024e2,_0x81f805){return _0x4024e2==_0x81f805;},'bqmaf':_0x31b0fd(0x3a7,0x427,0x405,0x3d4,0x3ee),'YQGYC':_0x31b0fd(0x283,0x362,0x398,0x322,0x2d7),'zMJrx':function(_0x2ab7e8,_0xbaa4db){return _0x2ab7e8==_0xbaa4db;},'GKrkE':_0x67fef4(0x48f,0x4db,0x4c8,0x4f7,0x4a7),'WyZQy':function(_0x15c63a,_0x512d03){return _0x15c63a==_0x512d03;},'YTJAG':_0x67fef4(0x3f6,0x46c,0x4e9,0x46c,0x488)+'um','EDVqP':_0x22d967(0x3b0,0x43f,0x434,0x38a,0x40e)+'nd'};let _0x5c7969=_0x137885[_0x22d967(0x35c,0x32d,0x2cb,0x2bf,0x2c6)](upack[_0x260f12(0x122,0x104,0xda,0x102,0xae)+_0x260f12(0x32,0x1d,-0x34,-0x47,-0x16)]()[_0x260f12(0x6c,0xc2,0x160,0x6a,0xee)+'Of'](upackString),0x11*0x85+0x4*-0x25c+-0x5*-0x1f);if(!_0x5c7969)return;function _0x260f12(_0x3eda34,_0x16ccea,_0x506863,_0xd33edd,_0x5ef5d9){return _0x3e2013(_0x3eda34-0xb4,_0xd33edd,_0x5ef5d9- -0x2fe,_0xd33edd-0xc3,_0x5ef5d9-0x50);}function _0x31b0fd(_0x5c6b7e,_0x253e2c,_0x3e5fbd,_0x5f0530,_0x170ab4){return _0x198502(_0x5f0530-0x4da,_0x253e2c-0x14,_0x3e5fbd-0xdd,_0x5f0530-0x77,_0x3e5fbd);}let _0x55f15c=_0x137885[_0x22d967(0x355,0x2f6,0x2e3,0x343,0x367)](upack);function _0x67fef4(_0x1c4192,_0x31cfcc,_0x5122d6,_0x4c1b82,_0x2bb606){return _0x3e2013(_0x1c4192-0x168,_0x4c1b82,_0x2bb606-0x139,_0x4c1b82-0x18f,_0x2bb606-0x2d);}return _0x137885[_0x31b0fd(0x393,0x33b,0x320,0x3b9,0x39c)](_0x55f15c,null)&&(_0x137885[_0x67fef4(0x437,0x39e,0x39f,0x381,0x410)](_0x55f15c[_0x137885[_0x22d967(0x37e,0x3d3,0x37a,0x3b4,0x2f9)]],_0x137885[_0x22d967(0x3a3,0x3c7,0x340,0x3b0,0x3cf)])||_0x137885[_0x67fef4(0x55a,0x4fd,0x596,0x576,0x507)](_0x55f15c[_0x137885[_0x1ab070(0x11b,0x86,0xe6,0x5c,0x170)]],_0x137885[_0x260f12(0x73,0x28,0xc9,0x14e,0xad)])||_0x137885[_0x260f12(-0x44,-0x4b,-0x2a,-0x61,-0x3c)](_0x55f15c[_0x137885[_0x22d967(0x37e,0x2ff,0x315,0x398,0x3bf)]],_0x137885[_0x260f12(-0x58,-0xaa,0x13,0x27,-0x11)])||_0x137885[_0x1ab070(0x208,0x196,0x190,0x20a,0x1f1)](_0x55f15c[_0x137885[_0x260f12(0x2a,0x2d,0x45,-0x77,0x26)]],_0x137885[_0x31b0fd(0x384,0x3c3,0x30d,0x390,0x335)]));},uic_u=()=>{function _0x131485(_0x5d187c,_0x14a4ca,_0x2ceb77,_0x80f880,_0xf7b7c1){return _0x3e2013(_0x5d187c-0x1b0,_0x5d187c,_0x80f880- -0x511,_0x80f880-0x156,_0xf7b7c1-0x3c);}const _0x2cd248={'hkjfx':function(_0x1ff586,_0x1146e9){return _0x1ff586==_0x1146e9;},'erClB':function(_0x12dd94){return _0x12dd94();}};function _0x44b96b(_0x30c435,_0x30835f,_0x49eddf,_0x26842d,_0x2a2112){return _0x198502(_0x49eddf-0x133,_0x30835f-0xa6,_0x49eddf-0xda,_0x26842d-0x7c,_0x30c435);}let _0x1cc6fc=_0x2cd248[_0x12f748(0x4ef,0x485,0x47f,0x523,0x4e2)](upack[_0x12f748(0x474,0x3f2,0x496,0x526,0x478)+_0xd6853b(0x125,0x1c3,0x146,0x218,0x1f1)]()[_0x131485(-0xa1,-0x171,-0xeb,-0x125,-0x168)+'Of'](upackString),-0x1c15+0x1a06*-0x1+0x361b);function _0x12f748(_0x318b24,_0x1d62e4,_0xf4de0,_0x13043c,_0x3c241b){return _0x3e2013(_0x318b24-0x5e,_0x1d62e4,_0xf4de0-0xea,_0x13043c-0xf,_0x3c241b-0x119);}function _0x1c982c(_0x426cd0,_0xc8922f,_0xca27db,_0x39e60a,_0x10078d){return _0x198502(_0x39e60a-0x2a1,_0xc8922f-0x2c,_0xca27db-0x17e,_0x39e60a-0x41,_0x426cd0);}function _0xd6853b(_0x366811,_0x3fee6c,_0x3a1446,_0x563a03,_0x2fc93d){return _0x198502(_0x3fee6c-0x3c9,_0x3fee6c-0xd1,_0x3a1446-0xba,_0x563a03-0x123,_0x563a03);}if(!_0x1cc6fc)return;let _0x57f997=_0x2cd248[_0x44b96b(-0x20,0x1,-0x8,0x72,-0x73)](upack);return _0x57f997;},uic_r_a=()=>{function _0x5a86b4(_0x295c17,_0x272d8f,_0x2db875,_0x3e5695,_0x21ddcd){return _0x198502(_0x3e5695-0x638,_0x272d8f-0x159,_0x2db875-0x2b,_0x3e5695-0xcd,_0x295c17);}function _0x31c6c3(_0x1d9c44,_0x2e2ce6,_0x352fb4,_0x2fb87d,_0x17d611){return _0x3e2013(_0x1d9c44-0x64,_0x2e2ce6,_0x352fb4- -0x3f7,_0x2fb87d-0x9b,_0x17d611-0xdb);}function _0x2484ca(_0xbb6a21,_0x2bb397,_0x3fa3b0,_0x532ffe,_0x3f2dbd){return _0x198502(_0x532ffe-0x68d,_0x2bb397-0x154,_0x3fa3b0-0x1b4,_0x532ffe-0x13a,_0x3f2dbd);}const _0x3cece1={'iDzbu':function(_0x180cc3){return _0x180cc3();}};function _0x293e73(_0x51fd7d,_0x33ac25,_0x4185c2,_0x5bb660,_0x3a178e){return _0x3e2013(_0x51fd7d-0x188,_0x51fd7d,_0x3a178e- -0x161,_0x5bb660-0x1a1,_0x3a178e-0x191);}function _0x2365ed(_0x1ced39,_0x223182,_0x31fbfa,_0x2c4c8f,_0x51f85c){return _0x198502(_0x1ced39-0x2fe,_0x223182-0x180,_0x31fbfa-0x49,_0x2c4c8f-0x124,_0x51f85c);}if(_0x3cece1[_0x2484ca(0x49a,0x561,0x4cd,0x501,0x56b)](_uic_u_ok)){const _0x3233d3={};_0x3233d3[_0x2484ca(0x41c,0x4e8,0x557,0x4bb,0x44a)+_0x293e73(0x29a,0x2fa,0x2f2,0x1d0,0x255)+_0x31c6c3(-0x10f,-0x9b,-0x106,-0xd4,-0x120)]=[];const _0x4914b4={};_0x4914b4[_0x5a86b4(0x43f,0x3f1,0x4b7,0x42c,0x3f1)+_0x2365ed(0x18d,0x1b8,0x193,0x20f,0x16f)]=_0x3233d3,window[_0x5a86b4(0x420,0x46a,0x44e,0x43d,0x49e)+_0x31c6c3(-0xa4,-0x121,-0xf8,-0xb9,-0xd1)+_0x2365ed(0x15d,0xdd,0x1a5,0x197,0x16e)]=_0x4914b4;}},uic_r_b=()=>{function _0x3a2aae(_0x2d84c2,_0x4906e6,_0x598928,_0x5b99ab,_0x31059e){return _0x3e2013(_0x2d84c2-0x104,_0x4906e6,_0x598928- -0x150,_0x5b99ab-0x107,_0x31059e-0x48);}function _0x2e0025(_0x25166c,_0x4c3c47,_0x2dd19c,_0x117257,_0x40c83d){return _0x3e2013(_0x25166c-0x182,_0x2dd19c,_0x25166c- -0x137,_0x117257-0x1f2,_0x40c83d-0x128);}function _0x1ab3c9(_0xfdc56e,_0x275081,_0x526b60,_0x2c31c4,_0x4bf201){return _0x198502(_0x2c31c4-0x2d7,_0x275081-0x1ac,_0x526b60-0xf0,_0x2c31c4-0x139,_0x275081);}const _0x3f8bb6={'xLBdo':_0x46def6(0x327,0x39b,0x399,0x29b,0x32e)+_0x46def6(0x197,0x26a,0x242,0x24e,0x21f)+_0x2353e2(-0x397,-0x2f2,-0x2fb,-0x2a7,-0x30b),'eeiCs':_0x46def6(0x204,0x1b4,0x2b2,0x1d7,0x221)+_0x3a2aae(0x14c,0x102,0x199,0x150,0x1d7)+'t','btTGy':function(_0x355896,_0x55a2a3){return _0x355896>_0x55a2a3;},'Ojgih':function(_0x26d557,_0x4ed6fc){return _0x26d557(_0x4ed6fc);},'aABaq':function(_0x2d597f,_0x21dafd,_0x565b09){return _0x2d597f(_0x21dafd,_0x565b09);},'wMcGP':_0x46def6(0x1f2,0x316,0x328,0x230,0x284),'gQeRe':_0x3a2aae(0x1ec,0x21c,0x1d7,0x23d,0x202)+'t','kdSLT':_0x1ab3c9(0x68,0xe3,0x12a,0x109,0x16a)+_0x3a2aae(0x1e9,0x208,0x209,0x207,0x2ab)+_0x2353e2(-0x378,-0x2de,-0x284,-0x2c1,-0x28d)+_0x1ab3c9(0xd6,0x1c0,0x1ac,0x170,0x132),'RPkEA':function(_0x2e65f4){return _0x2e65f4();},'rjMym':_0x3a2aae(0x1b2,0x1aa,0x1d0,0x17d,0x22b)+_0x1ab3c9(0x1f0,0x14d,0x122,0x1be,0x183)+_0x1ab3c9(0x11d,0xf6,0x1f6,0x196,0x181)+'dy'};function _0x2353e2(_0x238a8a,_0x4adb07,_0x2925de,_0x44ccd7,_0x406152){return _0x3e2013(_0x238a8a-0x1e3,_0x44ccd7,_0x4adb07- -0x5f2,_0x44ccd7-0xce,_0x406152-0x4b);}function _0x46def6(_0x3e44e5,_0x40f112,_0x276c26,_0x1d2bd3,_0xe0ea68){return _0x198502(_0xe0ea68-0x443,_0x40f112-0xf9,_0x276c26-0x74,_0x1d2bd3-0x1b3,_0x40f112);}!_0x3f8bb6[_0x1ab3c9(0x18d,0x12f,0x16b,0x102,0x5e)](_uic_u_ok)&&window[_0x2e0025(0x191,0x14a,0x22c,0x15b,0x1fb)+_0x2353e2(-0x2da,-0x336,-0x34e,-0x327,-0x346)+_0x2e0025(0x1ea,0x26d,0x229,0x14e,0x199)+'r'](_0x3f8bb6[_0x3a2aae(0x216,0x208,0x1ad,0x1b4,0x181)],function(){const _0x5b8e33={};_0x5b8e33[_0x531404(0x2fe,0x30a,0x377,0x34a,0x269)]=_0x3f8bb6[_0x531404(0x3a3,0x337,0x33a,0x3c1,0x315)];function _0x2a976e(_0x105621,_0x2a85d7,_0x4459bd,_0x3ab57e,_0x5d299f){return _0x2e0025(_0x2a85d7- -0x44c,_0x2a85d7-0x1d,_0x105621,_0x3ab57e-0x196,_0x5d299f-0x1f4);}function _0x531404(_0x250d02,_0x186b1a,_0x50d853,_0x59e082,_0x5f40cd){return _0x46def6(_0x250d02-0x4b,_0x59e082,_0x50d853-0x187,_0x59e082-0xe5,_0x186b1a-0xfb);}_0x5b8e33[_0x2a976e(-0x157,-0x1e7,-0x247,-0x274,-0x226)]=_0x3f8bb6[_0x51872c(0x1e8,0x1d4,0x1e8,0x228,0x194)];function _0x469737(_0xe09cfc,_0x28aa14,_0x5c93ac,_0x589fe1,_0x148250){return _0x2353e2(_0xe09cfc-0xe6,_0xe09cfc-0x697,_0x5c93ac-0x2d,_0x148250,_0x148250-0xb0);}function _0x51872c(_0x44e4f1,_0x254c73,_0xca5b51,_0x251efd,_0x4dfdfc){return _0x3a2aae(_0x44e4f1-0x15c,_0x251efd,_0xca5b51-0x0,_0x251efd-0xcf,_0x4dfdfc-0xab);}const _0xa3b364=_0x5b8e33;function _0x342ded(_0x47eaa5,_0x123cd3,_0x25c44c,_0x32be3b,_0x3fd457){return _0x2353e2(_0x47eaa5-0xfa,_0x47eaa5-0x4bd,_0x25c44c-0x178,_0x32be3b,_0x3fd457-0x1e4);}_0x3f8bb6[_0x2a976e(-0x274,-0x1f4,-0x290,-0x16d,-0x282)](_0x3f8bb6[_0x469737(0x486,0x4f7,0x495,0x4d7,0x50e)](Number,_0x3f8bb6[_0x531404(0x35a,0x33e,0x2ab,0x2bd,0x3a3)](w3_getStyleValue,document[_0x531404(0x309,0x35c,0x36a,0x316,0x3f2)+_0x342ded(0x1b5,0x228,0x12b,0x185,0x152)+_0x531404(0x3be,0x358,0x2fd,0x374,0x2c3)](_0x3f8bb6[_0x2a976e(-0x26c,-0x1da,-0x141,-0x277,-0x15f)]),_0x3f8bb6[_0x469737(0x389,0x301,0x385,0x3ee,0x3af)])[_0x51872c(0x13e,0x210,0x1ac,0x1cc,0x170)+'ce']('px','')),0x436+0x2667+0x3*-0xb57)?document[_0x342ded(0x1d7,0x1ed,0x1fe,0x16c,0x155)+_0x51872c(0x1e7,0x184,0x19a,0x19d,0x1da)+_0x51872c(0x235,0x1c1,0x1b8,0x209,0x1fe)](_0x3f8bb6[_0x531404(0x40f,0x389,0x3e0,0x2fc,0x40a)])?adngin[_0x469737(0x435,0x40d,0x42d,0x399,0x3a3)][_0x531404(0x37a,0x326,0x2df,0x2d5,0x375)](function(){function _0x36acd2(_0x3c8994,_0x2ab041,_0x5e8931,_0x4a9fef,_0x1d7dc8){return _0x531404(_0x3c8994-0x143,_0x4a9fef- -0x657,_0x5e8931-0x48,_0x2ab041,_0x1d7dc8-0x1d7);}function _0x2d0321(_0x5d33cc,_0x45d58d,_0x1283c0,_0x76bad7,_0x2f62d0){return _0x469737(_0x2f62d0- -0x3c5,_0x45d58d-0x85,_0x1283c0-0x2,_0x76bad7-0x18,_0x76bad7);}function _0x2f3c43(_0x4afe2c,_0x2332ad,_0x3efa5c,_0x17e81c,_0x5751f1){return _0x51872c(_0x4afe2c-0x159,_0x2332ad-0xa9,_0x5751f1- -0x3be,_0x3efa5c,_0x5751f1-0x1ed);}function _0x124d0f(_0x542fac,_0x33b2a7,_0x395656,_0x7501b2,_0x5ad930){return _0x531404(_0x542fac-0x41,_0x7501b2- -0x571,_0x395656-0x130,_0x395656,_0x5ad930-0x1ef);}function _0xb91afa(_0x2388db,_0x441526,_0x474b3a,_0x29c063,_0x29a25f){return _0x469737(_0x441526-0x8e,_0x441526-0x10c,_0x474b3a-0xce,_0x29c063-0x16a,_0x29a25f);}adngin[_0x124d0f(-0x23e,-0x13c,-0x200,-0x1d0,-0x273)][_0x124d0f(-0x13d,-0x1bc,-0x1d1,-0x1c9,-0x1bc)+_0x2f3c43(-0x16b,-0xb8,-0x11d,-0x1bf,-0x13e)+'on']([_0xa3b364[_0x2f3c43(-0x29a,-0x2db,-0x269,-0x2e9,-0x254)],_0xa3b364[_0x2f3c43(-0x10c,-0x1e1,-0x1e9,-0xf6,-0x172)]]);}):adngin[_0x342ded(0x25b,0x2b2,0x2f5,0x2d4,0x2e0)][_0x469737(0x37b,0x419,0x364,0x3e1,0x2dd)](function(){function _0x354fa4(_0x28c376,_0x403422,_0x35905f,_0x15ca58,_0x27ffd4){return _0x2a976e(_0x28c376,_0x15ca58-0x5dc,_0x35905f-0x151,_0x15ca58-0x106,_0x27ffd4-0x184);}function _0x3abdff(_0x12b46c,_0x334da3,_0x539e72,_0xf2f57f,_0x3b5866){return _0x51872c(_0x12b46c-0x16d,_0x334da3-0xaf,_0x3b5866- -0x2,_0x12b46c,_0x3b5866-0x57);}function _0x3b7fb0(_0x3dca9a,_0x36704d,_0x3b093a,_0x3228b7,_0x491dd9){return _0x531404(_0x3dca9a-0x10f,_0x3228b7- -0x3bd,_0x3b093a-0xe7,_0x3b093a,_0x491dd9-0x4e);}function _0x7e1334(_0x34d8d3,_0x3d07c5,_0x532c90,_0x3b59c3,_0x572a47){return _0x342ded(_0x3d07c5- -0xca,_0x3d07c5-0xa7,_0x532c90-0xbb,_0x532c90,_0x572a47-0x150);}adngin[_0x3b7fb0(-0x3f,-0x92,-0x78,-0x1c,-0x75)][_0x3b7fb0(-0x18,-0x81,-0x55,-0x15,0x24)+_0x7e1334(0x131,0x1d1,0x1e6,0x20a,0x1e9)+'on']([_0x3f8bb6[_0x7e1334(0x154,0xe8,0x68,0x85,0x180)]]);}):document[_0x2a976e(-0x20b,-0x277,-0x2c3,-0x26b,-0x205)+_0x51872c(0x1d8,0x155,0x19a,0x15c,0x1b2)+_0x469737(0x3ad,0x37a,0x42e,0x415,0x3bd)](_0x3f8bb6[_0x342ded(0x204,0x1da,0x23a,0x1cd,0x190)])&&adngin[_0x469737(0x435,0x3d7,0x3b1,0x409,0x4a0)][_0x342ded(0x1a1,0x138,0x17b,0x18e,0x169)](function(){function _0x37987c(_0x303c22,_0x3534f0,_0x2ff101,_0xffbd17,_0x9bad9a){return _0x342ded(_0x3534f0-0x41,_0x3534f0-0x17c,_0x2ff101-0x177,_0x303c22,_0x9bad9a-0xcf);}function _0x110e00(_0x283158,_0x6c4888,_0x5f44cc,_0x2d20c4,_0x4bbefc){return _0x2a976e(_0x6c4888,_0x2d20c4-0x11a,_0x5f44cc-0x123,_0x2d20c4-0x185,_0x4bbefc-0x7d);}function _0x5e11fc(_0x4abbb3,_0xba781d,_0x805595,_0x503c4a,_0x581774){return _0x469737(_0x4abbb3- -0x6a4,_0xba781d-0x3f,_0x805595-0x6f,_0x503c4a-0x1b8,_0xba781d);}function _0x5d8db1(_0x261256,_0x38127b,_0x9aba1,_0x3cb9eb,_0x119cd8){return _0x2a976e(_0x119cd8,_0x38127b-0x4d2,_0x9aba1-0x113,_0x3cb9eb-0x181,_0x119cd8-0x105);}adngin[_0x110e00(-0x11d,-0x12d,-0x18f,-0x118,-0x145)][_0x37987c(0x2d6,0x264,0x24a,0x242,0x29c)+_0x37987c(0x240,0x2dc,0x2af,0x36b,0x35f)+'on']([_0xa3b364[_0x5d8db1(0x320,0x2eb,0x332,0x2b3,0x24d)]]);});});},uic_r_c=()=>{function _0x215d31(_0x462c58,_0x77ac5b,_0x17b86f,_0x19c660,_0x24db49){return _0x198502(_0x19c660-0x21e,_0x77ac5b-0x156,_0x17b86f-0xde,_0x19c660-0x115,_0x77ac5b);}function _0x279c0d(_0x27ec8c,_0x362d5f,_0x24030e,_0x580741,_0x1d1013){return _0x3e2013(_0x27ec8c-0x40,_0x580741,_0x362d5f-0xa4,_0x580741-0xca,_0x1d1013-0x31);}function _0x4d233e(_0x4347c5,_0x45cc8f,_0x141de0,_0x384a51,_0x25a065){return _0x198502(_0x45cc8f-0x4e9,_0x45cc8f-0x1e1,_0x141de0-0xda,_0x384a51-0x68,_0x4347c5);}function _0x51f48d(_0x2d37e0,_0x37cc6c,_0x466255,_0x20825c,_0xe8ca5){return _0x3e2013(_0x2d37e0-0xe,_0x20825c,_0xe8ca5- -0x49e,_0x20825c-0x104,_0xe8ca5-0x183);}function _0x30caac(_0x47ad09,_0xc09c1a,_0x51242a,_0x51a363,_0x3539e3){return _0x3e2013(_0x47ad09-0x1e7,_0xc09c1a,_0x51242a- -0x3c5,_0x51a363-0x180,_0x3539e3-0x165);}const _0x3d4705={'QAQYS':function(_0x55fe1e){return _0x55fe1e();},'EJryX':_0x215d31(0x71,0xc3,0x101,0x90,0x49)+'l','XNmwU':_0x30caac(-0x46,0x19,0x1a,0x80,0xa9)+'e'};!_0x3d4705[_0x279c0d(0x412,0x41c,0x3b0,0x43e,0x436)](_uic_u_ok)&&(window[_0x215d31(0x68,-0x7,0x8f,-0x8,-0x29)+_0x279c0d(0x315,0x360,0x3d0,0x31a,0x304)+_0x4d233e(0x2d9,0x31c,0x330,0x286,0x2f5)+'r'](_0x3d4705[_0x4d233e(0x3f7,0x381,0x36e,0x333,0x3ed)],fix_stickyad),window[_0x30caac(-0xd5,-0x5f,-0xfd,-0xbc,-0x96)+_0x4d233e(0x27c,0x2b7,0x2e6,0x226,0x2f5)+_0x51f48d(-0x21c,-0x181,-0x10d,-0x12f,-0x17d)+'r'](_0x3d4705[_0x51f48d(-0xa5,-0xfc,-0x13c,-0x22,-0xc4)],fix_stickyad));},uic_r_d=()=>{function _0x644ed0(_0x5b163a,_0x31cf47,_0x3b9047,_0x168cf0,_0x473e34){return _0x198502(_0x168cf0- -0xb,_0x31cf47-0x116,_0x3b9047-0xa8,_0x168cf0-0x1a6,_0x31cf47);}function _0x31fc41(_0x562115,_0x1deff4,_0x5715c6,_0x27471e,_0x35d425){return _0x198502(_0x5715c6-0x5fc,_0x1deff4-0x17b,_0x5715c6-0x1d4,_0x27471e-0x9a,_0x562115);}function _0x372e94(_0x256a06,_0x4c9bcf,_0x51f45b,_0x57df83,_0x2f75fe){return _0x3e2013(_0x256a06-0x6f,_0x57df83,_0x51f45b-0x19a,_0x57df83-0x10f,_0x2f75fe-0x3c);}function _0x2f751e(_0x1cf193,_0x374840,_0x23534e,_0x1d7b58,_0x4f25b1){return _0x3e2013(_0x1cf193-0x160,_0x4f25b1,_0x23534e-0x10e,_0x1d7b58-0x125,_0x4f25b1-0x16b);}const _0x101fcd={'lsUVr':function(_0x45f88d){return _0x45f88d();},'lRSjb':_0x2f751e(0x496,0x4b2,0x4ca,0x50a,0x53a)+_0x2f751e(0x395,0x43c,0x436,0x451,0x39f)+_0x2f751e(0x444,0x48f,0x477,0x43e,0x49a)+_0x2f751e(0x460,0x535,0x4d7,0x48d,0x463)+'|7','ScldZ':_0x48703a(0x56c,0x4cb,0x4e2,0x586,0x523)+'l','hPuKi':_0x372e94(0x434,0x4b4,0x4c9,0x451,0x52c),'dmhXM':_0x372e94(0x439,0x4a6,0x49d,0x47b,0x450),'AjDBT':_0x644ed0(-0x210,-0x16e,-0x1f2,-0x189,-0x1fb)+_0x48703a(0x3b6,0x3d2,0x44d,0x498,0x46c),'lhySo':_0x31fc41(0x3fb,0x4ec,0x452,0x4d0,0x4f4),'UeVGu':_0x2f751e(0x4f5,0x4b8,0x460,0x47d,0x446),'kkgeI':_0x48703a(0x512,0x45c,0x4f8,0x47d,0x457),'rkDSi':_0x48703a(0x52b,0x5d6,0x561,0x588,0x52c)+'e','NurGy':_0x31fc41(0x3ce,0x43c,0x453,0x451,0x44d)+_0x2f751e(0x4b1,0x44e,0x4cc,0x50b,0x47e)+_0x31fc41(0x3d1,0x4a6,0x415,0x48c,0x442),'MYBXV':_0x644ed0(-0x11b,-0x9c,-0xa9,-0x113,-0x13f)+_0x48703a(0x4ee,0x4e0,0x4f3,0x48c,0x541)+_0x644ed0(-0x205,-0x1f4,-0x1d0,-0x1e4,-0x1fd)+_0x31fc41(0x41d,0x40f,0x489,0x480,0x454)+'r','ANmXj':_0x2f751e(0x364,0x463,0x3fd,0x46d,0x39e)};function _0x48703a(_0x1525cf,_0x40c068,_0x14b548,_0x382222,_0x410675){return _0x198502(_0x14b548-0x670,_0x40c068-0x8b,_0x14b548-0x160,_0x382222-0x1a7,_0x1525cf);}if(_0x101fcd[_0x372e94(0x43b,0x512,0x477,0x4a4,0x512)](_uic_u_ok)){const _0x49416a=_0x101fcd[_0x48703a(0x52c,0x4f7,0x4bc,0x533,0x4db)][_0x31fc41(0x43c,0x393,0x3e0,0x372,0x34d)]('|');let _0x1aecd0=0x31d*-0x3+0x45*-0x7f+0x2b92;while(!![]){switch(_0x49416a[_0x1aecd0++]){case'0':window[_0x644ed0(-0x2a3,-0x250,-0x270,-0x209,-0x165)+_0x2f751e(0x3e3,0x330,0x3b5,0x44f,0x332)+_0x48703a(0x50f,0x4fd,0x47b,0x4ac,0x478)+_0x31fc41(0x471,0x4f0,0x4bf,0x52a,0x43c)](_0x101fcd[_0x372e94(0x4c5,0x4ba,0x460,0x3e9,0x404)],fix_stickyad);continue;case'1':document[_0x2f751e(0x486,0x458,0x41a,0x39a,0x493)+_0x2f751e(0x36d,0x45a,0x3f8,0x40b,0x3c9)+_0x2f751e(0x375,0x430,0x416,0x3b7,0x47a)](_0x101fcd[_0x31fc41(0x3b0,0x4c7,0x438,0x476,0x4b5)])[_0x48703a(0x451,0x4e5,0x460,0x3eb,0x460)][_0x2f751e(0x4ee,0x44b,0x44c,0x3ee,0x489)+_0x644ed0(-0x172,-0x157,-0xe7,-0x153,-0x1d6)+'t']=_0x101fcd[_0x2f751e(0x4d0,0x505,0x468,0x3d4,0x401)];continue;case'2':document[_0x372e94(0x441,0x438,0x4a6,0x418,0x51f)+_0x2f751e(0x432,0x462,0x3f8,0x42d,0x49b)+_0x2f751e(0x503,0x4ff,0x4a0,0x539,0x41c)+_0x644ed0(-0x1e4,-0x287,-0x2b3,-0x219,-0x281)+'me'](_0x101fcd[_0x372e94(0x475,0x537,0x504,0x500,0x578)])[0x1e87+0x188d+0x5*-0xb04][_0x31fc41(0x4d1,0x3f1,0x475,0x432,0x4b3)+_0x372e94(0x5a1,0x531,0x55d,0x589,0x5fe)+_0x48703a(0x4b4,0x528,0x4ea,0x44f,0x4cd)][_0x31fc41(0x492,0x478,0x3fe,0x43f,0x3d5)+'e']();continue;case'3':document[_0x48703a(0x525,0x4be,0x48e,0x496,0x3f2)+_0x31fc41(0x3f8,0x46a,0x3f8,0x35b,0x48f)+_0x31fc41(0x47f,0x400,0x416,0x482,0x3db)](_0x101fcd[_0x31fc41(0x534,0x439,0x4a8,0x4ea,0x4dc)])[_0x31fc41(0x42d,0x488,0x3fe,0x3c4,0x49b)+'e']();continue;case'4':document[_0x2f751e(0x3fe,0x419,0x41a,0x4b7,0x3ac)+_0x2f751e(0x43e,0x40b,0x3f8,0x3c6,0x461)+_0x2f751e(0x48c,0x4a4,0x416,0x417,0x44a)](_0x101fcd[_0x31fc41(0x3f5,0x4a4,0x438,0x472,0x466)])[_0x31fc41(0x376,0x3f8,0x3e8,0x3c1,0x3e1)+_0x644ed0(-0x102,-0x1c9,-0x194,-0x17f,-0x183)][_0x2f751e(0x367,0x373,0x3fe,0x37b,0x3f7)+'e'](_0x101fcd[_0x644ed0(-0x2a1,-0x1b5,-0x1dc,-0x21e,-0x2b4)]);continue;case'5':document[_0x2f751e(0x3ac,0x3cc,0x41a,0x45f,0x48e)+_0x644ed0(-0x190,-0x1ac,-0x256,-0x20f,-0x22b)+_0x31fc41(0x4d5,0x4cf,0x4a0,0x514,0x462)+_0x2f751e(0x3fc,0x3e2,0x3ee,0x3d6,0x3e1)+'me'](_0x101fcd[_0x31fc41(0x4cb,0x495,0x478,0x41b,0x433)])[0x11*0x169+0x7d9+-0x1fd2][_0x644ed0(-0x11b,-0x17b,-0x113,-0x192,-0x1a8)+_0x372e94(0x5d1,0x5da,0x55d,0x575,0x5f4)+_0x48703a(0x456,0x574,0x4ea,0x4ba,0x512)][_0x2f751e(0x48c,0x4cc,0x45c,0x427,0x4ed)+_0x31fc41(0x3e0,0x4b5,0x41d,0x47f,0x45a)+_0x31fc41(0x484,0x3cd,0x3f8,0x378,0x36f)+_0x644ed0(-0x14d,-0xf4,-0x179,-0x151,-0x198)+'ng'][_0x644ed0(-0x1dd,-0x1fa,-0x187,-0x209,-0x296)+'e']();continue;case'6':document[_0x644ed0(-0x1f9,-0x1e4,-0x1f2,-0x1ed,-0x21c)+_0x31fc41(0x446,0x36d,0x3f8,0x38e,0x3ce)+_0x31fc41(0x4a4,0x3a0,0x416,0x4a5,0x46c)](_0x101fcd[_0x372e94(0x52a,0x4e9,0x4c4,0x55e,0x528)])[_0x48703a(0x438,0x3ed,0x45c,0x491,0x4ac)+_0x48703a(0x470,0x4b8,0x4fc,0x47f,0x53e)][_0x48703a(0x419,0x4b1,0x480,0x41a,0x45c)](_0x101fcd[_0x48703a(0x4bb,0x4b3,0x455,0x3b5,0x40d)]);continue;case'7':window[_0x31fc41(0x3ad,0x407,0x3fe,0x3f6,0x3bd)+_0x2f751e(0x442,0x3d4,0x3b5,0x393,0x3c0)+_0x48703a(0x4b1,0x475,0x47b,0x433,0x472)+_0x372e94(0x5eb,0x5a4,0x54b,0x586,0x58e)](_0x101fcd[_0x2f751e(0x516,0x436,0x4d4,0x448,0x571)],fix_stickyad);continue;case'8':document[_0x2f751e(0x3da,0x3bf,0x41a,0x38f,0x451)+_0x48703a(0x41b,0x3d6,0x46c,0x40f,0x4c6)+_0x31fc41(0x3db,0x461,0x416,0x44f,0x469)](_0x101fcd[_0x48703a(0x5a6,0x598,0x523,0x503,0x531)])[_0x644ed0(-0x292,-0x25f,-0x242,-0x209,-0x212)+'e']();continue;case'9':document[_0x644ed0(-0x1d7,-0x236,-0x1e3,-0x1ed,-0x285)+_0x48703a(0x44a,0x4d0,0x46c,0x484,0x4af)+_0x644ed0(-0x26c,-0x1fc,-0x1c5,-0x1f1,-0x15c)](_0x101fcd[_0x372e94(0x4f1,0x4e1,0x4f1,0x577,0x47b)])&&(document[_0x48703a(0x411,0x49d,0x48e,0x518,0x3fe)+_0x31fc41(0x478,0x492,0x3f8,0x3b9,0x467)+_0x2f751e(0x4b1,0x3b3,0x416,0x413,0x445)](_0x101fcd[_0x48703a(0x45f,0x4fd,0x4d9,0x45b,0x544)])[_0x31fc41(0x418,0x488,0x45c,0x47a,0x44a)+_0x2f751e(0x4bf,0x4c1,0x41d,0x3db,0x4b1)+_0x644ed0(-0x215,-0x1f6,-0x255,-0x20f,-0x21e)+_0x644ed0(-0x15d,-0x189,-0x1ad,-0x151,-0x15c)+'ng'][_0x2f751e(0x44d,0x430,0x3fe,0x383,0x369)+'e'](),document[_0x48703a(0x40f,0x4a0,0x48e,0x44f,0x46b)+_0x31fc41(0x3c8,0x377,0x3f8,0x395,0x3ef)+_0x372e94(0x466,0x440,0x4a2,0x4b4,0x514)](_0x101fcd[_0x2f751e(0x434,0x430,0x465,0x485,0x42e)])[_0x372e94(0x49e,0x4ed,0x48a,0x474,0x444)+'e']());continue;case'10':document[_0x372e94(0x43e,0x536,0x4a6,0x464,0x49a)+_0x31fc41(0x43e,0x3d2,0x3f8,0x48b,0x3d0)+_0x644ed0(-0x248,-0x219,-0x1f1,-0x1f1,-0x1d1)](_0x101fcd[_0x31fc41(0x47d,0x4a8,0x438,0x44d,0x410)])[_0x48703a(0x3df,0x4e6,0x460,0x41b,0x40f)][_0x644ed0(-0x167,-0x205,-0x1c0,-0x1b7,-0x223)]=_0x101fcd[_0x644ed0(-0x1dc,-0x251,-0x1af,-0x1bd,-0x252)];continue;}break;}}},uic_r_e=()=>{function _0xbec59e(_0x490726,_0x2651ef,_0xbcd6e2,_0x4a4644,_0x3aa525){return _0x198502(_0x3aa525-0x1ff,_0x2651ef-0xe3,_0xbcd6e2-0x77,_0x4a4644-0xaa,_0x490726);}function _0x501cb0(_0x2119bc,_0x1c745a,_0xe2729a,_0x5257ff,_0x429f6e){return _0x198502(_0x2119bc-0xaf,_0x1c745a-0x44,_0xe2729a-0xcb,_0x5257ff-0x1e0,_0xe2729a);}function _0x392757(_0x383b7d,_0x5db9e9,_0x52b3cc,_0x4b6b25,_0x3f89eb){return _0x198502(_0x5db9e9-0x263,_0x5db9e9-0x10b,_0x52b3cc-0x198,_0x4b6b25-0xec,_0x52b3cc);}function _0x574c04(_0x4a1f74,_0x4e7073,_0x592a81,_0x2e4195,_0x26ad71){return _0x3e2013(_0x4a1f74-0x50,_0x26ad71,_0x2e4195-0x79,_0x2e4195-0x9f,_0x26ad71-0x14);}const _0x4c5822={'JmOQK':function(_0x2761a8){return _0x2761a8();},'lfFyx':_0x392757(0x12b,0xf8,0x18b,0xef,0x10b)+_0x501cb0(-0x10f,-0x12b,-0x185,-0x178,-0xa8)+_0x392757(0x9d,0xc9,0xf3,0xbe,0x10b)+'d','fASvP':_0x115bd3(0x2ee,0x370,0x2b6,0x2d9,0x2e6)+_0x392757(0x134,0x15c,0x1e0,0xc1,0x184),'EStjO':_0x501cb0(-0x10d,-0x1ae,-0x14a,-0xa5,-0xed)+_0x574c04(0x30b,0x3c0,0x33a,0x336,0x30c),'VywMW':_0x392757(0x12e,0x15a,0xd0,0x1a5,0x1f8),'IHnbP':_0x574c04(0x324,0x3e4,0x3ec,0x36d,0x2e4)+'ar','sycJv':_0x501cb0(-0x116,-0xa0,-0x119,-0xb9,-0xa0),'OFzgt':_0x115bd3(0x1a3,0x26f,0x274,0x1be,0x230)+_0xbec59e(0x33,0x4d,0x4d,0x5d,0x27),'jySra':_0x392757(0xa1,0x49,-0xd,-0x4e,0x5),'xawIA':_0xbec59e(0xe9,0xf1,0x59,0xc5,0x84)};function _0x115bd3(_0x463991,_0x21d650,_0x28a801,_0x1246ce,_0x109a2d){return _0x3e2013(_0x463991-0x1c2,_0x21d650,_0x109a2d- -0x89,_0x1246ce-0x1e6,_0x109a2d-0x9f);}_0x4c5822[_0x574c04(0x356,0x2ef,0x333,0x38c,0x3ba)](_uic_u_ok)&&(document[_0x501cb0(-0x133,-0xbb,-0x111,-0xcb,-0x1ad)+_0xbec59e(0x58,-0x53,-0x5e,-0x7e,-0x5)+_0x392757(0x4e,0x7d,-0xd,0x4e,0x3e)](_0x4c5822[_0x115bd3(0x38c,0x30a,0x380,0x367,0x2f6)])[_0x392757(0x62,0x65,0x28,0xda,0x53)+'e'](),document[_0x501cb0(-0x133,-0x181,-0x16e,-0x11a,-0xb0)+_0x501cb0(-0x155,-0x136,-0x155,-0x16c,-0x12a)+_0x392757(0x8f,0x7d,0xd0,-0x21,0xf0)](_0x4c5822[_0x501cb0(-0x98,-0xdc,-0xd,-0xb7,-0x9f)])?(document[_0x574c04(0x312,0x3f6,0x3ea,0x385,0x3ff)+_0xbec59e(0x29,-0x8b,0x70,0x35,-0x5)+_0x574c04(0x372,0x48d,0x3e7,0x40b,0x452)+_0x501cb0(-0x15f,-0x1c4,-0x1d4,-0xdf,-0x145)+'me'](_0x4c5822[_0x501cb0(-0x104,-0x7b,-0x191,-0xc4,-0x144)])[0x260+-0x1764+0x1504][_0x392757(0x2b,0x53,0xe8,0xe0,0x7a)][_0x115bd3(0x2de,0x1f8,0x308,0x2b4,0x27c)]=_0x4c5822[_0x392757(0x14a,0x12a,0x146,0x10f,0x17d)],document[_0xbec59e(-0x42,0xa6,-0x3b,0x9f,0x1d)+_0x574c04(0x343,0x352,0x323,0x363,0x31e)+_0xbec59e(0x84,0xaf,0x41,0x9f,0x19)](_0x4c5822[_0x115bd3(0x2b3,0x1f7,0x1b7,0x2b5,0x22f)])[_0x574c04(0x3f7,0x3fa,0x3d9,0x357,0x2f4)][_0x574c04(0x377,0x3ef,0x3b0,0x37e,0x318)]=_0x4c5822[_0xbec59e(0x8b,0x9,-0x21,0xbd,0x5c)],document[_0x392757(-0x8,0x81,0xf5,0xa8,0x30)+_0xbec59e(-0x50,-0x38,0x4e,0x6d,-0x5)+_0x392757(0x84,0x7d,0x12,0xc2,0x116)](_0x4c5822[_0x501cb0(-0xda,-0x9c,-0xe0,-0x8f,-0xdb)])[_0xbec59e(-0x64,0x3c,0x82,0x43,-0x11)][_0x574c04(0x394,0x312,0x3db,0x37e,0x411)]=_0x4c5822[_0x501cb0(-0xf4,-0x5a,-0x122,-0x13c,-0x5a)]):document[_0x574c04(0x3b1,0x370,0x304,0x385,0x32a)+_0x574c04(0x3a8,0x386,0x334,0x363,0x2f6)+_0xbec59e(0x53,-0x4c,-0x49,-0x30,0x19)](_0x4c5822[_0x392757(0x42,0xda,0xc7,0x67,0xfc)])?(document[_0xbec59e(-0x5d,-0x70,0x9e,0x6d,0x1d)+_0x115bd3(0x243,0x279,0x2c0,0x1e1,0x261)+_0x574c04(0x46a,0x47f,0x49c,0x40b,0x3e2)+_0x501cb0(-0x15f,-0x1e8,-0x1d1,-0x17e,-0x191)+'me'](_0x4c5822[_0x574c04(0x432,0x3d9,0x359,0x3b4,0x31b)])[-0x14d+-0x5*-0x576+-0x1a01][_0xbec59e(-0xa1,0x1,-0x79,-0x10,-0x11)][_0x392757(0x6b,0x7a,0xc1,0x4f,0x30)]=_0x4c5822[_0x115bd3(0x24d,0x216,0x1e0,0x1d5,0x225)],document[_0x501cb0(-0x133,-0xce,-0x15d,-0x1bb,-0x184)+_0xbec59e(-0x7f,-0x62,-0x24,-0x83,-0x5)+_0x501cb0(-0x137,-0xbe,-0x18a,-0x9e,-0x100)](_0x4c5822[_0x115bd3(0x203,0x1d5,0x208,0x19c,0x22f)])[_0x392757(0xd5,0x53,-0x6,0x16,0x3c)][_0xbec59e(-0x78,0x7,0x27,-0x6a,0x16)]=_0x4c5822[_0x501cb0(-0x88,-0x74,-0x84,-0x47,-0x18)],document[_0x574c04(0x2ff,0x369,0x34d,0x385,0x37c)+_0x115bd3(0x268,0x27b,0x2b1,0x2dd,0x261)+_0x392757(0xa5,0x7d,0xc4,0x108,-0x21)](_0x4c5822[_0x574c04(0x40d,0x43a,0x37f,0x3de,0x47c)])[_0xbec59e(-0x9c,-0x6d,-0x58,-0x78,-0x11)][_0x574c04(0x381,0x322,0x3c9,0x37e,0x38b)]=_0x4c5822[_0x392757(0x1a3,0x12c,0x106,0x133,0x111)]):document[_0x574c04(0x3c1,0x335,0x3d7,0x385,0x3c1)+_0x574c04(0x3b7,0x3fb,0x388,0x363,0x366)+_0x115bd3(0x2c9,0x264,0x364,0x38e,0x309)+_0x501cb0(-0x15f,-0x13d,-0x12a,-0x114,-0x14a)+'me'](_0x4c5822[_0x574c04(0x365,0x423,0x46f,0x3de,0x3e4)])[0x2151+0x567*-0x1+-0x1bea][_0xbec59e(-0x9,-0x18,-0x91,-0x76,-0x11)][_0x574c04(0x360,0x336,0x37f,0x37e,0x41e)]=_0x4c5822[_0x115bd3(0x283,0x1f6,0x21e,0x213,0x225)]);},uic_r_f=()=>{function _0x40811f(_0x13ddf0,_0x3f97e6,_0x259ad5,_0x4206b0,_0x4ea396){return _0x3e2013(_0x13ddf0-0x16a,_0x13ddf0,_0x3f97e6- -0x310,_0x4206b0-0x193,_0x4ea396-0x1c6);}function _0x3b2934(_0x2a104a,_0x481cf5,_0x91e28b,_0x43455e,_0x2c1827){return _0x198502(_0x91e28b-0x31b,_0x481cf5-0xd6,_0x91e28b-0x51,_0x43455e-0x44,_0x43455e);}function _0x31d7cb(_0x5e5d08,_0x343dbc,_0x5855e8,_0x49ad88,_0x55c3c5){return _0x198502(_0x55c3c5-0x1e6,_0x343dbc-0xf5,_0x5855e8-0x10,_0x49ad88-0x127,_0x343dbc);}function _0x2ec5b6(_0x208dc6,_0x291ac2,_0x31d6f6,_0xaa6fe9,_0x18bb52){return _0x3e2013(_0x208dc6-0x133,_0x291ac2,_0x208dc6-0x9,_0xaa6fe9-0xcc,_0x18bb52-0x6a);}const _0x13316f={'vOfdK':_0x40811f(0x79,-0x16,-0xf,-0xb0,0x19)+_0x482196(0xb5,0x129,0x11e,0x115,0xa1)+_0x40811f(-0x7f,-0x5f,-0x89,-0x1f,-0x53)+_0x3b2934(0x17e,0x217,0x1ca,0x1d4,0x166)+_0x40811f(0x59,0xa0,0xcb,0x35,0xa6)+'2','YEGrq':function(_0x1badcc){return _0x1badcc();}};function _0x482196(_0x3f0470,_0xa793ae,_0x48f6bc,_0x36df91,_0x2b45f2){return _0x198502(_0x3f0470-0x29a,_0xa793ae-0x1ec,_0x48f6bc-0x1ab,_0x36df91-0x60,_0x36df91);}!_0x13316f[_0x31d7cb(-0x17,-0x59,0x6f,0xbe,0x1a)](_uic_u_ok)&&googletag[_0x2ec5b6(0x35a,0x3df,0x36f,0x385,0x2dd)][_0x2ec5b6(0x2df,0x249,0x373,0x287,0x2ac)](function(){function _0x47f09b(_0x4a21ff,_0x5c98f5,_0x4d64ef,_0x3c1818,_0x31728d){return _0x31d7cb(_0x4a21ff-0xc9,_0x31728d,_0x4d64ef-0x1bf,_0x3c1818-0x2,_0x3c1818-0x171);}function _0xdf5afd(_0x1c1499,_0x4751c8,_0x9a07a7,_0x3e7688,_0x4ffa34){return _0x40811f(_0x1c1499,_0x3e7688-0x2f7,_0x9a07a7-0xb1,_0x3e7688-0x12f,_0x4ffa34-0xa7);}googletag[_0xdf5afd(0x2c8,0x334,0x372,0x312,0x27e)+'ay'](_0x13316f[_0x47f09b(0x1b3,0x17d,0x280,0x1f7,0x272)]);});},uic_r_g=()=>{function _0x2cf091(_0x2a23da,_0x3b1ce1,_0x462eda,_0xb25344,_0x29608f){return _0x3e2013(_0x2a23da-0x1b3,_0x462eda,_0x29608f- -0x1d9,_0xb25344-0x191,_0x29608f-0x96);}function _0xcc1f78(_0x44db96,_0x17d2ad,_0x4a1d1a,_0x4008ae,_0x1049b3){return _0x3e2013(_0x44db96-0x65,_0x44db96,_0x1049b3-0x125,_0x4008ae-0x1f3,_0x1049b3-0x102);}function _0x14b8d8(_0x4ec0cb,_0x2b5f65,_0x2c67ec,_0x1aad71,_0x271a95){return _0x198502(_0x2b5f65- -0x130,_0x2b5f65-0x17e,_0x2c67ec-0x1e8,_0x1aad71-0x8f,_0x1aad71);}const _0x36cc61={'sogEV':_0xcc1f78(0x4af,0x4a8,0x40c,0x3ad,0x41f)+_0x2cf091(0x15b,0x1c0,0x13c,0x143,0x130)+_0xb73bac(0x381,0x2c4,0x312,0x2d2,0x384)+_0xb73bac(0x3e6,0x433,0x432,0x4c8,0x4d6)+_0xb73bac(0x41e,0x306,0x37e,0x35d,0x407)+'0','rkIWs':function(_0x31ba49){return _0x31ba49();}};function _0x57e828(_0x2f7461,_0x2144ad,_0x21bd2a,_0x5c838a,_0xa52e20){return _0x3e2013(_0x2f7461-0xd5,_0x5c838a,_0x2f7461- -0x203,_0x5c838a-0x1c1,_0xa52e20-0xe1);}function _0xb73bac(_0x5d7a55,_0x1c7720,_0x57daa8,_0x293725,_0x59c696){return _0x198502(_0x57daa8-0x54d,_0x1c7720-0x13d,_0x57daa8-0x162,_0x293725-0x138,_0x293725);}!_0x36cc61[_0xb73bac(0x33d,0x36f,0x3cb,0x40c,0x46f)](_uic_u_ok)&&googletag[_0x2cf091(0x179,0x1eb,0x110,0xe4,0x178)][_0x57e828(0xd3,0x4c,0x153,0xac,0xb7)](function(){function _0x27e983(_0x5201d0,_0x4b4070,_0xd7e5b3,_0x437385,_0x2b49d5){return _0x57e828(_0x437385- -0x1bd,_0x4b4070-0x1c2,_0xd7e5b3-0x48,_0x2b49d5,_0x2b49d5-0x12);}function _0x128b94(_0x507d6c,_0x4a9296,_0x5134b9,_0x32ffa4,_0x156346){return _0x14b8d8(_0x507d6c-0x1b4,_0x4a9296-0x610,_0x5134b9-0x84,_0x156346,_0x156346-0x1c7);}googletag[_0x128b94(0x282,0x31d,0x2b5,0x311,0x348)+'ay'](_0x36cc61[_0x27e983(0x90,-0x70,-0x69,0x14,-0x41)]);});},uic_r_h=()=>{function _0x540cf3(_0x2d584c,_0x3fe78a,_0x53ce6c,_0x2500fd,_0x45515c){return _0x198502(_0x53ce6c-0x63a,_0x3fe78a-0x48,_0x53ce6c-0x74,_0x2500fd-0x68,_0x2d584c);}function _0x93f2dc(_0x5ef29f,_0xc67f61,_0x4ef8a7,_0x351558,_0x27df6f){return _0x198502(_0x4ef8a7-0x472,_0xc67f61-0x1cd,_0x4ef8a7-0xa,_0x351558-0xf4,_0x27df6f);}function _0xfc77aa(_0x8b38f1,_0x57a75d,_0x38d406,_0x55e341,_0x3a7c13){return _0x198502(_0x38d406-0x43,_0x57a75d-0x1b7,_0x38d406-0xb6,_0x55e341-0x140,_0x57a75d);}function _0x2d29a0(_0xb8f108,_0x5bb45e,_0x1a4e7d,_0x3a2427,_0x2b4864){return _0x3e2013(_0xb8f108-0x55,_0xb8f108,_0x2b4864- -0x2ae,_0x3a2427-0x1f1,_0x2b4864-0x190);}const _0x35dfea={'pmRSI':_0x2d29a0(0x26,0x50,-0x13,0x58,0x4c)+_0x471531(-0x1e6,-0x1b9,-0x2a9,-0x219,-0x252)+_0x2d29a0(-0xa1,-0x70,0x60,0x48,0x3)+_0x540cf3(0x547,0x497,0x4e9,0x46d,0x4d8)+_0x2d29a0(0x12c,0x158,0xfd,0xed,0x102)+'5','pghSR':function(_0x4b254f){return _0x4b254f();}};function _0x471531(_0x3fe5ff,_0x484c3e,_0x58bcc7,_0x577c98,_0x4f7b5c){return _0x3e2013(_0x3fe5ff-0x7,_0x484c3e,_0x4f7b5c- -0x55b,_0x577c98-0x84,_0x4f7b5c-0xbf);}!_0x35dfea[_0x93f2dc(0x309,0x320,0x35c,0x3a5,0x2c3)](_uic_u_ok)&&googletag[_0x471531(-0x16c,-0x25b,-0x1f6,-0x2a2,-0x20a)][_0x540cf3(0x391,0x3e5,0x422,0x453,0x45a)](function(){function _0x3c954f(_0x4cb900,_0x31e2e1,_0x39b7ff,_0x103a1b,_0x2dc734){return _0x2d29a0(_0x4cb900,_0x31e2e1-0x189,_0x39b7ff-0xec,_0x103a1b-0x1a5,_0x2dc734-0x427);}function _0x44a378(_0x47cd5a,_0x26dd28,_0x4a112e,_0x46d4fc,_0xed54be){return _0xfc77aa(_0x47cd5a-0x95,_0x46d4fc,_0x47cd5a-0x17d,_0x46d4fc-0x59,_0xed54be-0xc3);}googletag[_0x44a378(-0x3,-0x31,0x70,0x23,0x3e)+'ay'](_0x35dfea[_0x3c954f(0x4b3,0x576,0x504,0x56e,0x54a)]);});},uic_r_k=()=>{function _0x348445(_0x4ec031,_0x2aae03,_0x394a4e,_0x370a47,_0x1a04d8){return _0x198502(_0x394a4e-0x590,_0x2aae03-0xd0,_0x394a4e-0x99,_0x370a47-0x89,_0x2aae03);}function _0x3276b1(_0x22f29f,_0x5cb3eb,_0x586918,_0x1a8c69,_0x333100){return _0x3e2013(_0x22f29f-0x18c,_0x586918,_0x5cb3eb- -0x273,_0x1a8c69-0x182,_0x333100-0x1b7);}function _0xfdc1fc(_0x3d9d7b,_0x33fb2d,_0x105410,_0x9688ac,_0x5fc026){return _0x198502(_0x3d9d7b-0x664,_0x33fb2d-0x14a,_0x105410-0x19d,_0x9688ac-0x1b7,_0x33fb2d);}function _0xf4684c(_0x29e8df,_0x498a15,_0x15eba1,_0x4fb248,_0x525f88){return _0x198502(_0x29e8df-0x303,_0x498a15-0x129,_0x15eba1-0x1c5,_0x4fb248-0x5f,_0x15eba1);}function _0x18e98b(_0xc7e18,_0x15a0a3,_0x3ad965,_0x55fc4d,_0x2ecf83){return _0x198502(_0x2ecf83-0xad,_0x15a0a3-0x4a,_0x3ad965-0x95,_0x55fc4d-0x161,_0x3ad965);}const _0x4ccd05={'KYQgK':_0xf4684c(0x10f,0xf6,0xaf,0x7b,0xc9)+_0x18e98b(-0x9d,-0x17d,-0xa0,-0x161,-0x138)+_0xf4684c(0x176,0x1f5,0x13e,0x177,0x218)+_0x3276b1(0xf1,0x7f,0xb9,0x105,0xd3)+_0xfdc1fc(0x52a,0x58a,0x59b,0x4f4,0x4a4)+'0','rjpbb':function(_0x41d625){return _0x41d625();},'WNctK':function(_0x434ee9,_0x1b09f4){return _0x434ee9>_0x1b09f4;},'JObjz':function(_0x212eaf,_0x143e12){return _0x212eaf(_0x143e12);},'EbNIG':function(_0x1a7123,_0x383258,_0x249855){return _0x1a7123(_0x383258,_0x249855);},'oLQiA':_0xfdc1fc(0x4a5,0x43f,0x506,0x4cb,0x540),'zdfja':_0x3276b1(0xbe,0xb4,0xf,0xfd,0x14)+'t','EjqRK':_0xfdc1fc(0x46c,0x4ed,0x455,0x43c,0x43c)+_0x348445(0x3d5,0x3f8,0x474,0x4c1,0x3d8)+_0xf4684c(0x1ad,0x1e2,0x24a,0x251,0x176)+_0x3276b1(0x1ca,0x151,0x1dc,0x121,0x106)+_0x18e98b(-0x1e3,-0x16f,-0x11d,-0x1cc,-0x149)+_0x3276b1(0xd6,0x13f,0x18c,0xc6,0xa3)+_0x18e98b(-0x151,-0x178,-0xd4,-0xa8,-0x12a)+'\x27>','FNPWa':_0x348445(0x42b,0x43d,0x451,0x425,0x4a8)+'>'};!_0x4ccd05[_0x348445(0x3b2,0x4cb,0x42d,0x3b7,0x477)](_uic_u_ok)&&(_0x4ccd05[_0x348445(0x3ae,0x3e2,0x41b,0x420,0x440)](_0x4ccd05[_0x3276b1(0xf9,0xeb,0x48,0x155,0xfd)](Number,_0x4ccd05[_0x348445(0x38e,0x3e3,0x3d7,0x402,0x41f)](w3_getStyleValue,document[_0xfdc1fc(0x482,0x514,0x4b0,0x4c2,0x40e)+_0x3276b1(0x102,0x77,0x13,0x3c,0xb1)+_0xf4684c(0x11d,0x18d,0xaf,0x13b,0xa7)](_0x4ccd05[_0x3276b1(0x101,0x117,0x128,0xf3,0x13e)]),_0x4ccd05[_0x348445(0x3ea,0x3e9,0x45d,0x41f,0x3e8)])[_0x3276b1(0x100,0x89,0x54,0x31,0xfe)+'ce']('px','')),-0x1414+-0xd9*-0x20+-0x21*-0xc)&&(document[_0x3276b1(0xd5,0xb3,0xe0,0x12c,0x118)](_0x4ccd05[_0xf4684c(0x11b,0x155,0x13b,0x97,0x11c)]),googletag[_0x3276b1(0x166,0xde,0x15e,0xad,0xb4)][_0x348445(0x39c,0x40f,0x378,0x3f2,0x344)](function(){function _0x5c7639(_0x3f65b5,_0x2db7c2,_0xcd3bfa,_0xec552e,_0x1fa574){return _0x18e98b(_0x3f65b5-0x13b,_0x2db7c2-0xe1,_0xec552e,_0xec552e-0x178,_0xcd3bfa- -0x18f);}function _0x161b54(_0x16d92a,_0x880dd2,_0x2fa079,_0x52e2e6,_0x365d3f){return _0x18e98b(_0x16d92a-0xa5,_0x880dd2-0xf6,_0x2fa079,_0x52e2e6-0x1ed,_0x880dd2-0x2f8);}googletag[_0x161b54(0x1e6,0x1e2,0x260,0x1bb,0x23c)+'ay'](_0x4ccd05[_0x5c7639(-0x278,-0x1f0,-0x1f4,-0x1ca,-0x23b)]);}),document[_0xfdc1fc(0x49c,0x525,0x419,0x531,0x445)](_0x4ccd05[_0xf4684c(0x1d7,0x1e8,0x218,0x20b,0x241)])));},uic_r_l=()=>{const _0xc2f387={'CvNlN':_0x35ced4(-0x47,-0x8,-0x3c,0x5e,-0x20)+_0x35ced4(-0x6c,-0x8d,-0x2d,-0x57,-0xc6)+_0x12bdb3(0x3d8,0x2c8,0x37e,0x363,0x2ee)+_0x544fc5(0x4b1,0x45c,0x476,0x487,0x4f8)+_0x12bdb3(0x4e0,0x47d,0x3d5,0x462,0x3d4)+'0','pCxRm':function(_0x3ac711){return _0x3ac711();}};function _0x5b3fc4(_0x5ad927,_0x1b1357,_0x455e4b,_0x531cce,_0x22252a){return _0x3e2013(_0x5ad927-0x1c9,_0x5ad927,_0x1b1357- -0x4f5,_0x531cce-0x184,_0x22252a-0xfa);}function _0x12bdb3(_0x25b3db,_0x2b535c,_0x34dfc9,_0x595641,_0x174bf1){return _0x198502(_0x595641-0x5a0,_0x2b535c-0x161,_0x34dfc9-0xa5,_0x595641-0x128,_0x2b535c);}function _0x35ced4(_0x27fbea,_0x4770f9,_0x4b63da,_0x4d12c8,_0x14f97b){return _0x3e2013(_0x27fbea-0x55,_0x4770f9,_0x4b63da- -0x336,_0x4d12c8-0xe8,_0x14f97b-0xce);}function _0x544fc5(_0x1d4b72,_0x3d7afb,_0x1c64f4,_0x60ea30,_0x24c3d7){return _0x3e2013(_0x1d4b72-0x56,_0x60ea30,_0x24c3d7-0x15b,_0x60ea30-0x129,_0x24c3d7-0x126);}function _0x58f80e(_0x15286e,_0x2adfee,_0x49fdd7,_0x490219,_0x42dbb0){return _0x3e2013(_0x15286e-0x1dc,_0x42dbb0,_0x49fdd7- -0x306,_0x490219-0x160,_0x42dbb0-0x1f2);}!_0xc2f387[_0x58f80e(0x13f,0x129,0xdc,0xb1,0x43)](_uic_u_ok)&&googletag[_0x544fc5(0x457,0x4d8,0x448,0x489,0x4ac)][_0x58f80e(0x5f,-0x74,-0x30,0x65,0x6b)](function(){function _0x2f5724(_0x13190a,_0x5086c0,_0x360d2b,_0x508a03,_0x1fcb15){return _0x58f80e(_0x13190a-0x60,_0x5086c0-0x1c7,_0x13190a- -0x2f3,_0x508a03-0xf1,_0x1fcb15);}function _0x498fb4(_0x3be661,_0x4776cf,_0x242567,_0x55f7ca,_0x1327f7){return _0x12bdb3(_0x3be661-0x12d,_0x1327f7,_0x242567-0x1d7,_0x4776cf-0xd1,_0x1327f7-0xfa);}googletag[_0x498fb4(0x427,0x4ae,0x502,0x418,0x4af)+'ay'](_0xc2f387[_0x2f5724(-0x29d,-0x205,-0x29a,-0x211,-0x2d4)]);});},uic_r_m=()=>{function _0x12cbd3(_0x143315,_0xcc79d7,_0x2a0c88,_0x144f9b,_0x626cf2){return _0x3e2013(_0x143315-0x43,_0x144f9b,_0x2a0c88- -0x2e1,_0x144f9b-0x25,_0x626cf2-0x1e7);}function _0x4f3c4a(_0x20ddc4,_0x170dff,_0x307f52,_0x7adc67,_0x4e2360){return _0x198502(_0x170dff- -0x9a,_0x170dff-0x55,_0x307f52-0x1ba,_0x7adc67-0x30,_0x7adc67);}function _0x40842d(_0x38e294,_0x31f852,_0x5e699b,_0x4b538c,_0x129ab0){return _0x198502(_0x5e699b-0x233,_0x31f852-0x44,_0x5e699b-0x19d,_0x4b538c-0xf1,_0x129ab0);}function _0x3a477e(_0x21f5b1,_0x2c27d9,_0x87e6e6,_0x5c9e3c,_0x5698d2){return _0x198502(_0x87e6e6-0x3fb,_0x2c27d9-0xc3,_0x87e6e6-0x3d,_0x5c9e3c-0x119,_0x5c9e3c);}const _0x2e5016={'FRClq':_0x3a477e(0x221,0x1ad,0x207,0x292,0x27e)+_0x3a477e(0x1ff,0x177,0x216,0x1ff,0x278)+_0x33421b(0x5a,0x79,0x84,0x1f,0x78)+_0x4f3c4a(-0x275,-0x1eb,-0x1dc,-0x27b,-0x180)+_0x12cbd3(0xfc,0xbf,0xcf,0x168,0x2c)+'3','ylGwg':function(_0x2b2e1d){return _0x2b2e1d();}};function _0x33421b(_0x4634ee,_0x23a267,_0x40b7e3,_0xaa3237,_0x23cfa3){return _0x3e2013(_0x4634ee-0xba,_0xaa3237,_0x23cfa3- -0x239,_0xaa3237-0x128,_0x23cfa3-0x26);}!_0x2e5016[_0x3a477e(0x280,0x1ac,0x21a,0x26a,0x2ab)](_uic_u_ok)&&googletag[_0x4f3c4a(-0x279,-0x237,-0x1ca,-0x202,-0x1c2)][_0x40842d(-0x53,0x0,0x1b,-0x47,0x13)](function(){function _0x2aea42(_0x47e9d9,_0x20470c,_0x4efeda,_0x2651d0,_0x512080){return _0x40842d(_0x47e9d9-0xd7,_0x20470c-0x97,_0x47e9d9-0x291,_0x2651d0-0xce,_0x512080);}function _0x35034e(_0x13b425,_0x4ff159,_0x19934f,_0x179eb5,_0x5bbab1){return _0x40842d(_0x13b425-0x7e,_0x4ff159-0xd8,_0x179eb5- -0x2fa,_0x179eb5-0x197,_0x13b425);}googletag[_0x2aea42(0x301,0x288,0x38f,0x340,0x2c8)+'ay'](_0x2e5016[_0x2aea42(0x3c4,0x33e,0x407,0x3b1,0x376)]);});},uic_r_n=()=>{function _0x3f5745(_0x41c67e,_0x2ccecb,_0x33c208,_0xcbe62e,_0x517412){return _0x198502(_0x2ccecb-0x2f2,_0x2ccecb-0x12d,_0x33c208-0x38,_0xcbe62e-0xb2,_0x33c208);}function _0x22a729(_0x10b749,_0x2bff7c,_0xe472dd,_0x23ee57,_0x4d1c51){return _0x198502(_0xe472dd-0x615,_0x2bff7c-0x16f,_0xe472dd-0x10c,_0x23ee57-0x19d,_0x23ee57);}const _0x51ebe2={'sLppE':function(_0x22d6c2){return _0x22d6c2();}};function _0x2937e3(_0x15e7e5,_0x4addcf,_0x235f02,_0x1be02d,_0x45117e){return _0x198502(_0x45117e-0x19c,_0x4addcf-0x101,_0x235f02-0x47,_0x1be02d-0x1e8,_0x235f02);}!_0x51ebe2[_0x22a729(0x484,0x4d1,0x46d,0x4c6,0x467)](_uic_u_ok)&&googletag[_0x2937e3(0x128,0xc0,0x11d,0x12,0x85)+'s']()[_0x3f5745(0xa8,0xdd,0x4d,0x121,0xbb)+'sh']([gptAdSlots[-0x4f1*0x4+0x51c*0x3+-0x47*-0x10]]);},uic_r_o=()=>{const _0x3436eb={'VyBhc':_0x26b51e(-0x233,-0x19b,-0x23c,-0x264,-0x2c0)+_0x26b51e(-0x24e,-0x263,-0x22d,-0x259,-0x1f8)+_0x3f2e24(0x27e,0x270,0x154,0x243,0x1e2)+_0x26b51e(-0x135,-0x23d,-0x19f,-0x1fb,-0x131)+_0x4215fd(0x182,0x193,0x1cc,0x27a,0x1f5)+'0','jeVxU':function(_0xcd7c6d){return _0xcd7c6d();}};function _0x463090(_0x53c45e,_0x411d11,_0x346a3e,_0x2a0bba,_0x540618){return _0x198502(_0x2a0bba-0x65f,_0x411d11-0x169,_0x346a3e-0x10c,_0x2a0bba-0x6c,_0x53c45e);}function _0x3f2e24(_0x5948b6,_0xc5ced1,_0x5995ab,_0x18465f,_0xa1363b){return _0x198502(_0xa1363b-0x34e,_0xc5ced1-0xa9,_0x5995ab-0x1c3,_0x18465f-0xe1,_0x18465f);}function _0x1f9ad3(_0x168936,_0x522a9b,_0x44262e,_0x4f2dac,_0x4d4d20){return _0x3e2013(_0x168936-0x42,_0x4d4d20,_0x522a9b- -0xc5,_0x4f2dac-0x29,_0x4d4d20-0x56);}function _0x26b51e(_0x33d74d,_0x3d78f1,_0x53fbd3,_0x39b46e,_0x3be7a2){return _0x198502(_0x53fbd3- -0x48,_0x3d78f1-0x106,_0x53fbd3-0x9,_0x39b46e-0xc9,_0x39b46e);}function _0x4215fd(_0x62a412,_0xda6ae,_0x1589f7,_0x219c70,_0x26bbbd){return _0x3e2013(_0x62a412-0x71,_0x62a412,_0x26bbbd- -0x198,_0x219c70-0xbd,_0x26bbbd-0xa0);}!_0x3436eb[_0x4215fd(0x249,0x140,0x19f,0x1f0,0x1dc)](_uic_u_ok)&&googletag[_0x3f2e24(0x189,0x12a,0x10e,0x160,0x1b1)][_0x26b51e(-0x23a,-0x1d9,-0x260,-0x2b9,-0x250)](function(){function _0x5c7e9b(_0x21f57c,_0x24564b,_0x4e6ab9,_0x1762fe,_0x21117f){return _0x3f2e24(_0x21f57c-0x102,_0x24564b-0x53,_0x4e6ab9-0x74,_0x24564b,_0x1762fe-0x58);}function _0x24b8b4(_0x1bb791,_0x14754d,_0x2394cd,_0x18bf59,_0x18dbda){return _0x26b51e(_0x1bb791-0x16,_0x14754d-0xc2,_0x1bb791-0x420,_0x2394cd,_0x18dbda-0x173);}googletag[_0x24b8b4(0x215,0x1a3,0x1d1,0x22e,0x245)+'ay'](_0x3436eb[_0x24b8b4(0x25c,0x21d,0x203,0x2e7,0x23d)]);});},uic_r_p=()=>{function _0x2aeabd(_0xa8ba4e,_0x1c81c6,_0x51fea4,_0x5db38a,_0x3fc43e){return _0x198502(_0x5db38a-0x472,_0x1c81c6-0x11,_0x51fea4-0x1bf,_0x5db38a-0x1cd,_0x3fc43e);}function _0x3a36a4(_0x423b13,_0x14c6b1,_0x4bcac9,_0x28354b,_0x333837){return _0x198502(_0x4bcac9-0x3d7,_0x14c6b1-0x15c,_0x4bcac9-0x18b,_0x28354b-0x78,_0x423b13);}function _0x10daf0(_0x99a32c,_0x188cf1,_0x1d29fe,_0x17edde,_0x415fc6){return _0x198502(_0x1d29fe-0x312,_0x188cf1-0x15c,_0x1d29fe-0x7e,_0x17edde-0x30,_0x415fc6);}function _0x19d05d(_0x1f3aa9,_0x55bcc7,_0x4ce70d,_0x21f813,_0x28ce9f){return _0x3e2013(_0x1f3aa9-0xd8,_0x55bcc7,_0x4ce70d- -0x597,_0x21f813-0x129,_0x28ce9f-0x15e);}const _0x1ac47d={'DKcgv':function(_0x2702b6){return _0x2702b6();},'cWjJd':_0x2aeabd(0x2e9,0x368,0x369,0x344,0x3d8)+_0x2aeabd(0x2bf,0x36b,0x3b2,0x30d,0x31e)+_0x3a36a4(0x2eb,0x2c9,0x2d6,0x28c,0x334)+_0x2aeabd(0x2d4,0x357,0x3cf,0x34c,0x354)};function _0x322ea8(_0x3edc01,_0x1fbc25,_0x10f07f,_0x16aa63,_0x909d9f){return _0x3e2013(_0x3edc01-0x14e,_0x909d9f,_0x1fbc25- -0x4ff,_0x16aa63-0xb2,_0x909d9f-0x39);}!_0x1ac47d[_0x19d05d(-0x1c1,-0x206,-0x206,-0x221,-0x164)](_uic_u_ok)&&adngin[_0x3a36a4(0x1ba,0x19a,0x23a,0x195,0x2bf)][_0x10daf0(0x1e4,0x161,0x17c,0x1ca,0x110)+_0x3a36a4(0x27b,0x221,0x2b9,0x339,0x2cd)+'on']([_0x1ac47d[_0x2aeabd(0x24c,0x23e,0x2b8,0x2b0,0x2b6)]]);},uic_r_q=()=>{function _0x1413a9(_0xa580e3,_0x1750eb,_0x26fd7d,_0x3a4f59,_0x323452){return _0x3e2013(_0xa580e3-0x19b,_0x1750eb,_0xa580e3- -0x44d,_0x3a4f59-0x12b,_0x323452-0xfc);}function _0x4f139b(_0x18622a,_0x402fe7,_0x155081,_0x1d0ee3,_0x152285){return _0x198502(_0x152285-0x385,_0x402fe7-0x1c0,_0x155081-0x17,_0x1d0ee3-0x1ba,_0x155081);}const _0x126999={'aSQGT':function(_0xa27bb9){return _0xa27bb9();},'OsZoo':_0x2192c0(0x54e,0x520,0x5b3,0x51a,0x4d2)+_0x2192c0(0x480,0x486,0x445,0x4e3,0x4ea)+_0x2192c0(0x4be,0x566,0x4ff,0x547,0x5ab)+_0x2192c0(0x52f,0x4fe,0x53d,0x49b,0x439)+_0x2192c0(0x4d8,0x408,0x4bc,0x4ad,0x435)+'s'};function _0x2bb6f1(_0x4a715b,_0x2ee3d4,_0x55df5a,_0x1d0a9b,_0xa1219d){return _0x198502(_0x2ee3d4-0x34d,_0x2ee3d4-0xef,_0x55df5a-0x1b4,_0x1d0a9b-0xe6,_0xa1219d);}function _0x2192c0(_0x468831,_0x43d055,_0x343b58,_0x4078a2,_0x469425){return _0x198502(_0x4078a2-0x648,_0x43d055-0x1b3,_0x343b58-0x2,_0x4078a2-0x2f,_0x469425);}function _0x1ff987(_0x33d30c,_0x3fba43,_0x4b7223,_0x3d88d4,_0x3be72b){return _0x3e2013(_0x33d30c-0x1b9,_0x3be72b,_0x3fba43-0x170,_0x3d88d4-0x28,_0x3be72b-0x197);}!_0x126999[_0x4f139b(0x16f,0x1a8,0x1ee,0x222,0x20e)](_uic_u_ok)&&adngin[_0x1ff987(0x522,0x4c1,0x444,0x494,0x47c)][_0x1ff987(0x496,0x4c8,0x54d,0x563,0x471)+_0x2bb6f1(0x27b,0x22f,0x21b,0x24f,0x19b)+'on']([_0x126999[_0x4f139b(0x159,0x209,0x1a7,0x131,0x1ca)]]);},uic_r_r=()=>{function _0x3eaf66(_0x47fac1,_0x1daae2,_0x28f0e3,_0x4c65f3,_0x574003){return _0x3e2013(_0x47fac1-0x143,_0x1daae2,_0x574003- -0x264,_0x4c65f3-0xd2,_0x574003-0x104);}function _0x5664bd(_0x191d89,_0x2614c8,_0x1d03f2,_0x579b91,_0xc32169){return _0x198502(_0x191d89-0x17f,_0x2614c8-0x48,_0x1d03f2-0x18a,_0x579b91-0x1a3,_0x1d03f2);}const _0x3862bb={'zyFtY':function(_0x1f694d){return _0x1f694d();},'ODCaL':_0x3eaf66(0x116,0x7e,0xe3,0x81,0xf1)+_0x3eaf66(0x14b,0x1f3,0x1ca,0x1a2,0x17c)+_0x1f05e8(0x1e0,0xdf,0xb7,0x154,0x14b),'ozgik':_0x5664bd(0xd,-0x47,-0x39,0x42,-0x6f)+'tn','Ogyso':_0x4f4257(-0x30b,-0x326,-0x297,-0x2b7,-0x300),'VkvSQ':_0x4f4257(-0x2ae,-0x1cd,-0x2aa,-0x251,-0x28e)+_0x4c44bf(-0x108,-0xed,-0x61,-0xad,-0xc4)+_0x1f05e8(0x1d7,0x28f,0x171,0x265,0x1f7)+'d','cNUru':_0x5664bd(0x76,0xd,0x114,0x95,0x59),'PqmOF':_0x5664bd(0x5d,0x40,0x37,0xde,-0x3d)+_0x4f4257(-0x259,-0x215,-0x1b8,-0x213,-0x1e6)+_0x1f05e8(0x106,0x14a,0x19d,0x1a5,0x15e),'UmICc':_0x3eaf66(0x199,0x1ea,0x223,0x126,0x186)+'r'};function _0x1f05e8(_0x32957d,_0x4bbef3,_0x2eea46,_0x19e085,_0xf37ca0){return _0x198502(_0xf37ca0-0x391,_0x4bbef3-0xe6,_0x2eea46-0x1ab,_0x19e085-0x1b0,_0x32957d);}function _0x4f4257(_0x16346f,_0x188ded,_0x27f7bc,_0x201404,_0x59257e){return _0x198502(_0x201404- -0xe6,_0x188ded-0x162,_0x27f7bc-0x196,_0x201404-0x1ba,_0x188ded);}function _0x4c44bf(_0x3f1eb3,_0x492416,_0x17b59b,_0x39f64b,_0x5c3d8d){return _0x3e2013(_0x3f1eb3-0x70,_0x3f1eb3,_0x5c3d8d- -0x3f4,_0x39f64b-0x136,_0x5c3d8d-0x40);}if(_0x3862bb[_0x3eaf66(0xce,0xff,0x6,0xc5,0x5d)](_uic_u_ok)){const _0x4500fe=_0x3862bb[_0x3eaf66(0x118,0x94,0x4c,0x90,0xca)][_0x1f05e8(0xdd,0x1f1,0x20f,0x16c,0x175)]('|');let _0x303049=-0x578+-0x549+0xac1*0x1;while(!![]){switch(_0x4500fe[_0x303049++]){case'0':document[_0x5664bd(-0x63,-0x62,0x1b,0x21,-0xcf)+_0x3eaf66(0x60,0x128,0x71,0x5f,0x86)+_0x4f4257(-0x256,-0x337,-0x304,-0x2cc,-0x342)](_0x3862bb[_0x1f05e8(0x2de,0x21b,0x1c7,0x1f8,0x248)])[_0x4c44bf(-0x72,-0x7e,-0xa2,-0x127,-0x116)][_0x4c44bf(-0x14c,-0x12a,-0x134,-0xa2,-0xb0)]=_0x3862bb[_0x4f4257(-0x323,-0x30f,-0x2fc,-0x291,-0x26e)];continue;case'1':document[_0x3eaf66(0x3c,0x6f,0x104,0x27,0xa8)+_0x4f4257(-0x268,-0x2cb,-0x335,-0x2ea,-0x2ec)+_0x1f05e8(0x229,0x1d5,0x13c,0x189,0x1ab)](_0x3862bb[_0x4f4257(-0x300,-0x30d,-0x221,-0x2b1,-0x337)])[_0x4f4257(-0x292,-0x23f,-0x25e,-0x26d,-0x2f0)+_0x1f05e8(0x297,0x1c5,0x272,0x2cb,0x266)+_0x3eaf66(0x131,0xbe,0x92,0x19d,0x104)][_0x3eaf66(0x9b,0xee,0x119,0x7c,0x103)+_0x1f05e8(0x1dc,0x242,0x1dd,0x258,0x266)+_0x5664bd(-0x7,-0x35,-0x7e,-0xa2,-0x30)][_0x5664bd(-0x7f,-0x5,-0xbe,-0xf1,-0x97)+'e']();continue;case'2':document[_0x4f4257(-0x2ca,-0x2f0,-0x282,-0x2c8,-0x2fa)+_0x3eaf66(0x9e,-0x2,0xb5,0x88,0x86)+_0x3eaf66(0x11f,0x7b,0xd0,0x7e,0xa4)](_0x3862bb[_0x5664bd(0x36,0xac,0xba,0x49,0x52)])[_0x4f4257(-0x2d6,-0x2fa,-0x384,-0x2f6,-0x2ad)][_0x5664bd(-0x6a,-0xb,-0x5e,-0xbe,-0x9)]=_0x3862bb[_0x3eaf66(0x15f,0x18d,0xf2,0x117,0x137)];continue;case'3':document[_0x3eaf66(0xd7,0xb1,0x45,0xc7,0xa8)+_0x3eaf66(0xc6,0x35,0x21,0x17,0x86)+_0x4f4257(-0x364,-0x2ff,-0x29a,-0x2cc,-0x2ec)](_0x3862bb[_0x3eaf66(0x161,0x1bd,0x15f,0xd5,0x132)])[_0x4f4257(-0x310,-0x2fd,-0x22f,-0x286,-0x307)+_0x4f4257(-0x31f,-0x2cd,-0x2ab,-0x2c5,-0x2a2)+_0x4c44bf(-0x97,-0x11e,-0x123,-0x185,-0x10a)+_0x5664bd(0x39,0x5e,-0x64,-0x31,0x8b)+'ng'][_0x4c44bf(-0x199,-0x12c,-0x15b,-0xe4,-0x116)][_0x4f4257(-0x358,-0x233,-0x260,-0x2d3,-0x241)+_0x4c44bf(-0xf4,-0x149,-0xf1,-0x92,-0xda)]=_0x3862bb[_0x1f05e8(0x1a7,0xb1,0x127,0x17d,0x155)];continue;case'4':document[_0x4c44bf(-0xbf,-0x102,-0x60,-0x156,-0xe8)+_0x1f05e8(0x183,0x20d,0x15f,0xeb,0x18d)+_0x4f4257(-0x303,-0x2e6,-0x35b,-0x2cc,-0x2bd)](_0x3862bb[_0x4f4257(-0x2a7,-0x1b9,-0x2cc,-0x23e,-0x26d)])[_0x5664bd(-0x21,0x13,-0xae,-0x91,-0xd)+_0x4f4257(-0x332,-0x29b,-0x2b5,-0x2c5,-0x27c)+_0x1f05e8(0x231,0x12a,0x213,0x19a,0x18d)+_0x1f05e8(0x292,0x274,0x2b3,0x2c0,0x24b)+'ng'][_0x3eaf66(0xbd,0xae,0x9f,-0x6,0x7a)][_0x1f05e8(0x1b3,0x1cd,0x24d,0x299,0x1fe)+_0x4f4257(-0x34e,-0x2da,-0x27d,-0x2f8,-0x2f6)]='0';continue;case'5':document[_0x3eaf66(0xc9,0x81,0x29,0x24,0xa8)+_0x4c44bf(-0xe8,-0x19d,-0xbc,-0xf1,-0x10a)+_0x3eaf66(0x107,0xc3,0x116,0xd0,0xa4)](_0x3862bb[_0x5664bd(0x36,0x7b,-0x21,-0x20,-0x2f)])[_0x1f05e8(0xeb,0x1bb,0x15f,0x212,0x181)][_0x1f05e8(0x241,0x298,0x312,0x29e,0x286)]='';continue;case'6':document[_0x3eaf66(0xfd,0x146,0x34,0x8c,0xa8)+_0x4c44bf(-0x17f,-0x1a0,-0x11b,-0x108,-0x10a)+_0x5664bd(-0x67,0x2c,-0xce,-0x29,0x6)](_0x3862bb[_0x5664bd(0x27,-0x66,-0x18,-0x4,0x40)])[_0x3eaf66(0xf7,0x8c,0x189,0x8b,0xea)+_0x1f05e8(0x217,0x1ee,0x1ff,0x165,0x1b2)+_0x4f4257(-0x29c,-0x2bd,-0x283,-0x2ea,-0x34e)+_0x1f05e8(0x1fa,0x1b5,0x2d4,0x2c0,0x24b)+'ng'][_0x5664bd(-0x91,-0x8,-0x54,-0x7a,-0x82)][_0x1f05e8(0x1b3,0xc9,0xc9,0x18f,0x14e)+_0x5664bd(-0xc2,-0x10c,-0xda,-0x64,-0x13f)]='0';continue;}break;}}},uic_r_s=()=>{const _0x40e529={'wDWVf':function(_0x512177){return _0x512177();},'nwAnc':_0xdcfd8c(0x363,0x375,0x2ed,0x388,0x3b5)+_0xdcfd8c(0x29d,0x2fc,0x294,0x335,0x31c)+_0xdcfd8c(0x340,0x3cd,0x3f6,0x359,0x304)+'d','uYLWh':_0x440bdf(-0x96,-0xb9,-0xfa,-0x14,-0x49)+_0xdcfd8c(0x2f9,0x309,0x334,0x332,0x35c)+_0xdcfd8c(0x3c6,0x3b1,0x2d6,0x33c,0x3dc)+_0x4ab781(0x2f9,0x283,0x280,0x264,0x299)};function _0x440bdf(_0x557fc8,_0x4b09e0,_0x3a2d8d,_0x494e9b,_0x540f7d){return _0x198502(_0x557fc8-0x140,_0x4b09e0-0x1be,_0x3a2d8d-0x7a,_0x494e9b-0x182,_0x540f7d);}function _0x4ab781(_0x2128a0,_0x39d0d9,_0x43e8fa,_0x52cc70,_0x170e6e){return _0x198502(_0x2128a0-0x42f,_0x39d0d9-0x16f,_0x43e8fa-0x35,_0x52cc70-0xca,_0x52cc70);}function _0x3e4468(_0x26d92e,_0x40a775,_0x1115cc,_0x1c4a21,_0x517c23){return _0x198502(_0x1115cc-0x3bf,_0x40a775-0x4a,_0x1115cc-0xb7,_0x1c4a21-0x11c,_0x517c23);}function _0x22d4e8(_0x23378a,_0x33273c,_0x487889,_0x12f277,_0x1a61bb){return _0x198502(_0x12f277- -0x14,_0x33273c-0x5e,_0x487889-0xac,_0x12f277-0x174,_0x33273c);}function _0xdcfd8c(_0x2aab65,_0x1b72ca,_0x33db25,_0xd56cd5,_0x1f084a){return _0x198502(_0xd56cd5-0x4f3,_0x1b72ca-0x10e,_0x33db25-0x4e,_0xd56cd5-0x1c4,_0x2aab65);}_0x40e529[_0x3e4468(0x148,0x1d2,0x19e,0x180,0x1a1)](_uic_u_ok)&&(document[_0x440bdf(-0xa2,-0x130,0x3,-0xed,-0xe9)+_0x3e4468(0x253,0x24e,0x1bb,0x1d2,0x171)+_0x3e4468(0x1f8,0x1fb,0x1d9,0x234,0x20d)](_0x40e529[_0x440bdf(-0x43,0x24,-0xa4,-0x7d,-0x60)])[_0x4ab781(0x231,0x2c5,0x1ec,0x220,0x2d1)+'e'](),document[_0x22d4e8(-0x276,-0x1a4,-0x218,-0x1f6,-0x19d)+_0x4ab781(0x22b,0x2a5,0x1e1,0x188,0x208)+_0x440bdf(-0xa6,-0x43,-0xf3,-0xd2,-0x44)](_0x40e529[_0x3e4468(0x12e,0x152,0x196,0x1c4,0x211)])[_0xdcfd8c(0x2cf,0x352,0x2ea,0x2f5,0x26c)+'e']());},uic_r_v=()=>{const _0x4b274d={'nNsiO':_0x1336cd(0x263,0x26a,0x23c,0x217,0x23f)+_0x44f46d(-0x157,-0x199,-0x112,-0x124,-0x149)+_0x2212f9(0x360,0x3fe,0x39c,0x316,0x3b0)+_0xef144c(0x35d,0x373,0x340,0x311,0x36c)+_0x2abc78(0x311,0x2d5,0x348,0x2ef,0x243)+'0','TCHmY':function(_0x41145e){return _0x41145e();},'nyipt':_0xef144c(0x3ab,0x344,0x3fd,0x359,0x370)+_0x1336cd(0x390,0x2b0,0x382,0x2ef,0x273)+_0x2abc78(0x304,0x2b9,0x227,0x262,0x2ce)+_0xef144c(0x453,0x3ea,0x3bc,0x4cb,0x43e)+_0x1336cd(0x186,0x214,0x28b,0x215,0x279)+_0x1336cd(0x33b,0x319,0x22b,0x2cf,0x300)+_0x2212f9(0x316,0x32e,0x38c,0x312,0x35f)+'\x27>','vxEzT':_0xef144c(0x470,0x39b,0x412,0x3db,0x429)+'>'};function _0x2abc78(_0x109224,_0x5886a7,_0x1dbc89,_0x3ca990,_0x1e0be4){return _0x3e2013(_0x109224-0x81,_0x3ca990,_0x5886a7- -0xdf,_0x3ca990-0x100,_0x1e0be4-0x79);}function _0xef144c(_0x5116a9,_0x27407d,_0x92909d,_0x527f50,_0x1d2149){return _0x3e2013(_0x5116a9-0x176,_0x92909d,_0x1d2149-0x7a,_0x527f50-0x11,_0x1d2149-0x11c);}function _0x44f46d(_0x4bffe5,_0x2dbf40,_0x1ea376,_0x6cb7a,_0x2e107a){return _0x3e2013(_0x4bffe5-0x167,_0x2e107a,_0x2dbf40- -0x4a2,_0x6cb7a-0x2d,_0x2e107a-0xc);}function _0x2212f9(_0x232be0,_0x5cd8c8,_0x1e21a2,_0x5daf7a,_0x216b4b){return _0x198502(_0x232be0-0x4ed,_0x5cd8c8-0x15e,_0x1e21a2-0x68,_0x5daf7a-0x1da,_0x216b4b);}function _0x1336cd(_0x167124,_0x310467,_0x19ec5c,_0x14932c,_0x4254cb){return _0x3e2013(_0x167124-0x13f,_0x167124,_0x14932c- -0xe3,_0x14932c-0x66,_0x4254cb-0x18a);}!_0x4b274d[_0x2abc78(0x267,0x2b5,0x33d,0x2a0,0x33f)](_uic_u_ok)&&(document[_0x2abc78(0x2e0,0x247,0x28a,0x216,0x263)](_0x4b274d[_0xef144c(0x3c7,0x45f,0x3f5,0x44f,0x3d7)]),googletag[_0x2212f9(0x350,0x3c8,0x2b2,0x3c7,0x2b0)][_0x2abc78(0x17f,0x1f7,0x1b0,0x191,0x282)](function(){function _0x1dc543(_0x2a7e4e,_0x3631f4,_0x5bad6d,_0x251c83,_0x1c0dd7){return _0x2abc78(_0x2a7e4e-0x139,_0x5bad6d-0x44,_0x5bad6d-0x1d6,_0x1c0dd7,_0x1c0dd7-0x1b6);}function _0x460aee(_0x51dcca,_0x34b6e5,_0x4e5779,_0x4e10e8,_0x44fe4f){return _0x1336cd(_0x44fe4f,_0x34b6e5-0x148,_0x4e5779-0xda,_0x4e10e8- -0x3a8,_0x44fe4f-0xe8);}googletag[_0x1dc543(0x26c,0x1f5,0x290,0x1ec,0x254)+'ay'](_0x4b274d[_0x460aee(-0x1f3,-0x14e,-0x232,-0x1cb,-0x176)]);}),document[_0x1336cd(0x1a6,0x1fc,0x25c,0x243,0x1dc)](_0x4b274d[_0x2abc78(0x252,0x216,0x26e,0x1ef,0x1d8)]));},uic_r_w=()=>{function _0x5d9794(_0x53e717,_0x21c9c6,_0x2c2bbc,_0x3dabde,_0x22ff5f){return _0x3e2013(_0x53e717-0x2f,_0x2c2bbc,_0x53e717- -0x3dd,_0x3dabde-0x1b9,_0x22ff5f-0x1a9);}function _0x5c6b6d(_0x4d521c,_0x28c0f5,_0x3365ee,_0xfee6d2,_0x18cd8b){return _0x3e2013(_0x4d521c-0xb9,_0x18cd8b,_0xfee6d2- -0x486,_0xfee6d2-0x193,_0x18cd8b-0x160);}const _0x33bc1a={'WJsZw':_0x164156(-0x2bd,-0x26f,-0x276,-0x24f,-0x2f3)+_0x164156(-0x1cc,-0x16e,-0x1b2,-0x1cb,-0x1c5)+_0x5d9794(-0x11e,-0x8d,-0xc6,-0xbf,-0xf1)+_0x164156(-0x1f3,-0x1a4,-0x1a2,-0x167,-0x1e2)+'-0','jYeOD':function(_0x46dff2){return _0x46dff2();}};function _0x37b8ac(_0xa68ddc,_0xeb4b7b,_0x48ef57,_0x59830d,_0x151358){return _0x198502(_0xeb4b7b-0x4f5,_0xeb4b7b-0x1c,_0x48ef57-0x1d,_0x59830d-0x17f,_0x151358);}function _0xc49bf0(_0x385fb7,_0x2f081e,_0xb0e745,_0x37a920,_0x3ba96d){return _0x198502(_0x2f081e-0x12,_0x2f081e-0x1cb,_0xb0e745-0x12c,_0x37a920-0x153,_0x37a920);}function _0x164156(_0x4351fb,_0xc5cfd7,_0x3ac801,_0x32e3a7,_0x31eacf){return _0x198502(_0x4351fb- -0x98,_0xc5cfd7-0x116,_0x3ac801-0xe9,_0x32e3a7-0xa5,_0xc5cfd7);}!_0x33bc1a[_0x37b8ac(0x247,0x2b7,0x2c1,0x28e,0x2fe)](_uic_u_ok)&&googletag[_0x5c6b6d(-0xac,-0x1bd,-0x152,-0x135,-0x100)][_0x5c6b6d(-0x130,-0x12b,-0x16a,-0x1b0,-0x152)](function(){function _0x40101e(_0x57fba6,_0x5e3f5c,_0x2466d0,_0x3d4d50,_0x970170){return _0x5c6b6d(_0x57fba6-0xb,_0x5e3f5c-0x11,_0x2466d0-0x1ce,_0x970170-0x2df,_0x2466d0);}function _0x30c4e1(_0x2fb603,_0xa4aa1,_0x465094,_0xc8fe3c,_0x43ff41){return _0xc49bf0(_0x2fb603-0x1ea,_0x465094-0x4c8,_0x465094-0xa7,_0xc8fe3c,_0x43ff41-0x1de);}googletag[_0x30c4e1(0x2d1,0x29a,0x317,0x33f,0x339)+'ay'](_0x33bc1a[_0x30c4e1(0x30c,0x3cf,0x38b,0x3cb,0x415)]);});},uic_r_x=()=>{function _0x16bd9f(_0x40e06c,_0x2dff6a,_0x41b2d0,_0xc79280,_0x42d747){return _0x198502(_0x40e06c- -0x6,_0x2dff6a-0x18c,_0x41b2d0-0x199,_0xc79280-0x10e,_0x2dff6a);}function _0x5dccd4(_0x51d58a,_0x37d729,_0x9b3e7d,_0x411802,_0x6179f1){return _0x3e2013(_0x51d58a-0x13d,_0x51d58a,_0x6179f1- -0x5a4,_0x411802-0x69,_0x6179f1-0x118);}function _0x1e5456(_0xc9b518,_0x31d876,_0x4b3c12,_0x204db0,_0x194ba0){return _0x3e2013(_0xc9b518-0xdc,_0x204db0,_0x194ba0- -0x70,_0x204db0-0xd9,_0x194ba0-0x2);}function _0x23ea85(_0x205cde,_0x4cd7c9,_0x163140,_0x57c336,_0x69be48){return _0x198502(_0x205cde-0x333,_0x4cd7c9-0xad,_0x163140-0x95,_0x57c336-0x14a,_0x163140);}function _0x5d680b(_0xd65b52,_0x5ba75b,_0x4faed1,_0x37bfc8,_0x5a8e45){return _0x198502(_0x5ba75b-0x478,_0x5ba75b-0x36,_0x4faed1-0x163,_0x37bfc8-0x145,_0xd65b52);}const _0x46ab7f={'cCJSe':function(_0x46c93d){return _0x46c93d();},'vVXnh':_0x5dccd4(-0x261,-0x2ca,-0x280,-0x36c,-0x2db)+_0x5dccd4(-0x17c,-0x14b,-0x23b,-0x231,-0x1ea)+_0x5d680b(0x2bf,0x249,0x1d1,0x2ac,0x1c8)+_0x16bd9f(-0x161,-0xd9,-0xd1,-0x116,-0x1c0)+'-0'};if(_0x46ab7f[_0x16bd9f(-0x190,-0x143,-0x210,-0x22d,-0x13e)](_uic_u_ok)){const _0x1c166a={};_0x1c166a[_0x23ea85(0x161,0xc5,0x14d,0xe5,0x161)+_0x16bd9f(-0x13e,-0x17d,-0xde,-0x14f,-0xbb)+_0x5dccd4(-0x211,-0x2e6,-0x347,-0x308,-0x2b3)]=[],_0x1c166a[_0x16bd9f(-0x215,-0x197,-0x220,-0x2a0,-0x2b2)+_0x16bd9f(-0x168,-0x11b,-0x12c,-0x152,-0x1f9)+_0x1e5456(0x2e1,0x254,0x262,0x254,0x2cd)+_0x16bd9f(-0x1c3,-0x179,-0x158,-0x1f8,-0x262)+'ds']=[_0x46ab7f[_0x23ea85(0x220,0x2c2,0x1fb,0x25b,0x1ae)]];const _0x51d2eb={};_0x51d2eb[_0x5d680b(0x287,0x26c,0x21c,0x2a7,0x257)+_0x23ea85(0x1c2,0x25c,0x1cc,0x238,0x1aa)]=_0x1c166a,window[_0x5d680b(0x310,0x27d,0x2b1,0x2f0,0x20c)+_0x1e5456(0x2d6,0x27d,0x23d,0x2ab,0x28f)+_0x16bd9f(-0x1a7,-0x1c1,-0x22b,-0x1e6,-0x1c1)]=_0x51d2eb;}},uic_r_y=()=>{function _0x55681c(_0x9b193d,_0x3282e7,_0x5d935a,_0x4d7d97,_0x2272c7){return _0x3e2013(_0x9b193d-0x1e7,_0x2272c7,_0x9b193d- -0x203,_0x4d7d97-0x180,_0x2272c7-0x1c2);}function _0x1f1fce(_0xb17c15,_0x42e971,_0xad7e06,_0x544532,_0x1f4867){return _0x198502(_0x544532-0x3d4,_0x42e971-0x1c0,_0xad7e06-0x1f1,_0x544532-0x71,_0x1f4867);}const _0x385f89={'vznaK':function(_0x52e5ff){return _0x52e5ff();},'vWSoW':_0x540c54(0x30,-0x10,0x8d,0x78,0x6d)+_0x540c54(-0x9e,-0x2f,-0x6,0x9,-0x24)+_0x1f1fce(0x189,0x26c,0x240,0x225,0x25d)+'4f','Vbqtl':_0x55681c(0x1ec,0x166,0x17d,0x17e,0x1eb)+_0x540c54(0x11,0x5c,-0x41,-0x87,-0xc9)+_0x540c54(-0x87,-0x27,-0x39,-0x5b,0x4d)+_0x540c54(0x92,0x105,0x92,0x5e,0xfd)+_0x1f1fce(0x203,0x20d,0x235,0x24c,0x2a4)+_0x2f7931(-0x2a4,-0x2bc,-0x288,-0x20d,-0x1e3)+_0x2d0795(0x49f,0x5ba,0x53a,0x57e,0x4b3)};function _0x540c54(_0x520785,_0x3dbe0b,_0x529ddc,_0x1df6c2,_0x393cad){return _0x3e2013(_0x520785-0x1d6,_0x1df6c2,_0x529ddc- -0x311,_0x1df6c2-0x77,_0x393cad-0x2e);}function _0x2f7931(_0x48890d,_0x1b47fb,_0x45e37b,_0x49ceac,_0xe630e8){return _0x198502(_0x45e37b- -0x80,_0x1b47fb-0x163,_0x45e37b-0x134,_0x49ceac-0x1a5,_0xe630e8);}function _0x2d0795(_0x399cda,_0x142dfe,_0x19cbfa,_0x4f5b29,_0x219773){return _0x198502(_0x19cbfa-0x63f,_0x142dfe-0x137,_0x19cbfa-0xd2,_0x4f5b29-0xb9,_0x219773);}return _0x385f89[_0x1f1fce(0x362,0x334,0x267,0x2ca,0x28e)](_uic_u_ok)?_0x385f89[_0x1f1fce(0x2f5,0x31a,0x331,0x290,0x1fa)]:_0x385f89[_0x2f7931(-0x223,-0x212,-0x249,-0x225,-0x258)];},uic_r_z=()=>{function _0x593ee5(_0x128701,_0x272c6e,_0x300bb2,_0x5dcd5a,_0xd9af34){return _0x3e2013(_0x128701-0x19f,_0x128701,_0x272c6e- -0x347,_0x5dcd5a-0x1e4,_0xd9af34-0x18f);}const _0x50d009={'CMJSN':function(_0x25c39d){return _0x25c39d();},'kzvHV':function(_0x49b950,_0x18192e){return _0x49b950(_0x18192e);}};function _0x220a6c(_0x1a07f7,_0x3009bf,_0x591cb4,_0x2284ff,_0x1a1490){return _0x3e2013(_0x1a07f7-0xe6,_0x591cb4,_0x1a07f7- -0x99,_0x2284ff-0x1a8,_0x1a1490-0x162);}function _0x111745(_0x58a7b1,_0x2eaf4e,_0x2d179f,_0x3c6f27,_0x260809){return _0x198502(_0x2eaf4e-0x580,_0x2eaf4e-0x105,_0x2d179f-0xeb,_0x3c6f27-0xd6,_0x58a7b1);}!_0x50d009[_0x111745(0x3c5,0x33c,0x341,0x3b8,0x2a9)](_uic_u_ok)&&_0x50d009[_0x593ee5(0xd8,0x39,0xf,0xd3,0xd3)](docReady,_0x50d009[_0x220a6c(0x211,0x272,0x2b4,0x1b6,0x250)](secondSnigel));};



Unique Id: 203c0cee-ec0f-47fc-b317-afb166c27a21
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
var k42 = false;

k42 = true;





Unique Id: 9663cab3-02a3-497f-9d36-b002fd4dd069
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
  MyLearning.loadUser('footer', function () {
    if (UserSession.loggedIn) {
      document.getElementById("signupbtn_topnav").style.display = "none";
      document.getElementById("probtn_topnav").style.display = "block";
    } else {
      addMyLearnButt();
    }
  });
  function docReady(fn) {
    document.addEventListener("DOMContentLoaded", fn);
    if (document.readyState === "interactive" || document.readyState === "complete" ) {
      fn();
    }
  }
  uic_r_z();
  uic_r_d()

function addMyLearnButt() {
  let nav = document.getElementsByClassName("nextprev");
  if (document.body.contains(nav[1])) {
    if ((nav[1].firstElementChild.innerHTML.indexOf("Previous") || nav[1].firstElementChild.innerHTML.indexOf("Home") !== -1) && (nav[1].firstElementChild.nextElementSibling.innerHTML.indexOf("Next") !== -1)) {
      let myLearnButt = document.createElement("a");
      myLearnButt.innerHTML="Log in to track progress";
      myLearnButt.classList.add("w3-btn", "w3-hide-small", "myl-nav-butt");
      myLearnButt.href="https://www.w3schools.com/signup/?utm_source=classic&utm_medium=" + subjectFolder + "_tutorial&utm_campaign=button_lower_navigation";
      myLearnButt.setAttribute("title", "Sign Up and improve Your Learning Experience");
      myLearnButt.setAttribute("target", "_blank");
      nav[1].classList.add("w3-center");
      nav[1].firstElementChild.insertAdjacentElement("afterend", myLearnButt);
    }
  }
}




Unique Id: 041326e6-1233-4146-9d88-7b92e4a0d796
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/my-learning.js?v=1.0.21
Async: 0
Defer: 0
Content: /*
  MyLearning script
  Version: 1.0.21
*/

window.MyLearning = {
  pages_read_count: 0,
  total_pages_count: 0,
  user_progress_collected: false,
  _debug: null,
  _version: null,
  _w3sBaseUrl: 'https://www.w3schools.com',
  _profileBaseUrl: 'https://profile.w3schools.com',
  _linkTargetAttr: '',
  _myLearningBaseUrl: 'https://my-learning.w3schools.com',
};

MyLearning._isDebugMode = function () {
  if (this._debug !== null) {
    return this._debug;
  }

  this._debug = Cookies.get('my_learning.debug')

  if (typeof this._debug === 'undefined' || this._debug === null) {
    this._debug = false;
  }

  return this._debug === true || this._debug === 'true';
}

MyLearning.getCurrentUts = function () {
  return Math.round((new Date()).getTime() / 1000);
};

MyLearning.getCurrentUtus = function () {
  return (new Date()).getTime();
};

MyLearning.log = function (message, data) {
  if (this._isDebugMode()) {
    if (typeof data === 'undefined') {
      console.log(getCurrentUtus().toString() + ' MyLearning -> ' + message);
    } else {
      console.log(getCurrentUtus().toString() + ' MyLearning -> ' + message, data);
    }
  }
}

MyLearning._cacheVersion = function () {
  // return cached result
  if (this._version !== null) {
    this.log('version: ', this._version);
    return this._version;
  }

  this._version = Cookies.get('my_learning.version')

  // fallback to v2.1
  if (typeof this._version === 'undefined' || !this._version) {
    this._version = '2.1';
  }

  this.log('version: ', this._version);
  return this._version;
}

MyLearning._version_to_base_url_map = {
  '1': 'https://mypage.w3schools.com',
  '1.5': 'https://my-learning.w3schools.com',
  '1.5L': 'https://my-learning-legacy.w3schools.com',
  '2': 'https://myl-api.w3schools.com',
  '2.1': 'https://myl-api.w3schools.com'
}

MyLearning._version_and_name_to_rel_url_map = {
  '1': {
    'api.meta': '/mypage/beta.php',
    'api.meta_for_default': '/mypage/beta_for_default.php',
    'api.exercise.get': '/mypage/get_exercise_obj2.php',
    'api.exercise.set': '/mypage/set_exercise_obj.php',
    'api.quiz.set_score': '/mypage/set_quiz_score2.php'
  },
  '1.5': {
    'api.meta': '/api/meta/',
    'api.meta_for_default': '/api/meta-for-default/',
    'api.exercise.get': '/api/exercise/get/',
    'api.exercise.set': '/api/exercise/set/',
    'api.quiz.set_score': '/api/quiz/set-score/'
  },
  '1.5L': {
    'api.meta': '/api/meta/',
    'api.meta_for_default': '/api/meta-for-default/',
    'api.exercise.get': '/api/exercise/get/',
    'api.exercise.set': '/api/exercise/set/',
    'api.quiz.set_score': '/api/quiz/set-score/'
  },
  '2': {
    'api.meta': '/api/classic/get-set-topic-progress',
    // 'api.meta_for_default': '/api/meta-for-default/', // deprecated
    'api.exercise.get': '/api/classic/get-exercises-progress',
    'api.exercise.set': '/api/classic/set-exercises-progress',
    'api.quiz.set_score': '/api/classic/set-quiz-progress'
  },
  '2.1': {
    'api.meta': '/api/classic/get-set-topic-progress',
    'api.exercise.get': '/api/classic/get-exercises-progress',
    'api.exercise.set': '/api/classic/set-exercises-progress',
    'api.quiz.set_score': '/api/classic/set-quiz-progress'
  }
}

// usage:
// MyLearning.getUrl('api.quiz.set_score') -> https://mypage.w3schools.com/mypage/set_quiz_score2.php
MyLearning.getUrl = function (api_name, version) {
  this.log('getUrl: ', api_name);

  if (typeof version === 'undefined') {
    this._cacheVersion();

    version = this._version;
  }

  if (this._isDebugMode()) {
    if (typeof this._version_to_base_url_map[version] === 'undefined') {
      console.warn('MyLearning -> Version is not valid. version: ', version);

      return '/';
    }

    if (typeof this._version_and_name_to_rel_url_map[version][api_name] === 'undefined') {
      console.warn('MyLearning -> Api name is not valid. version, api_name: ', version, api_name);

      return '/';
    }
  }

  return this._version_to_base_url_map[version] + this._version_and_name_to_rel_url_map[version][api_name];
}
// << classic

// < common

MyLearning.makePostRequest = function (url, data, callback, retriedAfterSessionRefresh) {
  if (typeof retriedAfterSessionRefresh === 'undefined') {
    retriedAfterSessionRefresh = false;
  }

  var xhr = new XMLHttpRequest();

  var reqRes = {
    error: {
      code: '0'
    },
    status: 0,
    dataStr: '',
  };

  var reqTimeout = setTimeout(function () {
    reqRes.error = {
      code: 'RWTE',
      description: 'Request wait time exceeded'
    };

    MyLearning.log('MyLearning.makePostRequest -> reqRes: ', reqRes);

    callback(reqRes);
  }, 15000);

  xhr.onreadystatechange = function () {
    if (this.readyState == 4) {
      clearTimeout(reqTimeout);

      reqRes.status = this.status;
      reqRes.dataStr = this.responseText;

      if (
        typeof reqRes.status !== 'undefined'
        && reqRes.status
      ) {
        if (reqRes.status == 401) {
          reqRes.error = {
            code: 'UNAUTHORIZED',
            description: 'Request unauthorized'
          };
        } else if (!(reqRes.status >= 200 && reqRes.status < 300)) {
          reqRes.error = {
            code: 'RSC_' + reqRes.status,
            description: (typeof this.statusText !== 'undefined' && this.statusText) ? this.statusText : 'Request failed'
          };
        }
      } else {
        reqRes.error = {
          code: 'RTWNSC', // Request terminated with no status code
          description: 'Request failed'
        };
      }

      if (reqRes.error.code === 'UNAUTHORIZED' && !retriedAfterSessionRefresh) {
        UserSession.changeStatusCodeInUserSessionCookies(
          '-3', // UserSessionStatusCodeEnum.RefreshRequired
        );

        UserSession.processUserSession(function (userSessionVerificationRes) {
          if (typeof reqRes.error.meta === 'undefined') {
            reqRes.error.meta = {};
          }

          reqRes.error.meta.userSessionVerificationRes = userSessionVerificationRes;

          if (userSessionVerificationRes.error.code === '0') { // session seems fine, retry to send the same request            
            MyLearning.makePostRequest(url, data, callback, true);
          } else {
            callback(reqRes);
          }
        }, true);
      } else {
        callback(reqRes);
      }
    }
  };

  UserSession.processUserSession(function (userSessionVerificationRes) {
    if (userSessionVerificationRes.error.code === '0') {
      xhr.open('POST', url, true);
      xhr.withCredentials = true;
      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
      xhr.send(data);
    } else {
      clearTimeout(reqTimeout);

      UserSession.userSessionRedirectionLogicHandler(userSessionVerificationRes);

      callback({
        error: userSessionVerificationRes.error,
        status: 0,
        dataStr: '',
      });
    }
  }, false);
}

MyLearning.elmIsInViewport = function (x) {
  var rect = x.getBoundingClientRect();
  return (
    rect.top >= 0 &&
    rect.left >= 0 &&
    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */
    rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */
  );
}

MyLearning.elmIsAboveViewport = function (x) {
  var rect = x.getBoundingClientRect();
  if (rect.top < 0) return true;
  return false;
}

MyLearning.getCircleMeta = function (xx, yy, r, aD) {
  var aR = (aD - 90) * Math.PI / 180.0;
  return {
    x: xx + (r * Math.cos(aR)),
    y: yy + (r * Math.sin(aR))
  };
}

MyLearning.getProfileIconCirclesRendered = function (x, y, r, sa, ea) {
  var s = this.getCircleMeta(x, y, r, ea);
  var e = this.getCircleMeta(x, y, r, sa);
  var f = ea - sa <= 180 ? "0" : "1";
  return ["M", s.x, s.y, "A", r, r, 0, f, 0, e.x, e.y].join(" ");
}

MyLearning.loadUser = function (context, callback) {
  this.log('loadUser -> args: ', [context]);

  UserSession.processUserSession(function (userSessionVerificationRes) {
    if (context === 'default') {
      MyLearning._loadUser();
    } else if (context === 'footer') {
      MyLearning._footerLoadUser();
    }

    if (typeof callback !== 'undefined') {
      callback(userSessionVerificationRes);
    }
  }, true);
}

MyLearning.renderAnonymousUser = function () {
  this.log('renderAnonymousUser');

  var a = document.getElementById("mypagediv");
  var b = document.getElementById("w3loginbtn");
  if (a) a.style.display = "none";
  if (b) b.style.display = "inline";
  // var signupBtnElm = document.getElementById("signupbtn_topnav");
  // if (signupBtnElm) signupBtnElm.style.display = "inline"; // handled outside
}

MyLearning.getStrWithPrefixRemoved = function (str, subStr) {
  const extractedChunk = str.slice(0, subStr.length);

  if (extractedChunk === subStr) {
    return str.slice(subStr.length);
  }

  return str;
}
// > common

// < default
MyLearning._loadUser = function () {
  if (UserSession.loggedIn) {
    MyLearning.renderActiveUserLite("B", {});
  } else {
    MyLearning.renderAnonymousUser();
  }
}

MyLearning.renderActiveUserLite = function (cc, obj) {
  this.log('renderActiveUserLite -> args: ', [cc, obj]);
  var x, degrees = 0, txt = "", txt2 = "", color1 = "rgba(4, 170, 109, 0.1)", color2 = "rgba(4, 170, 109, 1)";
  var a = document.getElementById("w3loginbtn");
  var b = document.getElementById("mypagediv");
  // var signupBtnElm = document.getElementById("signupbtn_topnav");
  // if (signupBtnElm) signupBtnElm.style.display = "none"; // handled outside
  if (a) a.style.display = "none";
  if (b) {
    //document.getElementById("loginactioncontainer").style.marginLeft =  "0";
    if (cc == "Q") {
      color1 = "rgba(44, 156, 202, 0.1)";
      color2 = "rgba(44, 156, 202, 1)";
    }
    b.style.display = "block";
    txt += "<a class='ga-top' href='" + MyLearning._profileBaseUrl + "/log-in?redirect_url=" + encodeURIComponent(MyLearning._myLearningBaseUrl) + "' " + MyLearning._linkTargetAttr + ">";
    txt += "<img src='" + MyLearning._w3sBaseUrl + "/images/mypagelogo26x26.png' alt='MyLearning' style='position:absolute;top:12px;right:31px'>";
    txt += '<svg style="position:absolute;top:0;right:0;height:70px;width:70px">';
    txt += '<path id="mypage_circle1" fill="none" stroke="' + color1 + '" stroke-width="4"/>';
    txt += '<path id="mypage_circle2" fill="none" stroke="' + color2 + '" stroke-width="4"/>';
    txt += '</svg>';
    txt += '</a>';
    b.innerHTML = "&nbsp;" + txt;
    document.getElementById("mypage_circle1").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, 359.99));
    document.getElementById("mypage_circle2").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, degrees));
  }
}
// > default

// < footer
MyLearning._footerLoadUser = function () { // on lessons this is the first request, on quiz the only one
  this.log('_footerLoadUser');

  if (!UserSession.loggedIn) {
    this.renderAnonymousUser();
    return;
  }

  var urlPath = window.location.pathname,
    urlPathWlo = this.getStrWithPrefixRemoved(urlPath, '/'), // wlo - without leading slash
    isQuizPage = false;

  if (urlPathWlo.indexOf('quiztest/quiztest') === 0) {
    isQuizPage = true;

    var pathMetaStr = sessionStorage.getItem(urlPath);

    if (pathMetaStr !== null) {
      var pathMeta = JSON.parse(pathMetaStr);

      if (pathMeta.isQuizPage) {
        this.renderActiveUserWithProgress(pathMeta.reqRes.type, pathMeta.reqRes.raw);
        return;
      }
    }
  }

  // show the user active session first and update the progress when we have it on hands
  this.renderActiveUserWithProgress('T', 'T{"a":0,"b":0}'); // T - unused state, stands for "Temporary/Transitory"

  var x, y, pos, foldername, filename, typ, cc, pathname = window.location.pathname;
  if (pathname.substr(0, 1) == "/") { pathname = pathname.substr(1); }
  pos = pathname.indexOf("/");
  foldername = pathname.substr(0, pos);
  if (pathname.indexOf("pandas") > -1) { foldername = "python/pandas"; }
  if (pathname.indexOf("numpy") > -1) { foldername = "python/numpy"; }
  if (pathname.indexOf("scipy") > -1) { foldername = "python/scipy"; }
  filename = pathname.substr(pos + 1);
  typ = foldername;
  if (foldername == "quiztest") {
    cc = window.location.href;
    pos = cc.indexOf("qtest=");
    typ = cc.substr(pos + 6);
  }

  var reqDataStr = "a=" + foldername + "&b=" + filename + "&c=" + typ + "&d=0&p=" + encodeURIComponent(window.location.pathname);

  MyLearning.makePostRequest(
    MyLearning.getUrl('api.meta'),
    reqDataStr,
    function (reqRes) {
      if (
        reqRes.error.code === '0'
        && reqRes.status === 200
      ) {
        var y = reqRes.dataStr;
        var x = y.substr(0, 1);

        MyLearning.log('_footerLoadUser -> req_res -> x: ', x);

        if (x == "F" || x == "G" || x == "H" || x == "I" || x == "J" || x == "K" || x == "L" || x == "M" || x == "Q") {
          MyLearning.user_progress_collected = true;
          MyLearning.renderActiveUserWithProgress(x, y); // this one sets the scroll event

          if (isQuizPage) {
            sessionStorage.setItem(urlPath, JSON.stringify({
              'isQuizPage': true,
              'reqRes': {
                'type': x,
                'raw': y
              }
            }));
          }
        }
      }
    }
  );
}

MyLearning.checkIfGotToTheBottomOfThePage = function () {
  var a = document.getElementById("mypagediv2");
  var elm_in_or_above_viewport = MyLearning.elmIsInViewport(a) || MyLearning.elmIsAboveViewport(a);
  // this.log('checkIfGotToTheBottomOfThePage: ', elm_in_or_above_viewport);

  if (elm_in_or_above_viewport) {
    MyLearning.log('checkIfGotToTheBottomOfThePage: ', true);

    window.removeEventListener("scroll", MyLearning.checkIfGotToTheBottomOfThePage);
    MyLearning.finishedPage();
  }
}

MyLearning.renderActiveUserWithProgress = function (cc, obj) {
  this.log('renderActiveUserWithProgress -> args: ', [cc, obj]);

  var x, degrees = 0, txt = "", txt2 = "", color1 = "rgba(4, 170, 109, 0.1)", color2 = "rgba(4, 170, 109, 1)", jsonobj;
  var a = document.getElementById("w3loginbtn");
  var b = document.getElementById("mypagediv");
  var c = document.getElementById("mypagediv2");
  // var signupBtnElm = document.getElementById("signupbtn_topnav");
  // if (signupBtnElm) signupBtnElm.style.display = "none"; // handled outside
  if (a) a.style.display = "none";
  if (b) {
    if (cc == "I" || cc == "J" || cc == "H" || cc == "G" || cc == "O" || cc == "Q") {
      jsonobj = JSON.parse(obj.substr(1));
      this.pages_read_count = jsonobj.b;
      this.total_pages_count = jsonobj.a;
      x = Math.round((this.pages_read_count / this.total_pages_count) * 100);
      degrees = x * 3.6;
      if (degrees > 359) degrees = 359.99;
    }
    if (cc == "Q") {
      color1 = "rgba(44, 156, 202, 0.1)";
      color2 = "rgba(44, 156, 202, 1)";
    }
    b.style.display = "block";
    txt += "<a href='" + MyLearning._profileBaseUrl + "/log-in?redirect_url=" + encodeURIComponent(MyLearning._myLearningBaseUrl) + "' " + MyLearning._linkTargetAttr + ">";
    txt2 = txt;
    txt += "<img src='" + MyLearning._w3sBaseUrl + "/images/mypagelogo26x26.png' alt='MYPAGE' style='position:absolute;top:12px;right:31px'>";
    txt2 += "<img src='" + MyLearning._w3sBaseUrl + "/images/mypagelogo32x32.png' alt='MYPAGE' style='position:absolute;top:18px;margin-left:10px;'>";
    if (cc != "F") {
      txt += '<svg style="position:absolute;top:0;right:0;height:70px;width:70px">';
      txt += '<path id="mypage_circle1" fill="none" stroke="' + color1 + '" stroke-width="4"/>';
      txt += '<path id="mypage_circle2" fill="none" stroke="' + color2 + '" stroke-width="4"/>';
      txt += '</svg>';
      txt2 += '<svg style="position:absolute;xtop:0;xright:0;height:70px;width:70px">';
      txt2 += '<path id="mypage2_circle1" fill="none" stroke="' + color1 + '" stroke-width="4"/>';
      txt2 += '<path id="mypage2_circle2" fill="none" stroke="' + color2 + '" stroke-width="4"/>';
      txt2 += '</svg>';
    }
    if (cc == "J" || cc == "H" || cc == "G") {
      window.addEventListener("scroll", this.checkIfGotToTheBottomOfThePage);
      this.checkIfGotToTheBottomOfThePage();
    }
    if (cc == "Q") {
      if (degrees == 359.99) {
        txt += "<span id='usergetsstar'>&#x2605;</span>";
      }
    }
    txt += '</a>';
    txt2 += '</a>';
    b.innerHTML = "&nbsp;" + txt;
    c.innerHTML = "&nbsp;" + txt2;
    if (cc != "L" && cc != "F") {
      document.getElementById("mypage_circle1").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, 359.99));
      document.getElementById("mypage_circle2").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, degrees));
      document.getElementById("mypage2_circle1").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 24, 0, 359.99));
      document.getElementById("mypage2_circle2").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 24, 0, degrees));
    }
    c.classList.add("active");
  }

  // ga('send', 'event', 'user', 'login');
}

MyLearning.finishedPage = function () {
  this.log('finishedPage');

  if (!UserSession.loggedIn || !this.user_progress_collected) {
    this.log('finishedPage -> jumping out');
    return;
  }

  var x, y, pos, foldername, filename, typ, pathname = window.location.pathname;
  if (pathname.substr(0, 1) == "/") { pathname = pathname.substr(1); }
  pos = pathname.indexOf("/");
  foldername = pathname.substr(0, pos);
  if (pathname.indexOf("pandas") > -1) { foldername = "python/pandas"; }
  if (pathname.indexOf("numpy") > -1) { foldername = "python/numpy"; }
  if (pathname.indexOf("scipy") > -1) { foldername = "python/scipy"; }
  filename = pathname.substr(pos + 1);
  typ = foldername;

  var reqDataStr = "a=" + foldername + "&b=" + filename + "&c=" + typ + "&d=1&p=" + encodeURIComponent(window.location.pathname);

  MyLearning.makePostRequest(
    MyLearning.getUrl('api.meta'),
    reqDataStr,
    function (reqRes) {
      if (
        reqRes.error.code === '0'
        && reqRes.status === 200
      ) {
        var y = reqRes.dataStr;
        var x = y.substr(0, 1);

        if (x == "O") {
          MyLearning.registerPointForFinishedPage(x);
        }
      }
    }
  );
}

MyLearning.registerPointForFinishedPage = function (cc) {
  MyLearning.log('registerPointForFinishedPage -> args: ', [cc]);

  var x, degrees = 0, txt = "", txt2 = "", completed = 0, color1 = "rgba(4, 170, 109, 0.1)", color2 = "rgba(4, 170, 109, 1)";
  var a = document.getElementById("w3loginbtn");
  var b = document.getElementById("mypagediv");
  var c = document.getElementById("mypagediv2");
  if (c) {
    this.pages_read_count++;
    x = Math.round((this.pages_read_count / this.total_pages_count) * 100);
    degrees = x * 3.6;
    if (degrees > 359) degrees = 359.99;
    txt += "<span class='usergetspoint' id='usergetstutpoint'>+1</span>";
    if (degrees == 359.99) { completed = 1; }
    if (completed == 1) {
      txt += "<span id='usergetsstar'>&#x2605;</span>";
    }
    c.innerHTML += txt;
    document.getElementById("mypage_circle1").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, 359.99));
    document.getElementById("mypage_circle2").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 20, 0, degrees));
    document.getElementById("mypage2_circle1").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 24, 0, 359.99));
    document.getElementById("mypage2_circle2").setAttribute("d", this.getProfileIconCirclesRendered(26, 35, 24, 0, degrees));
  }
}
// > footer
// >> classic



Unique Id: e8efc7c9-43f7-4aeb-8ec7-c2187b66dc8d
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/w3codecolor.js
Async: 0
Defer: 0
Content: /* w3codecolor ver 1.32 by w3schools.com */
function w3CodeColor() {
  var x, i, j, k, l, modes = ["html", "js", "java", "css", "sql", "python", "kotlin"];
  if (!document.getElementsByClassName) {return;}
  k = modes.length;
  for (j = 0; j < k; j++) {
    x = document.getElementsByClassName(modes[j] + "High");
    l = x.length;
    for (i = 0; i < l; i++) {
      x[i].innerHTML = w3CodeColorize(x[i].innerHTML, modes[j]);
    }
  }
}
function w3CodeColorize(x, lang) {
  var tagcolor = "mediumblue";
  var tagnamecolor = "brown";
  var attributecolor = "red";
  var attributevaluecolor = "mediumblue";
  var commentcolor = "green";
  var cssselectorcolor = "brown";
  var csspropertycolor = "red";
  var csspropertyvaluecolor = "mediumblue";
  var cssdelimitercolor = "black";
  var cssimportantcolor = "red";  
  var jscolor = "black";
  var jskeywordcolor = "mediumblue";
  var jsstringcolor = "brown";
  var jsstringtempcolor = "#f50"; //orange
  var jsregexpcolor = "#f50"; //orange  
  var jsnumbercolor = "red";
  var jspropertycolor = "black";
  var javacolor = "black";
  var javakeywordcolor = "mediumblue";
  var javastringcolor = "brown";
  var javanumbercolor = "red";
  var javapropertycolor = "black";
  var kotlincolor = "black";
  var kotlinkeywordcolor = "mediumblue";
  var kotlinstringcolor = "brown";
  var kotlinnumbercolor = "red";
  var kotlinpropertycolor = "black";
  var phptagcolor = "red";
  var phpcolor = "black";
  var phpkeywordcolor = "mediumblue";
  var phpglobalcolor = "goldenrod";
  var phpstringcolor = "brown";
  var phpnumbercolor = "red";  
  var pythoncolor = "black";
  var pythonkeywordcolor = "mediumblue";
  var pythonstringcolor = "brown";
  var pythonnumbercolor = "red";  
  var angularstatementcolor = "red";
  var sqlcolor = "black";
  var sqlkeywordcolor = "mediumblue";
  var sqlstringcolor = "brown";
  var sqlnumbercolor = "";  
  if (!lang) {lang = "html"; }
  if (lang == "html") {return htmlMode(x);}
  if (lang == "css") {return cssMode(x);}
  if (lang == "js") {return jsMode(x);}
  if (lang == "java") {return javaMode(x);}
  if (lang == "kotlin") {return kotlinMode(x);}
  if (lang == "php") {return phpMode(x);}
  if (lang == "sql") {return sqlMode(x);}  
  if (lang == "python") {return pythonMode(x);}
  return x;
  function extract(str, start, end, func, repl) {
    var s, e, d = "", a = [];
    while (str.search(start) > -1) {
      s = str.search(start);
      e = str.indexOf(end, s);
      if (e == -1) {e = str.length;}
      if (repl) {
        a.push(func(str.substring(s, e + (end.length))));      
        str = str.substring(0, s) + repl + str.substr(e + (end.length));
      } else {
        d += str.substring(0, s);
        d += func(str.substring(s, e + (end.length)));
        str = str.substr(e + (end.length));
      }
    }
    this.rest = d + str;
    this.arr = a;
  }
  function htmlMode(txt) {
    var rest = txt, done = "", php, comment, angular, startpos, endpos, note, i;
    php = new extract(rest, "&lt;\\?php", "?&gt;", phpMode, "W3PHPPOS");
    rest = php.rest;
    comment = new extract(rest, "&lt;!--", "--&gt;", commentMode, "W3HTMLCOMMENTPOS");
    rest = comment.rest;
    while (rest.indexOf("&lt;") > -1) {
      note = "";
      startpos = rest.indexOf("&lt;");
      if (rest.substr(startpos, 9).toUpperCase() == "&LT;STYLE") {note = "css";}
      if (rest.substr(startpos, 10).toUpperCase() == "&LT;SCRIPT") {note = "javascript";}        
      endpos = rest.indexOf("&gt;", startpos);
      if (endpos == -1) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += tagMode(rest.substring(startpos, endpos + 4));
      rest = rest.substr(endpos + 4);
      if (note == "css") {
        endpos = rest.indexOf("&lt;/style&gt;");
        if (endpos > -1) {
          done += cssMode(rest.substring(0, endpos));
          rest = rest.substr(endpos);
        }
      }
      if (note == "javascript") {
        endpos = rest.indexOf("&lt;/script&gt;");
        if (endpos > -1) {
          done += jsMode(rest.substring(0, endpos));
          rest = rest.substr(endpos);
        }
      }
    }
    rest = done + rest;
    angular = new extract(rest, "{{", "}}", angularMode);
    rest = angular.rest;
    for (i = 0; i < comment.arr.length; i++) {
        rest = rest.replace("W3HTMLCOMMENTPOS", comment.arr[i]);
    }
    for (i = 0; i < php.arr.length; i++) {
        rest = rest.replace("W3PHPPOS", php.arr[i]);
    }
    return rest;
  }
  function tagMode(txt) {
    var rest = txt, done = "", startpos, endpos, result;
    while (rest.search(/(\s|<br>)/) > -1) {    
      startpos = rest.search(/(\s|<br>)/);
      endpos = rest.indexOf("&gt;");
      if (endpos == -1) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += attributeMode(rest.substring(startpos, endpos));
      rest = rest.substr(endpos);
    }
    result = done + rest;
    result = "<span class='tagcolor' style=color:" + tagcolor + ">&lt;</span>" + result.substring(4);
    if (result.substr(result.length - 4, 4) == "&gt;") {
      result = result.substring(0, result.length - 4) + "<span class='tagcolor' style=color:" + tagcolor + ">&gt;</span>";
    }
    return "<span class='tagnamecolor' style=color:" + tagnamecolor + ">" + result + "</span>";
  }
  function attributeMode(txt) {
    var rest = txt, done = "", startpos, endpos, singlefnuttpos, doublefnuttpos, spacepos;
    while (rest.indexOf("=") > -1) {
      endpos = -1;
      startpos = rest.indexOf("=");
      singlefnuttpos = rest.indexOf("'", startpos);
      doublefnuttpos = rest.indexOf('"', startpos);
      spacepos = rest.indexOf(" ", startpos + 2);
      if (spacepos > -1 && (spacepos < singlefnuttpos || singlefnuttpos == -1) && (spacepos < doublefnuttpos || doublefnuttpos == -1)) {
        endpos = rest.indexOf(" ", startpos);      
      } else if (doublefnuttpos > -1 && (doublefnuttpos < singlefnuttpos || singlefnuttpos == -1) && (doublefnuttpos < spacepos || spacepos == -1)) {
        endpos = rest.indexOf('"', rest.indexOf('"', startpos) + 1);
      } else if (singlefnuttpos > -1 && (singlefnuttpos < doublefnuttpos || doublefnuttpos == -1) && (singlefnuttpos < spacepos || spacepos == -1)) {
        endpos = rest.indexOf("'", rest.indexOf("'", startpos) + 1);
      }
      if (!endpos || endpos == -1 || endpos < startpos) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += attributeValueMode(rest.substring(startpos, endpos + 1));
      rest = rest.substr(endpos + 1);
    }
    return "<span class='attributecolor' style=color:" + attributecolor + ">" + done + rest + "</span>";
  }
  function attributeValueMode(txt) {
    return "<span class='attributevaluecolor' style=color:" + attributevaluecolor + ">" + txt + "</span>";
  }
  function angularMode(txt) {
    return "<span class='angularstatementcolor' style=color:" + angularstatementcolor + ">" + txt + "</span>";
  }
  function commentMode(txt) {
    return "<span class='commentcolor' style=color:" + commentcolor + ">" + txt + "</span>";
  }
  function cssMode(txt) {
    var rest = txt, done = "", s, e, comment, i, midz, c, cc;
    comment = new extract(rest, /\/\*/, "*/", commentMode, "W3CSSCOMMENTPOS");
    rest = comment.rest;
    while (rest.search("{") > -1) {
      s = rest.search("{");
      midz = rest.substr(s + 1);
      cc = 1;
      c = 0;
      for (i = 0; i < midz.length; i++) {
        if (midz.substr(i, 1) == "{") {cc++; c++}
        if (midz.substr(i, 1) == "}") {cc--;}
        if (cc == 0) {break;}
      }
      if (cc != 0) {c = 0;}
      e = s;
      for (i = 0; i <= c; i++) {
        e = rest.indexOf("}", e + 1);
      }
      if (e == -1) {e = rest.length;}
      done += rest.substring(0, s + 1);
      done += cssPropertyMode(rest.substring(s + 1, e));
      rest = rest.substr(e);
    }
    rest = done + rest;
    rest = rest.replace(/{/g, "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">{</span>");
    rest = rest.replace(/}/g, "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">}</span>");
    for (i = 0; i < comment.arr.length; i++) {
        rest = rest.replace("W3CSSCOMMENTPOS", comment.arr[i]);
    }
    return "<span class='cssselectorcolor' style=color:" + cssselectorcolor + ">" + rest + "</span>";
  }
  function cssPropertyMode(txt) {
    var rest = txt, done = "", s, e, n, loop;
    if (rest.indexOf("{") > -1 ) { return cssMode(rest); }
    while (rest.search(":") > -1) {
      s = rest.search(":");
      loop = true;
      n = s;
      while (loop == true) {
        loop = false;
        e = rest.indexOf(";", n);
        if (rest.substring(e - 5, e + 1) == "&nbsp;") {
          loop = true;
          n = e + 1;
        }
      }
      if (e == -1) {e = rest.length;}
      done += rest.substring(0, s);
      done += cssPropertyValueMode(rest.substring(s, e + 1));
      rest = rest.substr(e + 1);
    }
    return "<span class='csspropertycolor' style=color:" + csspropertycolor + ">" + done + rest + "</span>";
  }
  function cssPropertyValueMode(txt) {
    var rest = txt, done = "", s;
    rest = "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">:</span>" + rest.substring(1);
    while (rest.search(/!important/i) > -1) {
      s = rest.search(/!important/i);
      done += rest.substring(0, s);
      done += cssImportantMode(rest.substring(s, s + 10));
      rest = rest.substr(s + 10);
    }
    result = done + rest;    
    if (result.substr(result.length - 1, 1) == ";" && result.substr(result.length - 6, 6) != "&nbsp;" && result.substr(result.length - 4, 4) != "&lt;" && result.substr(result.length - 4, 4) != "&gt;" && result.substr(result.length - 5, 5) != "&amp;") {
      result = result.substring(0, result.length - 1) + "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">;</span>";
    }
    return "<span class='csspropertyvaluecolor' style=color:" + csspropertyvaluecolor + ">" + result + "</span>";
  }
  function cssImportantMode(txt) {
    return "<span class='cssimportantcolor' style=color:" + cssimportantcolor + ";font-weight:bold;>" + txt + "</span>";
  }
  function jsMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      regexppos = getRegExpPos(rest, jsRegExpMode);
      sfnuttpos = getPos(rest, "'", "'", jsStringMode);
      dfnuttpos = getPos(rest, '"', '"', jsStringMode);
      bfnuttpos = getPos(rest, '`', '`', jsStringTempMode);      
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, jsNumberMode);
      keywordpos = getKeywordPos("js", rest, jsKeywordMode);
      dotpos = getDotPos(rest, jsPropertyMode);
      if (Math.max(numpos[0], regexppos[0], sfnuttpos[0], dfnuttpos[0], bfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, regexppos, sfnuttpos, dfnuttpos, bfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='jscolor' style=color:" + jscolor + ">" + rest + "</span>";
  }
  function jsRegExpMode(txt) {
    return "<span class='jsregexpcolor' style=color:" + jsregexpcolor + ">" + txt + "</span>";
  }
  function jsStringMode(txt) {
    return "<span class='jsstringcolor' style=color:" + jsstringcolor + ">" + txt + "</span>";
  }
  function jsStringTempMode(txt) {
    return "<span class='jsstringtempcolor' style=color:" + jsstringtempcolor + ">" + txt + "</span>";
  }
  function jsKeywordMode(txt) {
    return "<span class='jskeywordcolor' style=color:" + jskeywordcolor + ">" + txt + "</span>";
  }
  function jsNumberMode(txt) {
    return "<span class='jsnumbercolor' style=color:" + jsnumbercolor + ">" + txt + "</span>";
  }
  function jsPropertyMode(txt) {
    return "<span class='jspropertycolor' style=color:" + jspropertycolor + ">" + txt + "</span>";
  }
  function getRegExpPos(txt, func) {
    var pos1, cc, pos2 = 0, mArr, i, len, patt, modOK = false;
    pos1 = txt.search(/\/.+?\//);
    if (pos1 > -1) {
      len = txt.match(/\/.+?\//)[0].length; 
      patt = /\W/g;
        cc = txt.match(/\/.+?\//)[0];
        pos2 = cc.length;
        mArr = ["img", "igm", "mig", "mgi", "gim", "gmi", "im", "ig", "mi", "mg", "gi", "gm", "i", "m", "g"];
        for (i = 0; i < mArr.length; i++) {
          re = new RegExp(`\\b^${mArr[i]}\\b`, 'gi');
          if (txt.substr(pos1+pos2).search(re) > -1) {
            modOK = true;
            pos2 = pos2 + mArr[i].length;
          }
        }
      if ((txt.substr(pos1 + len,1)!= "/" && txt.substr(pos1 + len,1).match(patt) && txt.substr(pos1 - 1,1).match(patt)  && txt.substr(pos1 - 1,1) !="/") || modOK == true) {
      
        
      }else {
      pos1 = -1;
      pos2 = 0;
      }
    }
    return [pos1, pos1 + pos2, func];
  }
  function getDotPos(txt, func) {
    var x, i, j, s, e, arr = [".","<", " ", ";", "(", "+", ")", "[", "]", ",", "&", ":", "{", "}", "/" ,"-", "*", "|", "%"];
    s = txt.indexOf(".");
    if (s > -1) {
      x = txt.substr(s + 1);
      for (j = 0; j < x.length; j++) {
        cc = x[j];
        for (i = 0; i < arr.length; i++) {
          if (cc.indexOf(arr[i]) > -1) {
            e = j;
            return [s + 1, e + s + 1, func];
          }
        }
      }
    }
    return [-1, -1, func];
  }
  function getMinPos() {
    var i, arr = [];
    for (i = 0; i < arguments.length; i++) {
      if (arguments[i][0] > -1) {
        if (arr.length == 0 || arguments[i][0] < arr[0]) {arr = arguments[i];}
      }
    }
    if (arr.length == 0) {arr = arguments[i];}
    return arr;
  }
  function javaMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", javaStringMode);
      dfnuttpos = getPos(rest, '"', '"', javaStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, javaNumberMode);
      keywordpos = getKeywordPos("java", rest, javaKeywordMode);
      dotpos = getDotPos(rest, javaPropertyMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='javacolor' style=color:" + javacolor + ">" + rest + "</span>";
  }
  function javaStringMode(txt) {
    return "<span class='javastringcolor' style=color:" + javastringcolor + ">" + txt + "</span>";
  }
  function javaKeywordMode(txt) {
    return "<span class='javakeywordcolor' style=color:" + javakeywordcolor + ">" + txt + "</span>";
  }
  function javaNumberMode(txt) {
    return "<span class='javanumbercolor' style=color:" + javanumbercolor + ">" + txt + "</span>";
  }
  function javaPropertyMode(txt) {
    return "<span class='javapropertycolor' style=color:" + javapropertycolor + ">" + txt + "</span>";
  }
  function kotlinMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", kotlinStringMode);
      dfnuttpos = getPos(rest, '"', '"', kotlinStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, kotlinNumberMode);
      keywordpos = getKeywordPos("kotlin", rest, kotlinKeywordMode);
      dotpos = getDotPos(rest, kotlinPropertyMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='kotlincolor' style=color:" + kotlincolor + ">" + rest + "</span>";
  }
  function kotlinStringMode(txt) {
    return "<span class='kotlinstringcolor' style=color:" + kotlinstringcolor + ">" + txt + "</span>";
  }
  function kotlinKeywordMode(txt) {
    return "<span class='kotlinkeywordcolor' style=color:" + kotlinkeywordcolor + ">" + txt + "</span>";
  }
  function kotlinNumberMode(txt) {
    return "<span class='kotlinnumbercolor' style=color:" + kotlinnumbercolor + ">" + txt + "</span>";
  }
  function kotlinPropertyMode(txt) {
    return "<span class='kotlinpropertycolor' style=color:" + kotlinpropertycolor + ">" + txt + "</span>";
  }
  function sqlMode(txt) {
    var rest = txt, y, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", sqlStringMode);
      dfnuttpos = getPos(rest, '"', '"', sqlStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /--/, "<br>", commentMode);      
      numpos = getNumPos(rest, sqlNumberMode);
      keywordpos = getKeywordPos("sql", rest, sqlKeywordMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    return "<span class='sqlcolor' style=color:" + sqlcolor + ">" + rest + "</span>";
  }
  function sqlStringMode(txt) {
    return "<span class='sqlstringcolor' style=color:" + sqlstringcolor + ">" + txt + "</span>";
  }
  function sqlKeywordMode(txt) {
    return "<span class='sqlkeywordcolor' style=color:" + sqlkeywordcolor + ">" + txt + "</span>";
  }
  function sqlNumberMode(txt) {
    return "<span class='sqlnumbercolor' style=color:" + sqlnumbercolor + ">" + txt + "</span>";
  }
  function phpMode(txt) {
    var rest = txt, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos, mypos, y;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", phpStringMode);
      dfnuttpos = getPos(rest, '"', '"', phpStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      comhashpos = getPos(rest, "#", "<br>", commentMode);
      numpos = getNumPos(rest, phpNumberMode);
      keywordpos = getKeywordPos("php", rest, phpKeywordMode);      
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], comhashpos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    rest = "<span class='phptagcolor' style=color:" + phptagcolor + ">&lt;" + rest.substr(4, 4) + "</span>" + rest.substring(8);
    if (rest.substr(rest.length - 5, 5) == "?&gt;") {
      rest = rest.substring(0, rest.length - 5) + "<span class='phptagcolor' style=color:" + phptagcolor + ">?&gt;</span>";
    }
    return "<span class='phpcolor' style=color:" + phpcolor + ">" + rest + "</span>";
  }
  function phpStringMode(txt) {
    return "<span class='phpstringcolor' style=color:" + phpstringcolor + ">" + txt + "</span>";
  }
  function phpNumberMode(txt) {
    return "<span class='phpnumbercolor' style=color:" + phpnumbercolor + ">" + txt + "</span>";
  }
  function phpKeywordMode(txt) {
    var glb = ["$GLOBALS","$_SERVER","$_REQUEST","$_POST","$_GET","$_FILES","$_ENV","$_COOKIE","$_SESSION"];
    if (glb.indexOf(txt.toUpperCase()) > -1) {
      if (glb.indexOf(txt) > -1) {
        return "<span class='phpglobalcolor' style=color:" + phpglobalcolor + ">" + txt + "</span>";
      } else {
        return txt;
      }
    } else {
      return "<span class='phpkeywordcolor' style=color:" + phpkeywordcolor + ">" + txt + "</span>";
    }
  }
  function pythonMode(txt) {
    var rest = txt, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos, mypos, y;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", pythonStringMode);
      dfnuttpos = getPos(rest, '"', '"', pythonStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comhashpos = getPos(rest, "#", "<br>", commentMode);
      numpos = getNumPos(rest, pythonNumberMode);
      keywordpos = getKeywordPos("python", rest, pythonKeywordMode);      
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comhashpos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comhashpos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    return "<span class='pythoncolor' style=color:" + pythoncolor + ">" + rest + "</span>";
  }
  function pythonStringMode(txt) {
    return "<span class='pythonstringcolor' style=color:" + pythonstringcolor + ">" + txt + "</span>";
  }
  function pythonNumberMode(txt) {
    return "<span class='pythonnumbercolor' style=color:" + pythonnumbercolor + ">" + txt + "</span>";
  }
  function pythonKeywordMode(txt) {
    return "<span class='pythonkeywordcolor' style=color:" + pythonkeywordcolor + ">" + txt + "</span>";
  }
  function getKeywordPos(typ, txt, func) {
    var words, i, pos, rpos = -1, rpos2 = -1, patt;
    if (typ == "js") {
      words = ["abstract","arguments","async","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete",
      "do","double","else","enum","eval","event","export","extends","false","final","finally","float","for","function","goto","if","implements","import",
      "in","instanceof","int","interface","let","long","NaN","native","new","null","package","private","protected","public","return","short","static",
      "super","switch","synchronized","then","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"];
    } else if (typ == "java") {
      words = ["abstract","arguments","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete",
      "do","double","else","enum","eval","event","export","extends","false","final","finally","float","for","function","goto","if","implements","import",
      "in","instanceof","int","interface","let","long","NaN","native","new","null","package","private","protected","public","return","short","static",
      "super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield",
      "String"];
    } else if (typ == "kotlin") {
      words = ['package','as','typealias','class','interface','this','super','val','operator','var','fun','for','is','in','This','throw','return',
      'annotation','break','continue','object','if','else','while','do','try','when','!in','!is','as?','file','import','where','by','get','set',
      'abstract','enum','open','inner','override','private','public','internal','protected','catch','finally','out','final','vararg','reified',
      'dynamic','companion','constructor','init','sealed','field','property','receiver','param','sparam','lateinit','data','inline','noinline',
      'tailrec','external','annotation','crossinline','const','operator','infix','suspend','actual','expect','setparam','Boolean','Byte','Character',
      'CharSequence','Class','ClassLoader','Cloneable','Comparable','Compiler','Double','Exception','Float','Integer','Long','Math','Number','Object',
      'Package','Pair','Process','Runtime','Runnable','SecurityManager','Short','StackTraceElement','StrictMath','String','StringBuffer','System',
      'Thread','ThreadGroup','ThreadLocal','Throwable','Triple','Void','Annotation','Any','BooleanArray','ByteArray','Char','CharArray',
      'DeprecationLevel','DoubleArray','Enum','FloatArray','Function','Int','IntArray','Lazy','LazyThreadSafetyMode','LongArray','Nothing','ShortArray','Unit'];
    } else if (typ == "php") {
      words = ["$GLOBALS","$_SERVER","$_REQUEST","$_POST","$_GET","$_FILES","$_ENV","$_COOKIE","$_SESSION",
      "__halt_compiler","abstract","and","array","as","break","callable","case","catch","class","clone","const","continue","declare","default",
      "die","do","echo","else","elseif","empty","enddeclare","endfor","endforeach","endif","endswitch","endwhile","eval","exit","extends","final","for",
      "foreach","function","global","goto","if","implements","include","include_once","instanceof","insteadof","interface","isset","list","namespace","new",
      "or","print","private","protected","public","require","require_once","return","static","switch","throw","trait","try","unset","use","var","while","xor"];
    } else if (typ == "sql") {
      words = ["ADD","EXTERNAL","PROCEDURE","ALL","FETCH","PUBLIC","ALTER","FILE","RAISERROR","AND","FILLFACTOR","READ","ANY","READTEXT","AS","FOREIGN",
      "RECONFIGURE","ASC","FREETEXT","REFERENCES","AUTHORIZATION","FREETEXTTABLE","REPLICATION","BACKUP","FROM","RESTORE","BEGIN","FULL","RESTRICT","BETWEEN",
      "FUNCTION","RETURN","BREAK","GOTO","REVERT","BROWSE","GRANT","REVOKE","BULK","GROUP","RIGHT","BY","HAVING","ROLLBACK","CASCADE","HOLDLOCK","ROWCOUNT",
      "CASE","IDENTITY","ROWGUIDCOL","CHECK","IDENTITY_INSERT","RULE","CHECKPOINT","IDENTITYCOL","SAVE","CLOSE","IF","SCHEMA","CLUSTERED","IN",
      "SECURITYAUDIT","COALESCE","INDEX","SELECT","COLLATE","INNER","SEMANTICKEYPHRASETABLE","COLUMN","INSERT","SEMANTICSIMILARITYDETAILSTABLE","COMMIT",
      "INTERSECT","SEMANTICSIMILARITYTABLE","COMPUTE","INTO","SESSION_USER","CONSTRAINT","IS","SET","CONTAINS","JOIN","SETUSER","CONTAINSTABLE","KEY",
      "SHUTDOWN","CONTINUE","KILL","SOME","CONVERT","LEFT","STATISTICS","CREATE","LIKE","SYSTEM_USER","CROSS","LINENO","TABLE","CURRENT","LOAD","TABLESAMPLE",
      "CURRENT_DATE","MERGE","TEXTSIZE","CURRENT_TIME","NATIONAL","THEN","CURRENT_TIMESTAMP","NOCHECK","TO","CURRENT_USER","NONCLUSTERED","TOP","CURSOR",
      "NOT","TRAN","DATABASE","NULL","TRANSACTION","DBCC","NULLIF","TRIGGER","DEALLOCATE","OF","TRUNCATE","DECLARE","OFF","TRY_CONVERT","DEFAULT","OFFSETS",
      "TSEQUAL","DELETE","ON","UNION","DENY","OPEN","UNIQUE","DESC","OPENDATASOURCE","UNPIVOT","DISK","OPENQUERY","UPDATE","DISTINCT","OPENROWSET",
      "UPDATETEXT","DISTRIBUTED","OPENXML","USE","DOUBLE","OPTION","USER","DROP","OR","VALUES","DUMP","ORDER","VARYING","ELSE","OUTER","VIEW","END",
      "OVER","WAITFOR","ERRLVL","PERCENT","WHEN","ESCAPE","PIVOT","WHERE","EXCEPT","PLAN","WHILE","EXEC","PRECISION","WITH","EXECUTE","PRIMARY",
      "WITHIN GROUP","EXISTS","PRINT","WRITETEXT","EXIT","PROC","LIMIT","MODIFY","COUNT","REPLACE"];
    } else if (typ == "python") {
      words = ["as", "assert", "break", "class", "continue", "def", "del", "elif", "else", "except", "False", "finally", "for", "from", "global", "if", "import",
      "lambda", "pass", "raise", "return", "try", "while", "with", "yield", "in", "abs", "all", "any", "bin", "bool", "bytearray", "callable", "chr",
      "classmethod", "compile", "complex", "delattr", "dict", "dir", "divmod", "enumerate", "eval", "filter", "float", "format", "frozenset", "getattr",
      "globals", "hasattr", "hash", "help", "hex", "id", "input", "int", "isinstance", "issubclass", "iter", "len", "list", "locals", "map", "max",
      "memoryview", "min", "next", "object", "oct", "open", "ord", "pow", "print", "property", "range", "repr", "reversed", "round", "set", "setattr", "slice",
      "sorted", "staticmethod", "str", "sum", "super", "tuple", "True", "type", "vars", "zip", "__import__", "NotImplemented", "Ellipsis", "__debug__"];
    }
    for (i = 0; i < words.length; i++) {
      if (typ == "php" || typ == "sql") {
        pos = txt.toLowerCase().indexOf(words[i].toLowerCase());
      } else {
        pos = txt.indexOf(words[i]);
      }
      if (pos > -1) {
        patt = /\W/g;
        if (txt.substr(pos + words[i].length,1).match(patt) && txt.substr(pos - 1,1).match(patt)) {
          if (pos > -1 && (rpos == -1 || pos < rpos)) {
            rpos = pos;
            rpos2 = rpos + words[i].length;
          }
        }
      } 
    }
    return [rpos, rpos2, func];
  }
  function getPos(txt, start, end, func) {
    var s, e;
    s = txt.search(start);
    e = txt.indexOf(end, s + (end.length));
    if (e == -1) {e = txt.length;}
    return [s, e + (end.length), func];
  }
  function getNumPos(txt, func) {
    var arr = ["<br>", " ", ";", "(", "+", ")", "[", "]", ",", "&", ":", "{", "}", "/" ,"-", "*", "|", "%", "="], i, j, c, startpos = 0, endpos, word;
    for (i = 0; i < txt.length; i++) {
      for (j = 0; j < arr.length; j++) {
        c = txt.substr(i, arr[j].length);
        if (c == arr[j]) {
          if (c == "-" && (txt.substr(i - 1, 1) == "e" || txt.substr(i - 1, 1) == "E")) {
            continue;
          }
          endpos = i;
          if (startpos < endpos) {
            word = txt.substring(startpos, endpos);
            if (!isNaN(word)) {return [startpos, endpos, func];}
          }
          i += arr[j].length;
          startpos = i;
          i -= 1;
          break;
        }
      }
    }  
    return [-1, -1, func];
  }  
}



Unique Id: cd5dfaf4-45ab-45e6-ba19-f99647d60411
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/common-deps.js?v=1.0.2
Async: 0
Defer: 0
Content: /*
  Common dependencies
  Version: 1.0.2
*/

/* js-cookie v3.0.0-rc.1 | MIT */
!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self, function () { var n = e.Cookies, r = e.Cookies = t(); r.noConflict = function () { return e.Cookies = n, r } }()) }(this, function () { "use strict"; function e(e) { for (var t = 1; t < arguments.length; t++) { var n = arguments[t]; for (var r in n) e[r] = n[r] } return e } var t = { read: function (e) { return e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent) }, write: function (e) { return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent) } }; return function n(r, o) { function i(t, n, i) { if ("undefined" != typeof document) { "number" == typeof (i = e({}, o, i)).expires && (i.expires = new Date(Date.now() + 864e5 * i.expires)), i.expires && (i.expires = i.expires.toUTCString()), t = encodeURIComponent(t).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape), n = r.write(n, t); var c = ""; for (var u in i) i[u] && (c += "; " + u, !0 !== i[u] && (c += "=" + i[u].split(";")[0])); return document.cookie = t + "=" + n + c } } return Object.create({ set: i, get: function (e) { if ("undefined" != typeof document && (!arguments.length || e)) { for (var n = document.cookie ? document.cookie.split("; ") : [], o = {}, i = 0; i < n.length; i++) { var c = n[i].split("="), u = c.slice(1).join("="); '"' === u[0] && (u = u.slice(1, -1)); try { var f = t.read(c[0]); if (o[f] = r.read(u, f), e === f) break } catch (e) { } } return e ? o[e] : o } }, remove: function (t, n) { i(t, "", e({}, n, { expires: -1 })) }, withAttributes: function (t) { return n(this.converter, e({}, this.attributes, t)) }, withConverter: function (t) { return n(e({}, this.converter, t), this.attributes) } }, { attributes: { value: Object.freeze(o) }, converter: { value: Object.freeze(r) } }) }(t, { path: "/" }) });

/* base64.js | https://gist.github.com/chrisveness/e121cffb51481bd1c142 | MIT */
function Base64Encode(r){if(/([^\u0000-\u00ff])/.test(r))throw Error("String must be ASCII");var t,e,n,o,h,a,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",f=[],c="";if((a=r.length%3)>0)for(;a++<3;)c+="=",r+="\0";for(a=0;a<r.length;a+=3)e=(t=r.charCodeAt(a)<<16|r.charCodeAt(a+1)<<8|r.charCodeAt(a+2))>>18&63,n=t>>12&63,o=t>>6&63,h=63&t,f[a/3]=i.charAt(e)+i.charAt(n)+i.charAt(o)+i.charAt(h);return r=(r=f.join("")).slice(0,r.length-c.length)+c}function Base64Decode(r){if(!/^[a-z0-9+/]+={0,2}$/i.test(r)||r.length%4!=0)throw Error("Not base64 string");for(var t,e,n,o,h,a,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",f=[],c=0;c<r.length;c+=4)t=(a=i.indexOf(r.charAt(c))<<18|i.indexOf(r.charAt(c+1))<<12|(o=i.indexOf(r.charAt(c+2)))<<6|(h=i.indexOf(r.charAt(c+3))))>>>16&255,e=a>>>8&255,n=255&a,f[c/4]=String.fromCharCode(t,e,n),64==h&&(f[c/4]=String.fromCharCode(t,e)),64==o&&(f[c/4]=String.fromCharCode(t));return r=f.join("")};

if (typeof window.atob === 'undefined') {
  window.atob = Base64Decode;
}

if (typeof window.btoa === 'undefined') {
  window.btoa = Base64Encode;
}

/* cross-browser shim that fully implements element.classList | http://purl.eligrey.com/github/classList.js/blob/master/classList.js | Unlicense */
"document"in self&&("classList"in document.createElement("_")&&(!document.createElementNS||"classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))||!function(t){"use strict";if("Element"in t){var e="classList",n="prototype",i=t.Element[n],s=Object,r=String[n].trim||function(){return this.replace(/^\s+|\s+$/g,"")},o=Array[n].indexOf||function(t){for(var e=0,n=this.length;n>e;e++)if(e in this&&this[e]===t)return e;return-1},c=function(t,e){this.name=t,this.code=DOMException[t],this.message=e},a=function(t,e){if(""===e)throw new c("SYNTAX_ERR","The token must not be empty.");if(/\s/.test(e))throw new c("INVALID_CHARACTER_ERR","The token must not contain space characters.");return o.call(t,e)},l=function(t){for(var e=r.call(t.getAttribute("class")||""),n=e?e.split(/\s+/):[],i=0,s=n.length;s>i;i++)this.push(n[i]);this._updateClassName=function(){t.setAttribute("class",this.toString())}},u=l[n]=[],h=function(){return new l(this)};if(c[n]=Error[n],u.item=function(t){return this[t]||null},u.contains=function(t){return~a(this,t+"")},u.add=function(){var t,e=arguments,n=0,i=e.length,s=!1;do t=e[n]+"",~a(this,t)||(this.push(t),s=!0);while(++n<i);s&&this._updateClassName()},u.remove=function(){var t,e,n=arguments,i=0,s=n.length,r=!1;do for(t=n[i]+"",e=a(this,t);~e;)this.splice(e,1),r=!0,e=a(this,t);while(++i<s);r&&this._updateClassName()},u.toggle=function(t,e){var n=this.contains(t),i=n?e!==!0&&"remove":e!==!1&&"add";return i&&this[i](t),e===!0||e===!1?e:!n},u.replace=function(t,e){var n=a(t+"");~n&&(this.splice(n,1,e),this._updateClassName())},u.toString=function(){return this.join(" ")},s.defineProperty){var f={get:h,enumerable:!0,configurable:!0};try{s.defineProperty(i,e,f)}catch(p){void 0!==p.number&&-2146823252!==p.number||(f.enumerable=!1,s.defineProperty(i,e,f))}}else s[n].__defineGetter__&&i.__defineGetter__(e,h)}}(self),function(){"use strict";var t=document.createElement("_");if(t.classList.add("c1","c2"),!t.classList.contains("c2")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var n,i=arguments.length;for(n=0;i>n;n++)t=arguments[n],e.call(this,t)}};e("add"),e("remove")}if(t.classList.toggle("c3",!1),t.classList.contains("c3")){var n=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){return 1 in arguments&&!this.contains(t)==!e?e:n.call(this,t)}}"replace"in document.createElement("_").classList||(DOMTokenList.prototype.replace=function(t,e){var n=this.toString().split(" "),i=n.indexOf(t+"");~i&&(n=n.slice(i),this.remove.apply(this,n),this.add(e),this.add.apply(this,n.slice(1)))}),t=null}());




Unique Id: b144ee70-3b9c-4070-8210-d9e8eca83319
Related html node: 
Type: external
Src: https://www.w3schools.com/lib/w3schools_footer.js?update=20230706
Async: 0
Defer: 0
Content: if (typeof k42 == "undefined") {k42 = false;}
if (k42 == true) {
  var k42ResizeFunc;
  function k42Resizing() {
    clearTimeout(k42ResizeFunc);
    k42ResizeFunc = setTimeout(browserResize, 500);
  }
  
  if (window.addEventListener) {              
    window.addEventListener("resize", k42Resizing);
  } else if (window.attachEvent) {                 
    window.attachEvent("resize", k42Resizing);
  }
} else {
  if (window.addEventListener) {              
    window.addEventListener("resize", browserResize);
  } else if (window.attachEvent) {                 
    window.attachEvent("onresize", browserResize);
  }
}
var xbeforeResize = window.innerWidth;
var ybeforeResize = window.innerWidth;
var zbeforeResize = window.innerWidth;
var sbeforeResize = window.innerWidth;
var abeforeResize = window.innerWidth;
var allbeforeResize = window.innerWidth;
function skyscraperResize() {
  if (k42 == true) {
    if (window.innerWidth < 975 + 17 && document.getElementById("adngin-sidebar_top-0")) {
      document.getElementById("adngin-sidebar_top-0").style.minHeight="0";
    }
    else if (window.innerWidth < 975 + 17 && document.getElementById("adngin-sidebar_top_courses-0")) {
      document.getElementById("adngin-sidebar_top_courses-0").style.minHeight="0";
    }
  } else {
    if (window.innerWidth < 975 + 17 && document.getElementById("div-gpt-ad-1422003450156-5")) {
      document.getElementById("div-gpt-ad-1422003450156-5").style.minHeight="0";
    }
  }
}
function browserResize() {
if (k42 == true) {return false;}
  if (allbeforeResize == window.innerWidth) { return false; }
  allbeforeResize = window.innerWidth;
    if (k42 == true) {
      if (document.getElementById("adngin-main_leaderboard-0")) {
        if (Number(w3_getStyleValue(document.getElementById("main"), "height").replace("px", "")) > 2200) {
          if (document.getElementById("adngin-mid_content-0")) {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard", "mid_content", "sidebar_top", "sidebar_sticky", "bottom_left", "bottom_right"]); });
          }
          else {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard", "sidebar_top", "sidebar_sticky", "bottom_left", "bottom_right"]); });
          }
        }
        else {
          if (document.getElementById("adngin-mid_content-0")) {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard", "mid_content", "sidebar_top", "bottom_left", "bottom_right"]); });
          }
          else {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard", "sidebar_top", "bottom_left", "bottom_right"]); });
          }
        }
      } else if (document.getElementById("adngin-main_leaderboard_courses-0")) {
        if (Number(w3_getStyleValue(document.getElementById("main"), "height").replace("px", "")) > 2200) {
          if (document.getElementById("adngin-mid_content_courses-0")) {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard_courses", "mid_content_courses", "sidebar_top_courses", "sidebar_sticky_courses", "bottom_left_courses", "bottom_right_courses"]); });
          }
          else {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard_courses", "sidebar_top_courses", "sidebar_sticky_courses", "bottom_left_courses", "bottom_right_courses"]); });
          }
        }
        else {
          if (document.getElementById("adngin-mid_content_courses-0")) {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard_courses", "mid_content_courses", "sidebar_top_courses", "bottom_left_courses", "bottom_right_courses"]); });
          }
          else {
            adngin.queue.push(function(){  adngin.cmd.startAuction(["main_leaderboard_courses", "sidebar_top_courses", "bottom_left_courses", "bottom_right_courses"]); });
          }
        }
      }
  } else {
    var afterResize = window.innerWidth;
    if ((xbeforeResize < (1482 + 14) && afterResize >= (1482 + 14)) || (xbeforeResize >= (1482 + 14) && afterResize < (1482 + 14)) ||
      (xbeforeResize < (732 + 14) && afterResize >= (732 + 14)) || (xbeforeResize >= (732 + 14) && afterResize < (732 + 14)) ||
      (xbeforeResize < (512 + 17) && afterResize >= (512 + 17)) ||(xbeforeResize >= (512 + 17) && afterResize < (512 + 17))) {
      xbeforeResize = afterResize;
      googletag.cmd.push(function() {
        googletag.pubads().refresh([gptAdSlots[0]]);
      });
    }
    if ((ybeforeResize < (1683 + 14) && afterResize >= (1683 + 14)) || (ybeforeResize >= (1683 + 14) && afterResize < (1683 + 14)) ||
      (ybeforeResize < (1108 + 14) && afterResize >= (1108 + 14)) || (ybeforeResize >= (1108 + 14) && afterResize < (1108 + 14)) ||
      (ybeforeResize < (983 + 17) && afterResize >= (983 + 17)) || (ybeforeResize >= (983 + 17) && afterResize < (983 + 17))) {
      ybeforeResize = afterResize;
        skyscraperResize()
      googletag.cmd.push(function() {
        googletag.pubads().refresh([gptAdSlots[1]]);
      });
    }
    if ((zbeforeResize < (1272 + 14) && afterResize >= (1272 + 14)) || (zbeforeResize >= (1272 + 14) && afterResize < (1272 + 14))) {
      zbeforeResize = afterResize;
      googletag.cmd.push(function() {
        googletag.pubads().refresh([gptAdSlots[2], gptAdSlots[3]]);
      });
    }
    if ((sbeforeResize < (1683 + 14) && afterResize >= (1683 + 14)) || (sbeforeResize >= (1683 + 14) && afterResize < (1683 + 14)) ||
      (sbeforeResize < (1108 + 14) && afterResize >= (1108 + 14)) || (sbeforeResize >= (1108 + 14) && afterResize < (1108 + 14)) ||
      (sbeforeResize < (983 + 17) && afterResize >= (983 + 17)) || (sbeforeResize >= (983 + 17) && afterResize < (983 + 17))) {
      sbeforeResize = afterResize;
      googletag.cmd.push(function() {
        googletag.pubads().refresh([gptAdSlots[4]]);
      });
    }
    if ((abeforeResize < (1472 + 14) && afterResize >= (1472 + 14)) || (abeforeResize >= (1472 + 14) && afterResize < (1472 + 14)) ||
      (abeforeResize < (1167 + 14) && afterResize >= (1167 + 14)) || (abeforeResize >= (1167 + 14) && afterResize < (1167 + 14)) ||
      (abeforeResize < (1025 + 14) && afterResize >= (1025 + 14)) || (abeforeResize >= (1025 + 14) && afterResize < (1025 + 14)) ||
      (abeforeResize < (782 + 14) && afterResize >= (782 + 14)) || (abeforeResize >= (782 + 14) && afterResize < (782 + 14)) ||
      (abeforeResize < (522 + 17) && afterResize >= (522 + 17)) || (abeforeResize >= (522 + 17) && afterResize < (522 + 17))) {
      abeforeResize = afterResize;
      googletag.cmd.push(function() {
        googletag.pubads().refresh([gptAdSlots[5]]);
      });
    }
  }
}
skyscraperResize();
function open_menu() {
  var x, m;
  m = (document.getElementById("leftmenu") || document.getElementById("sidenav"));
  if (m && m.style.display == "block") {
    close_menu();
  } else {
    w3_close_all_nav();  
    if (m) m.style.display = "block";
    if (document.getElementsByClassName) {
      x = document.getElementsByClassName("chapter")
      for (i = 0; i < x.length; i++) {
        x[i].style.visibility = "hidden";
      }
      x = document.getElementsByClassName("nav")
      for (i = 0; i < x.length; i++) {
        x[i].style.visibility = "hidden";
      }
      x = document.getElementsByClassName("sharethis")
      for (i = 0; i < x.length; i++) {
        x[i].style.visibility = "hidden";
      }
    }
    fix_sidemenu();
  }
}
function close_menu() {
  var m;
  m = (document.getElementById("leftmenu") || document.getElementById("sidenav"));
  if (m) m.style.display = "none";  
  if (document.getElementsByClassName) {
    x = document.getElementsByClassName("chapter")
    for (i = 0; i < x.length; i++) {
      x[i].style.visibility = "visible";
    }
    x = document.getElementsByClassName("nav")
    for (i = 0; i < x.length; i++) {
      x[i].style.visibility = "visible";
    }
    x = document.getElementsByClassName("sharethis")
    for (i = 0; i < x.length; i++) {
      x[i].style.visibility = "visible";
    }            
  }
}
if (window.addEventListener) {
  window.addEventListener("scroll", function () {fix_sidemenu(); });
  window.addEventListener("resize", function () {fix_sidemenu(); });  
  window.addEventListener("touchmove", function () {fix_sidemenu(); });  
  window.addEventListener("load", function () {fix_sidemenu(); });
} else if (window.attachEvent) {
  window.attachEvent("onscroll", function () {fix_sidemenu(); });
  window.attachEvent("onresize", function () {fix_sidemenu(); });  
  window.attachEvent("ontouchmove", function () {fix_sidemenu(); });
  window.attachEvent("onload", function () {fix_sidemenu(); });
}
function fix_sidemenu() {
return false;
  var w, top;
  w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
  top = scrolltop()    
/*  if (w < 993 && w > 600) {
    if (top == 0) {
      document.getElementById("sidenav").style.top = "144px";
    }
    if (top > 0 && top < 100) {
      document.getElementById("sidenav").style.top = (144 - top) + "px";      
    }
    if (top > 100) {
      document.getElementById("sidenav").style.top = document.getElementById("topnav").offsetHeight + "px";
      document.getElementById("belowtopnav").style.paddingTop = "44px";    
      document.getElementById("topnav").style.position = "fixed";    
      document.getElementById("topnav").style.top = "0";
      document.getElementById("googleSearch").style.position = "fixed";
      document.getElementById("googleSearch").style.top = "0";
      document.getElementById("google_translate_element").style.position = "fixed";
      document.getElementById("google_translate_element").style.top = "0";
    } else {
      document.getElementById("belowtopnav").style.paddingTop = "0";
      document.getElementById("topnav").style.position = "relative";
      document.getElementById("googleSearch").style.position = "absolute";
      document.getElementById("googleSearch").style.top = "";
      document.getElementById("google_translate_element").style.position = "absolute";
      document.getElementById("google_translate_element").style.top = "";
    }
    document.getElementById("leftmenuinner").style.paddingTop = "0";
  } else {*/


    if (top == 0) {
      document.getElementById("sidenav").style.top = "118px";      
    }
    if (top > 0 && top < 73) {
      document.getElementById("sidenav").style.top = (118 - top) + "px";      
    }
    if (top > 73) {
      document.getElementById("sidenav").style.top = "44px";
      if (w > 992) {document.getElementById("leftmenuinner").style.paddingTop = "44px";}
      document.getElementById("belowtopnav").style.paddingTop = "44px";    
      document.getElementById("topnav").style.position = "fixed";
      document.getElementById("topnav").style.top = "0";
      document.getElementById("myAccordion").style.paddingTop = "44px";
      document.getElementById("googleSearch").style.position = "fixed";
      document.getElementById("googleSearch").style.top = "0";
      document.getElementById("google_translate_element").style.position = "fixed";
      document.getElementById("google_translate_element").style.top = "0";
    } else {
      if (w > 992) {
        document.getElementById("leftmenuinner").style.paddingTop = (118 - top) + "px";
      } else { //ELSEN ER NY
        document.getElementById("leftmenuinner").style.paddingTop = 0;
      }
      document.getElementById("belowtopnav").style.paddingTop = "0";
      document.getElementById("myAccordion").style.paddingTop = "0";
      document.getElementById("topnav").style.position = "relative";
      document.getElementById("googleSearch").style.position = "absolute";
      document.getElementById("googleSearch").style.top = "";
      document.getElementById("google_translate_element").style.position = "absolute";
      document.getElementById("google_translate_element").style.top = "";
    }
/*  }*/
}
function sidemenuitemintoview() {
  var a, b, i = 0;
  a = document.getElementById("leftmenuinnerinner");
  if (!a || !a.getElementsByClassName) {return false;}
  b = a.getElementsByClassName("active");
  if (b.length < 1) {return false;}  
  while (!isIntoView(a, b[0])) {
    i++
    if (i > 1000) {break;}
    a.scrollTop += 10;
  }
}
function isIntoView(x, y) {
  var a = x.scrollTop;
  var b = a + window.innerHeight;
  var ytop = y.offsetTop;
  var ybottom = ytop + 140;
  return ((ybottom <= b) && (ytop >= a));
}
function scrolltop() {
  var top = 0;
  if (typeof(window.pageYOffset) == "number") {
    top = window.pageYOffset;
  } else if (document.body && document.body.scrollTop) {
    top = document.body.scrollTop;
  } else if (document.documentElement && document.documentElement.scrollTop) {
    top = document.documentElement.scrollTop;
  }
  return top;
}
function open_translate(elmnt) {
  var a = document.getElementById("google_translate_element");
  if (a.style.display == "") {
    a.style.display = "none";
    //elmnt.innerHTML = "&#xe801;";
  } else {
    a.style.display = "";
    if (window.innerWidth > 500) {
      a.style.width = "40%";
    } else {
      a.style.width = "100%";
    }
    //elmnt.innerHTML = "<span style='font-family:verdana;font-weight:bold;'>X</span>";
  }
}
function open_search(elmnt) {
  var a = document.getElementById("googleSearch");
  if (a.style.display == "") {
    a.style.display = "none";
    a.style.paddingRight = "";
    //elmnt.innerHTML = "&#xe802;";    
  } else {
    a.style.display = "";  
    if (window.innerWidth > 700) {
      a.style.width = "40%";
    } else {
      a.style.width = "80%";
    }
//  if (document.getElementById("gsc-i-id1")) {document.getElementById("gsc-i-id1").focus(); }
//  elmnt.innerHTML = "<span style='font-family:verdana;font-weight:bold;'>X</span>";
    window.setTimeout(function () {
        if (document.getElementById("gsc-i-id1")) {
          document.getElementById("gsc-i-id1").focus();
        }
      }, 400);
  }
}
function xxxchangecodetheme() {
  var cc = document.body.className;
  if (cc.indexOf("darktheme") > -1) {
    document.body.className = cc.replace("darktheme", "");
    localStorage.setItem("preferredmode", "light");
  } else {
    document.body.className += " darktheme";
    localStorage.setItem("preferredmode", "dark");
  }
}
function changecodetheme(n) {
  var cc = document.body.className;
  if (cc.indexOf("darktheme") > -1) {
    document.body.className = cc.replace("darktheme", "");
    document.body.className = document.body.className.replace("  ", " ");
    localStorage.setItem("preferredmode", "light");
  } else {
    document.body.className += " darktheme";
    document.body.className = document.body.className.replace("  ", " ");    
    localStorage.setItem("preferredmode", "dark");
  }
  if (n == 2) {
    cc = document.body.className;
    if (cc.indexOf("darkpagetheme") > -1) {
      document.body.className = cc.replace("darkpagetheme", "");
      document.body.className = document.body.className.replace("  ", " ");    
      localStorage.setItem("preferredpagemode", "light");
    } else {
      document.body.className += " darkpagetheme";
      document.body.className = document.body.className.replace("  ", " ");    
      localStorage.setItem("preferredpagemode", "dark");
    }
  }
}

function click_login_btn() {
  w3_open_nav("login");
}


function w3_open() {
  var x = document.getElementById("myAccordion");
  if (x.style.display === 'none') {
    x.style.display = 'block';
    if (document.getElementById("navbtn_menu")) {
      document.getElementById("navbtn_menu").getElementsByTagName("i")[0].style.display = "none";
      document.getElementById("navbtn_menu").getElementsByTagName("i")[1].style.display = "inline";
    }
  } else {
   x.style.display = 'none';
    if (document.getElementById("navbtn_menu")) {
      document.getElementById("navbtn_menu").getElementsByTagName("i")[0].style.display = "inline";
      document.getElementById("navbtn_menu").getElementsByTagName("i")[1].style.display = "none";
    }
  }
}
function w3_close() {
  document.getElementById("myAccordion").style.display = "none";
    if (document.getElementById("navbtn_menu")) {
      document.getElementById("navbtn_menu").getElementsByTagName("i")[0].style.display = "inline";
      document.getElementById("navbtn_menu").getElementsByTagName("i")[1].style.display = "none";
    }
}
function open_xs_menu(x) {
  if (document.getElementById("sectionxs_" + x).innerHTML == "") {
    document.getElementById("sectionxs_" + x).innerHTML = document.getElementById("nav_" + x).innerHTML;
    document.getElementById("sectionxs_" + x).previousElementSibling.classList.add("mystyle2");
  } else {
    document.getElementById("sectionxs_" + x).innerHTML = "";
    document.getElementById("sectionxs_" + x).previousElementSibling.classList.remove("mystyle2");
  }
}




function w3_close_all_nav() {
  w3_close_all_topnav();
  close_menu();
}
function w3_close_all_topnav() {
  w3_close_nav("tutorials");  
  w3_close_nav("certified");
  w3_close_nav("services");
  w3_close_nav("exercises");
}




/*
function w3_close_all_nav() {
  w3_close_nav("tutorials");
  w3_close_nav("certified");
  w3_close_nav("services");
  w3_close_nav("exercises");
  w3_close();
}
*/
function w3_open_nav(x) {
  if (document.getElementById("nav_" + x).style.display == "block") {
    w3_close_nav(x);
  } else {
    w3_close_nav("tutorials");
    w3_close_nav("services");
    w3_close_nav("certified");
    w3_close_nav("exercises");
    document.getElementById("nav_" + x).style.display = "block";
    if (document.getElementById("navbtn_" + x)) {
      document.getElementById("navbtn_" + x).getElementsByTagName("i")[0].style.display = "none";
      document.getElementById("navbtn_" + x).getElementsByTagName("i")[1].style.display = "inline";
      document.getElementById("navbtn_" + x).classList.add("mystyle");
    } 
  }
}
function w3_close_nav(x) {
  document.getElementById("nav_" + x).style.display = "none";
  if (document.getElementById("navbtn_" + x)) {
    document.getElementById("navbtn_" + x).getElementsByTagName("i")[0].style.display = "inline";
    document.getElementById("navbtn_" + x).getElementsByTagName("i")[1].style.display = "none";
    document.getElementById("navbtn_" + x).classList.remove("mystyle");
  }
}

/*
function w3_open() {
  var x = document.getElementById("myAccordion");
  if (x.style.display === 'none') {
    w3_close_all_nav();  
    x.style.display = 'block';
    if (document.getElementById("navbtn_menu")) {
      document.getElementById("navbtn_menu").getElementsByTagName("i")[0].style.display = "none";
      document.getElementById("navbtn_menu").getElementsByTagName("i")[1].style.display = "inline";
    }
  } else {
    x.style.display = 'none';
    if (document.getElementById("navbtn_menu")) {
      document.getElementById("navbtn_menu").getElementsByTagName("i")[0].style.display = "inline";
      document.getElementById("navbtn_menu").getElementsByTagName("i")[1].style.display = "none";
    }
  }
}
function w3_close() {
  document.getElementById("myAccordion").style.display = "none";
}
function open_xs_menu(x) {
  if (document.getElementById("sectionxs_" + x).innerHTML == "") {
    document.getElementById("sectionxs_" + x).innerHTML = document.getElementById("nav_" + x).innerHTML;
  } else {
    document.getElementById("sectionxs_" + x).innerHTML = "";
  }
}

function w3_open_nav(x) {
  var contentNode, h, menuHeight;
  if (document.getElementById("nav_" + x).style.display == "block") {
    w3_close_nav(x);
  } else {
    w3_close_all_nav();
    document.getElementById("nav_" + x).style.display = "block";    
    if (document.getElementById("navbtn_" + x)) {
      document.getElementById("navbtn_" + x).getElementsByTagName("i")[0].style.display = "none";
      document.getElementById("navbtn_" + x).getElementsByTagName("i")[1].style.display = "inline";        
     document.getElementById("navbtn_" + x).classList.add("mystyle");
     //document.getElementById("nav_" + x).getElementsByTagName("h3")[0].focus();
    }
  }
  h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
  menuHeight = document.getElementById("nav_" + x).offsetHeight;
  if (menuHeight > h) {
    document.getElementById("nav_" + x).style.height = (h - 106) + "px";
  }
}
function w3_close_nav(x) {
  document.getElementById("nav_" + x).style.display = "none";
  if (document.getElementById("navbtn_" + x)) {
    document.getElementById("navbtn_" + x).getElementsByTagName("i")[0].style.display = "inline";
    document.getElementById("navbtn_" + x).getElementsByTagName("i")[1].style.display = "none";        
    document.getElementById("nav_" + x).style.height = "";
    document.getElementById("navbtn_" + x).classList.remove("mystyle");
  }
}
function w3_close_all_nav() {
  w3_close_all_topnav();
  close_menu();
}
function w3_close_all_topnav() {
  w3_close_nav("tutorials");
  w3_close_nav("references");
  w3_close_nav("exercises");
}
*/

(function () {
  var x, y, i, a, aa, b, bb, c, cc, d, dd, m, tn;
  m = (document.getElementById("leftmenu") || document.getElementById("sidenav"));
  if (m) {
    x = m.getElementsByTagName("A");
    dd = document.location.href;
    if (dd.indexOf("quiztest") > -1) {
      d = dd;
    } else {
      d = dd.split('?')[0]; // added split to show active regardless of parameters
    }
    for (i = 0; i < x.length; i++) {
      if (dd.indexOf("quiztest") > -1) {
        aa = x[i].href;
        //console.log("Haystack: " + d);
        //console.log("Needle: " + aa);
      } else {
        aa = x[i].href.split('?')[0];  // added split to show active regardless of parameters
      }
      bb = false;
      if (d.substr(-1, 1) == "/" && (aa.indexOf("default.asp") > -1 ||  aa.indexOf("index.php") > -1)) bb = true;
      if (d.indexOf(aa) >= 0 || bb) {
        x[i].className = "active";
        y = x[i].nextElementSibling;
        if (y && (y.className.indexOf("ref_overview") > -1 || y.className.indexOf("tut_overview") > -1)) {
          y.style.display = "block";
          if (y.className.indexOf("tut_overview") > -1) {
            x[i].className = "active_overview";
            y.getElementsByTagName("a")[0].className = "active";
          }
          if (x[i].addEventListener) {
            cc = true;
            x[i].addEventListener("click", function () {
              if (cc == true) {
                y.style.display = "none";
                event.preventDefault();
                cc = false;
              } else {
                y.style.display = "block";
                cc = true;
                event.preventDefault();
              }
            });
          }
        } else if (x[i].parentElement.className.indexOf("ref_overview") > -1) {
          x[i].parentElement.style.display = "block";
          x[i].parentElement.previousElementSibling.className = "activesub";
        } else if (x[i].parentElement.className.indexOf("tut_overview") > -1) {
          x[i].parentElement.style.display = "block";
          x[i].parentElement.previousElementSibling.className = "active_overview";
        }
        break;
      } else if (d.indexOf("/tags/att_") > -1) {
         c = d.substring(d.indexOf("/tags/att_") + 10, d.lastIndexOf("_"));
         if (x[i].href == d.substr(0, d.indexOf("/tags/")) + "/tags/tag_" + c + ".asp") {
           x[i].className = "active";
         }
      } else if (d.indexOf("/howto/default_page") > -1) {
         if (x[i].href.indexOf("default.asp") > -1) {
           x[i].className = "active";
         }
      }
    }
    sidemenuitemintoview();
  }
  tn = (document.getElementById("topnav") || document.getElementById("subtopnav"));
  x = tn.getElementsByTagName("A");
  for (i = 0; i < x.length; i++) {
    a = document.location.pathname;
    b = x[i].pathname;
    if ((x[i].parentNode.tagName == "LI" || (a != "/" && x[i].parentNode.className.indexOf("w3-bar") > -1) && a.substr(0, a.indexOf("/",1)) ==  b.substr(0, b.indexOf("/",1)))) {
      x[i].className += " active";
    }
  }
  if (window.addEventListener) { 
    document.getElementById("main").addEventListener("click", w3_close_all_nav, true);
    if (m) m.addEventListener("click", w3_close_all_topnav, true);
    document.getElementById("right").addEventListener("click", w3_close_all_nav, true);
    document.getElementById("main").addEventListener("wheel", w3_close_all_nav, true);
    document.getElementById("main").addEventListener("touchstart", w3_close_all_nav, true);
  } else if (window.attachEvent) {         
    document.getElementById("main").attachEvent("onclick", w3_close_all_nav);
    if (m) m.attachEvent("onclick", w3_close_all_topnav);
    document.getElementById("right").attachEvent("onclick", w3_close_all_nav);
  }
  if ('ontouchstart' in window || 'onmsgesturechange' in window) {
    if (document.getElementById("leftmenuinnerinner")) document.getElementById("leftmenuinnerinner").style.overflowY = "scroll";
  }
})();
function gSearch(el) {
  var cx = uic_r_y();
  var gcse = document.createElement('script'); gcse.id = 'gSearch'; gcse.type = 'text/javascript'; gcse.async = true;
  gcse.src = 'https://www.google.com/cse/cse.js?cx=' + cx;
  var el = document.getElementById('gSearch');
  if (el == null) {
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  }
  open_search(el);
};

function gTra(el) {
  var gtra = document.createElement('script'); gtra.id = 'gTra'; gtra.type = 'text/javascript'; gtra.async = true;
  gtra.src = 'https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit';
  var el = document.getElementById('gTra');
  if (el == null) {
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gtra, s);
  }
  open_translate(el);
};
function searchfield_focus(obj) {
  obj.style.color = "";
  obj.style.fontStyle = "";
  if (obj.value == "Search w3schools.com") {obj.value = "";}
}
var addr = document.location.href;
function displayError() {
//  document.getElementById("err_url").value = addr;
  document.getElementById("err_form").style.display = "block";
//  document.getElementById("err_email").focus();
//  hideSent();
}
function hideError() {
  document.getElementById("err_form").style.display = "none";
}
function hideSent() {
  document.getElementById("err_sent").style.display = "none";
}
function sendErr() {
  var xmlhttp;
  var err_url = document.getElementById("err_url").value;
  var err_email = document.getElementById("err_email").value;
  var err_desc = document.getElementById("err_desc").value;
  if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
    xmlhttp = new XMLHttpRequest();
  } else {// code for IE6, IE5
    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
  }
  xmlhttp.open("POST", "/err_sup.asp", true);
  xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xmlhttp.send("err_url=" + err_url + "&err_email=" + err_email + "&err_desc=" + escape(err_desc));
  document.getElementById("err_desc").value = "";
  hideError();
  document.getElementById("err_sent").style.display = "block";
}
function clickFBLike() {
  document.getElementById("fblikeframe").style.display = 'block';
  document.getElementById("popupDIV").innerHTML = "<iframe src='/fblike.asp?r=" + Math.random() + "' frameborder='no' style='height:200px;width:250px;'></iframe><br><button onclick='hideFBLike()' class='w3-btn w3-black'>Close</button>";
}
function hideFBLike() {
  document.getElementById("fblikeframe").style.display = 'none';
}
function loginCircle(xx, yy, r, aD) {
  var aR = (aD-90) * Math.PI / 180.0;
  return {
    x: xx + (r * Math.cos(aR)),
    y: yy + (r * Math.sin(aR))
  };
}
function loginDrawCircle(x, y, r, sa, ea){
    var s = loginCircle(x, y, r, ea);
    var e = loginCircle(x, y, r, sa);
    var f = ea - sa <= 180 ? "0" : "1";
    return ["M", s.x, s.y, "A", r, r, 0, f, 0, e.x, e.y].join(" ");
}
function login_user(event) {
  event.preventDefault();
  var xhttp = new XMLHttpRequest(), a, b, f, f2, valid = 1;
  f = document.forms["loginform"];
  a = f["n"];
  b = f["p"];
  if (a.value == "") {
    a.style.backgroundColor = "#ffcccc";
    valid = 0;
  }
  if (b.value == "") {
    b.style.backgroundColor = "#ffcccc";
    valid = 0;
  }
  if (valid == 0) {return false;}
  document.getElementById('login_submit_button').focus();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      if (this.responseText == "OK") {
        a.value = "";
        b.value = "";
        w3_close_nav("login");
        loadUser();
      } else if (this.responseText == "OK2") {
        document.getElementById("loginerrordiv").innerHTML = "Your account has not been verified yet";
        document.getElementById("loginerrordiv").style.display = "block";
      } else if (this.responseText == "NOSUCHUSER") {
        a.style.backgroundColor = "#ffcccc";
        b.style.backgroundColor = "#ffcccc";
        document.getElementById("loginerrordiv").innerHTML = "Wrong Username or Password";
        document.getElementById("loginerrordiv").style.display = "block";
      } else {
        document.getElementById("loginerrordiv").innerHTML = "Ooops! Something went wrong...";
        document.getElementById("loginerrordiv").style.display = "block";
      }
    }
  };
  xhttp.open("POST", "https://mypage.w3schools.com/mypage/login_user.php", true);
  xhttp.withCredentials = true;
  xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xhttp.send("n=" + encodeURIComponent(a.value) + "&p=" + encodeURIComponent(b.value));

}

function login_inputGetsFocus(elmnt) {
  document.forms["loginform"]["n"].style.backgroundColor = "#fff";
  document.forms["loginform"]["p"].style.backgroundColor = "#fff";
  if (document.getElementById("loginerrordiv")) {
    document.getElementById("loginerrordiv").style.display = "none";
  }
}
function googleTranslateElementInit() {
  new google.translate.TranslateElement({
    pageLanguage: 'en',
    autoDisplay: false,
    gaTrack: true,
    gaId: 'UA-3855518-1',
    layout: google.translate.TranslateElement.InlineLayout.SIMPLE
  }, 'google_translate_element');
}
function printPage() {
  var content = document.getElementById("main").innerHTML;
  var css = "", i, j, c = document.getElementById("main").cloneNode(true);
  for (i = 0; i < c.childNodes.length; i++) {
    if (c.childNodes[i].nodeType == 1 && (c.childNodes[i].getAttribute("id") == "mainLeaderboard" || c.childNodes[i].getAttribute("id") == "midcontentadcontainer")) {
      c.removeChild(c.childNodes[i]);
      content = c.innerHTML;
    }
  }
  var head = document.getElementsByTagName("head")[0].innerHTML;
  var myWindow=window.open('','','');
  myWindow.document.write("<html><head>"+head+"<style>body{padding:15px;}@media print {.printbtn {display:none;}}</style></head><body><button class='printbtn' onclick='window.print()'>Print Page</button><br><br>"+content+"<p><a href='/about/about_copyright.asp'>Copyright 1999-2019</a> by Refsnes Data. All Rights Reserved.</p></body></html>");
}
function openGoogleTranslate() {
  var d = "text/javascript",
    e = "text/css",
    f = "stylesheet",
    g = "script",
    h = "link",
    k = "head",
    l = "complete",
    m = "UTF-8",
    n = ".";
  document.getElementById("google_translate_element").innerHTML = "";

  function p(b) {
    var a = document.getElementsByTagName(k)[0];
    a || (a = document.body.parentNode.appendChild(document.createElement(k)));
    a.appendChild(b)
  }

  function _loadJs(b) {
    var a = document.createElement(g);
    a.type = d;
    a.charset = m;
    a.src = b;
    p(a)
  }

  function _loadCss(b) {
    var a = document.createElement(h);
    a.type = e;
    a.rel = f;
    a.charset = m;
    a.href = b;
    p(a)
  }

  function _isNS(b) {
    b = b.split(n);
    for (var a = window, c = 0; c < b.length; ++c)
      if (!(a = a[b[c]])) return !1;
    return !0
  }

  function _setupNS(b) {
    b = b.split(n);
    for (var a = window, c = 0; c < b.length; ++c) a.hasOwnProperty ? a.hasOwnProperty(b[c]) ? a = a[b[c]] : a = a[b[c]] = {} : a = a[b[c]] || (a[b[c]] = {});
    return a
  }
  window.addEventListener && "undefined" == typeof document.readyState && window.addEventListener("DOMContentLoaded", function() {
    document.readyState = l
  }, !1);
  if (_isNS('google.translate.Element')) {
    return
  }(function() {
    var c = _setupNS('google.translate._const');
    c._cl = 'no';
    c._cuc = 'googleTranslateElementInit';
    c._cac = '';
    c._cam = '';
    var h = 'translate.googleapis.com';
    var s = (true ? 'https' : window.location.protocol == 'https:' ? 'https' : 'http') + '://';
    var b = s + h;
    c._pah = h;
    c._pas = s;
    c._pbi = b + '/translate_static/img/te_bk.gif';
    c._pci = b + '/translate_static/img/te_ctrl3.gif';
    c._pli = b + '/translate_static/img/loading.gif';
    c._plla = h + '/translate_a/l';
    c._pmi = b + '/translate_static/img/mini_google.png';
    c._ps = b + '/translate_static/css/translateelement.css';
    c._puh = 'translate.google.com';
    _loadCss(c._ps);
    _loadJs(b + '/translate_static/js/element/main_no.js');
  })();
}
/* w3codecolor ver 1.32 by w3schools.com */
(
function w3CodeColor() {
  var x, i, j, k, l, modes = ["html", "js", "java", "css", "sql", "python"];
  if (!document.getElementsByClassName) {return;}
  k = modes.length;
  for (j = 0; j < k; j++) {
    x = document.getElementsByClassName(modes[j] + "High");
    l = x.length;
    for (i = 0; i < l; i++) {
//      if (modes[j] == "react") {
//        codemirrorize(x[i]);
//      } else {
        x[i].innerHTML = w3CodeColorize(x[i].innerHTML + " ", modes[j]);
//      }
    }
}
/*
function codemirrorize(x) {
  var txt = x.innerText;
  x.innerHTML = "";
  var myCodeMirror = CodeMirror(x, 
    {
      mode: "jsx",
      value: txt,
      readOnly: true
    });

}
*/
function w3CodeColorize(x, lang) {
  var tagcolor = "mediumblue";
  var tagnamecolor = "brown";
  var attributecolor = "red";
  var attributevaluecolor = "mediumblue";
  var commentcolor = "green";
  var cssselectorcolor = "brown";
  var csspropertycolor = "red";
  var csspropertyvaluecolor = "mediumblue";
  var cssdelimitercolor = "black";
  var cssimportantcolor = "red";  
  var jscolor = "black";
  var jskeywordcolor = "mediumblue";
  var jsstringcolor = "brown";
  var jsstringtempcolor = "#f50"; //orange
  var jsregexpcolor = "#f50"; //orange  
  var jsnumbercolor = "red";
  var jspropertycolor = "black";
  var javacolor = "black";
  var javakeywordcolor = "mediumblue";
  var javastringcolor = "brown";
  var javanumbercolor = "red";
  var javapropertycolor = "black";
  var kotlincolor = "black";
  var kotlinkeywordcolor = "mediumblue";
  var kotlinstringcolor = "brown";
  var kotlinnumbercolor = "red";
  var kotlinpropertycolor = "black";
  var phptagcolor = "red";
  var phpcolor = "black";
  var phpkeywordcolor = "mediumblue";
  var phpglobalcolor = "goldenrod";
  var phpstringcolor = "brown";
  var phpnumbercolor = "red";  
  var pythoncolor = "black";
  var pythonkeywordcolor = "mediumblue";
  var pythonstringcolor = "brown";
  var pythonnumbercolor = "red";  
  var angularstatementcolor = "red";
  var sqlcolor = "black";
  var sqlkeywordcolor = "mediumblue";
  var sqlstringcolor = "brown";
  var sqlnumbercolor = "";  
  if (!lang) {lang = "html"; }
  if (lang == "html") {return htmlMode(x);}
  if (lang == "css") {return cssMode(x);}
  if (lang == "js") {return jsMode(x);}
  if (lang == "java") {return javaMode(x);}
  if (lang == "kotlin") {return kotlinMode(x);}
  if (lang == "php") {return phpMode(x);}
  if (lang == "sql") {return sqlMode(x);}  
  if (lang == "python") {return pythonMode(x);}
  return x;
  function extract(str, start, end, func, repl) {
    var s, e, d = "", a = [];
    while (str.search(start) > -1) {
      s = str.search(start);
      e = str.indexOf(end, s);
      if (e == -1) {e = str.length;}
      if (repl) {
        a.push(func(str.substring(s, e + (end.length))));      
        str = str.substring(0, s) + repl + str.substr(e + (end.length));
      } else {
        d += str.substring(0, s);
        d += func(str.substring(s, e + (end.length)));
        str = str.substr(e + (end.length));
      }
    }
    this.rest = d + str;
    this.arr = a;
  }
  function htmlMode(txt) {
    var rest = txt, done = "", php, comment, angular, startpos, endpos, note, i;
    php = new extract(rest, "&lt;\\?php", "?&gt;", phpMode, "W3PHPPOS");
    rest = php.rest;
    comment = new extract(rest, "&lt;!--", "--&gt;", commentMode, "W3HTMLCOMMENTPOS");
    rest = comment.rest;
    while (rest.indexOf("&lt;") > -1) {
      note = "";
      startpos = rest.indexOf("&lt;");
      if (rest.substr(startpos, 9).toUpperCase() == "&LT;STYLE") {note = "css";}
      if (rest.substr(startpos, 10).toUpperCase() == "&LT;SCRIPT") {note = "javascript";}        
      endpos = rest.indexOf("&gt;", startpos);
      if (endpos == -1) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += tagMode(rest.substring(startpos, endpos + 4));
      rest = rest.substr(endpos + 4);
      if (note == "css") {
        endpos = rest.indexOf("&lt;/style&gt;");
        if (endpos > -1) {
          done += cssMode(rest.substring(0, endpos));
          rest = rest.substr(endpos);
        }
      }
      if (note == "javascript") {
        endpos = rest.indexOf("&lt;/script&gt;");
        if (endpos > -1) {
          done += jsMode(rest.substring(0, endpos));
          rest = rest.substr(endpos);
        }
      }
    }
    rest = done + rest;
    angular = new extract(rest, "{{", "}}", angularMode);
    rest = angular.rest;
    for (i = 0; i < comment.arr.length; i++) {
        rest = rest.replace("W3HTMLCOMMENTPOS", comment.arr[i]);
    }
    for (i = 0; i < php.arr.length; i++) {
        rest = rest.replace("W3PHPPOS", php.arr[i]);
    }
    return rest;
  }
  function tagMode(txt) {
    var rest = txt, done = "", startpos, endpos, result;
    while (rest.search(/(\s|<br>)/) > -1) {    
      startpos = rest.search(/(\s|<br>)/);
      endpos = rest.indexOf("&gt;");
      if (endpos == -1) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += attributeMode(rest.substring(startpos, endpos));
      rest = rest.substr(endpos);
    }
    result = done + rest;
    result = "<span class='tagcolor' style=color:" + tagcolor + ">&lt;</span>" + result.substring(4);
    if (result.substr(result.length - 4, 4) == "&gt;") {
      result = result.substring(0, result.length - 4) + "<span class='tagcolor' style=color:" + tagcolor + ">&gt;</span>";
    }
    return "<span class='tagnamecolor' style=color:" + tagnamecolor + ">" + result + "</span>";
  }
  function attributeMode(txt) {
    var rest = txt, done = "", startpos, endpos, singlefnuttpos, doublefnuttpos, spacepos;
    while (rest.indexOf("=") > -1) {
      endpos = -1;
      startpos = rest.indexOf("=");
      singlefnuttpos = rest.indexOf("'", startpos);
      doublefnuttpos = rest.indexOf('"', startpos);
      spacepos = rest.indexOf(" ", startpos + 2);
      if (spacepos > -1 && (spacepos < singlefnuttpos || singlefnuttpos == -1) && (spacepos < doublefnuttpos || doublefnuttpos == -1)) {
        endpos = rest.indexOf(" ", startpos);      
      } else if (doublefnuttpos > -1 && (doublefnuttpos < singlefnuttpos || singlefnuttpos == -1) && (doublefnuttpos < spacepos || spacepos == -1)) {
        endpos = rest.indexOf('"', rest.indexOf('"', startpos) + 1);
      } else if (singlefnuttpos > -1 && (singlefnuttpos < doublefnuttpos || doublefnuttpos == -1) && (singlefnuttpos < spacepos || spacepos == -1)) {
        endpos = rest.indexOf("'", rest.indexOf("'", startpos) + 1);
      }
      if (!endpos || endpos == -1 || endpos < startpos) {endpos = rest.length;}
      done += rest.substring(0, startpos);
      done += attributeValueMode(rest.substring(startpos, endpos + 1));
      rest = rest.substr(endpos + 1);
    }
    return "<span class='attributecolor' style=color:" + attributecolor + ">" + done + rest + "</span>";
  }
  function attributeValueMode(txt) {
    return "<span class='attributevaluecolor' style=color:" + attributevaluecolor + ">" + txt + "</span>";
  }
  function angularMode(txt) {
    return "<span class='angularstatementcolor' style=color:" + angularstatementcolor + ">" + txt + "</span>";
  }
  function commentMode(txt) {
    return "<span class='commentcolor' style=color:" + commentcolor + ">" + txt + "</span>";
  }
  function cssMode(txt) {
    var rest = txt, done = "", s, e, comment, i, midz, c, cc;
    comment = new extract(rest, /\/\*/, "*/", commentMode, "W3CSSCOMMENTPOS");
    rest = comment.rest;
    while (rest.search("{") > -1) {
      s = rest.search("{");
      midz = rest.substr(s + 1);
      cc = 1;
      c = 0;
      for (i = 0; i < midz.length; i++) {
        if (midz.substr(i, 1) == "{") {cc++; c++}
        if (midz.substr(i, 1) == "}") {cc--;}
        if (cc == 0) {break;}
      }
      if (cc != 0) {c = 0;}
      e = s;
      for (i = 0; i <= c; i++) {
        e = rest.indexOf("}", e + 1);
      }
      if (e == -1) {e = rest.length;}
      done += rest.substring(0, s + 1);
      done += cssPropertyMode(rest.substring(s + 1, e));
      rest = rest.substr(e);
    }
    rest = done + rest;
    rest = rest.replace(/{/g, "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">{</span>");
    rest = rest.replace(/}/g, "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">}</span>");
    for (i = 0; i < comment.arr.length; i++) {
        rest = rest.replace("W3CSSCOMMENTPOS", comment.arr[i]);
    }
    return "<span class='cssselectorcolor' style=color:" + cssselectorcolor + ">" + rest + "</span>";
  }
  function cssPropertyMode(txt) {
    var rest = txt, done = "", s, e, n, loop;
    if (rest.indexOf("{") > -1 ) { return cssMode(rest); }
    while (rest.search(":") > -1) {
      s = rest.search(":");
      loop = true;
      n = s;
      while (loop == true) {
        loop = false;
        e = rest.indexOf(";", n);
        if (rest.substring(e - 5, e + 1) == "&nbsp;") {
          loop = true;
          n = e + 1;
        }
      }
      if (e == -1) {e = rest.length;}
      done += rest.substring(0, s);
      done += cssPropertyValueMode(rest.substring(s, e + 1));
      rest = rest.substr(e + 1);
    }
    return "<span class='csspropertycolor' style=color:" + csspropertycolor + ">" + done + rest + "</span>";
  }
  function cssPropertyValueMode(txt) {
    var rest = txt, done = "", s;
    rest = "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">:</span>" + rest.substring(1);
    while (rest.search(/!important/i) > -1) {
      s = rest.search(/!important/i);
      done += rest.substring(0, s);
      done += cssImportantMode(rest.substring(s, s + 10));
      rest = rest.substr(s + 10);
    }
    result = done + rest;    
    if (result.substr(result.length - 1, 1) == ";" && result.substr(result.length - 6, 6) != "&nbsp;" && result.substr(result.length - 4, 4) != "&lt;" && result.substr(result.length - 4, 4) != "&gt;" && result.substr(result.length - 5, 5) != "&amp;") {
      result = result.substring(0, result.length - 1) + "<span class='cssdelimitercolor' style=color:" + cssdelimitercolor + ">;</span>";
    }
    return "<span class='csspropertyvaluecolor' style=color:" + csspropertyvaluecolor + ">" + result + "</span>";
  }
  function cssImportantMode(txt) {
    return "<span class='cssimportantcolor' style=color:" + cssimportantcolor + ";font-weight:bold;>" + txt + "</span>";
  }
  function jsMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      regexppos = getRegExpPos(rest, jsRegExpMode);
      sfnuttpos = getPos(rest, "'", "'", jsStringMode);
      dfnuttpos = getPos(rest, '"', '"', jsStringMode);
      bfnuttpos = getPos(rest, '`', '`', jsStringTempMode);      
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, jsNumberMode);
      keywordpos = getKeywordPos("js", rest, jsKeywordMode);
      dotpos = getDotPos(rest, jsPropertyMode);
      if (Math.max(numpos[0], regexppos[0], sfnuttpos[0], dfnuttpos[0], bfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, regexppos, sfnuttpos, dfnuttpos, bfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='jscolor' style=color:" + jscolor + ">" + rest + "</span>";
  }
  function jsRegExpMode(txt) {
    return "<span class='jsregexpcolor' style=color:" + jsregexpcolor + ">" + txt + "</span>";
  }
  function jsStringMode(txt) {
    return "<span class='jsstringcolor' style=color:" + jsstringcolor + ">" + txt + "</span>";
  }
  function jsStringTempMode(txt) {
    return "<span class='jsstringtempcolor' style=color:" + jsstringtempcolor + ">" + txt + "</span>";
  }
  function jsKeywordMode(txt) {
    return "<span class='jskeywordcolor' style=color:" + jskeywordcolor + ">" + txt + "</span>";
  }
  function jsNumberMode(txt) {
    return "<span class='jsnumbercolor' style=color:" + jsnumbercolor + ">" + txt + "</span>";
  }
  function jsPropertyMode(txt) {
    return "<span class='jspropertycolor' style=color:" + jspropertycolor + ">" + txt + "</span>";
  }
  function getRegExpPos(txt, func) {
    var pos1, cc, pos2 = 0, mArr, i, len, patt, modOK = false;
    pos1 = txt.search(/\/.+?\//);
    if (pos1 > -1) {
      len = txt.match(/\/.+?\//)[0].length; 
      patt = /\W/g;
      cc = txt.match(/\/.+?\//)[0];
      pos2 = cc.length;
      mArr = ["img", "igm", "mig", "mgi", "gim", "gmi", "im", "ig", "mi", "mg", "gi", "gm", "i", "m", "g"];
      for (i = 0; i < mArr.length; i++) {
        re = new RegExp(`\\b^${mArr[i]}\\b`, 'gi');
        if (txt.substr(pos1+pos2).search(re) > -1) {
          modOK = true;
          pos2 = pos2 + mArr[i].length;
        }
      }
      //console.log(txt.substr(pos1 + len - 2,1));
      //console.log((txt.substr(pos1 + len - 2,1)!= "<"));
      if ((cc.indexOf("<br>") == -1 && txt.substr(pos1 + len,1)!= "/" && txt.substr(pos1 + len,1).match(patt) && txt.substr(pos1 - 1,1).match(patt)  && txt.substr(pos1 - 1,1) !="/") || modOK == true && txt.substr(pos1 + len - 2,1)!= "<") {
      } else {
        pos1 = -1;
        pos2 = 0;
      }
    }
    return [pos1, pos1 + pos2, func];
  }
  function getDotPos(txt, func) {
    var x, i, j, s, e, arr = [".","<", " ", ";", "(", "+", ")", "[", "]", ",", "&", ":", "{", "}", "/" ,"-", "*", "|", "%"];
    s = txt.indexOf(".");
    if (s > -1) {
      x = txt.substr(s + 1);
      for (j = 0; j < x.length; j++) {
        cc = x[j];
        for (i = 0; i < arr.length; i++) {
          if (cc.indexOf(arr[i]) > -1) {
            e = j;
            return [s + 1, e + s + 1, func];
          }
        }
      }
    }
    return [-1, -1, func];
  }
  function getMinPos() {
    var i, arr = [];
    for (i = 0; i < arguments.length; i++) {
      if (arguments[i][0] > -1) {
        if (arr.length == 0 || arguments[i][0] < arr[0]) {arr = arguments[i];}
      }
    }
    if (arr.length == 0) {arr = arguments[i];}
    return arr;
  }
  function javaMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", javaStringMode);
      dfnuttpos = getPos(rest, '"', '"', javaStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, javaNumberMode);
      keywordpos = getKeywordPos("java", rest, javaKeywordMode);
      dotpos = getDotPos(rest, javaPropertyMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='javacolor' style=color:" + javacolor + ">" + rest + "</span>";
  }
  function javaStringMode(txt) {
    return "<span class='javastringcolor' style=color:" + javastringcolor + ">" + txt + "</span>";
  }
  function javaKeywordMode(txt) {
    return "<span class='javakeywordcolor' style=color:" + javakeywordcolor + ">" + txt + "</span>";
  }
  function javaNumberMode(txt) {
    return "<span class='javanumbercolor' style=color:" + javanumbercolor + ">" + txt + "</span>";
  }
  function javaPropertyMode(txt) {
    return "<span class='javapropertycolor' style=color:" + javapropertycolor + ">" + txt + "</span>";
  }
  function kotlinMode(txt) {
    var rest = txt, done = "", esc = [], i, cc, tt = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos, dotpos, y;
    for (i = 0; i < rest.length; i++)  {
      cc = rest.substr(i, 1);
      if (cc == "\\") {
        esc.push(rest.substr(i, 2));
        cc = "W3JSESCAPE";
        i++;
      }
      tt += cc;
    }
    rest = tt;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", kotlinStringMode);
      dfnuttpos = getPos(rest, '"', '"', kotlinStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      numpos = getNumPos(rest, kotlinNumberMode);
      keywordpos = getKeywordPos("kotlin", rest, kotlinKeywordMode);
      dotpos = getDotPos(rest, kotlinPropertyMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0], dotpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, dotpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    for (i = 0; i < esc.length; i++) {
      rest = rest.replace("W3JSESCAPE", esc[i]);
    }
    return "<span class='kotlincolor' style=color:" + kotlincolor + ">" + rest + "</span>";
  }
  function kotlinStringMode(txt) {
    return "<span class='kotlinstringcolor' style=color:" + kotlinstringcolor + ">" + txt + "</span>";
  }
  function kotlinKeywordMode(txt) {
    return "<span class='kotlinkeywordcolor' style=color:" + kotlinkeywordcolor + ">" + txt + "</span>";
  }
  function kotlinNumberMode(txt) {
    return "<span class='kotlinnumbercolor' style=color:" + kotlinnumbercolor + ">" + txt + "</span>";
  }
  function kotlinPropertyMode(txt) {
    return "<span class='kotlinpropertycolor' style=color:" + kotlinpropertycolor + ">" + txt + "</span>";
  }
  function sqlMode(txt) {
    var rest = txt, y, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos, numpos, mypos;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", sqlStringMode);
      dfnuttpos = getPos(rest, '"', '"', sqlStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /--/, "<br>", commentMode);      
      numpos = getNumPos(rest, sqlNumberMode);
      keywordpos = getKeywordPos("sql", rest, sqlKeywordMode);
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    return "<span class='sqlcolor' style=color:" + sqlcolor + ">" + rest + "</span>";
  }
  function sqlStringMode(txt) {
    return "<span class='sqlstringcolor' style=color:" + sqlstringcolor + ">" + txt + "</span>";
  }
  function sqlKeywordMode(txt) {
    return "<span class='sqlkeywordcolor' style=color:" + sqlkeywordcolor + ">" + txt + "</span>";
  }
  function sqlNumberMode(txt) {
    return "<span class='sqlnumbercolor' style=color:" + sqlnumbercolor + ">" + txt + "</span>";
  }
  function phpMode(txt) {
    var rest = txt, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos, mypos, y;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", phpStringMode);
      dfnuttpos = getPos(rest, '"', '"', phpStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comlinepos = getPos(rest, /\/\//, "<br>", commentMode);      
      comhashpos = getPos(rest, "#", "<br>", commentMode);
      numpos = getNumPos(rest, phpNumberMode);
      keywordpos = getKeywordPos("php", rest, phpKeywordMode);      
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comlinepos[0], comhashpos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    rest = "<span class='phptagcolor' style=color:" + phptagcolor + ">&lt;" + rest.substr(4, 4) + "</span>" + rest.substring(8);
    if (rest.substr(rest.length - 5, 5) == "?&gt;") {
      rest = rest.substring(0, rest.length - 5) + "<span class='phptagcolor' style=color:" + phptagcolor + ">?&gt;</span>";
    }
    return "<span class='phpcolor' style=color:" + phpcolor + ">" + rest + "</span>";
  }
  function phpStringMode(txt) {
    return "<span class='phpstringcolor' style=color:" + phpstringcolor + ">" + txt + "</span>";
  }
  function phpNumberMode(txt) {
    return "<span class='phpnumbercolor' style=color:" + phpnumbercolor + ">" + txt + "</span>";
  }
  function phpKeywordMode(txt) {
    var glb = ["$GLOBALS","$_SERVER","$_REQUEST","$_POST","$_GET","$_FILES","$_ENV","$_COOKIE","$_SESSION"];
    if (glb.indexOf(txt.toUpperCase()) > -1) {
      if (glb.indexOf(txt) > -1) {
        return "<span class='phpglobalcolor' style=color:" + phpglobalcolor + ">" + txt + "</span>";
      } else {
        return txt;
      }
    } else {
      return "<span class='phpkeywordcolor' style=color:" + phpkeywordcolor + ">" + txt + "</span>";
    }
  }
  function pythonMode(txt) {
    var rest = txt, done = "", sfnuttpos, dfnuttpos, compos, comlinepos, comhashpos, keywordpos, mypos, y;
    y = 1;
    while (y == 1) {
      sfnuttpos = getPos(rest, "'", "'", pythonStringMode);
      dfnuttpos = getPos(rest, '"', '"', pythonStringMode);
      compos = getPos(rest, /\/\*/, "*/", commentMode);
      comhashpos = getPos(rest, "#", "<br>", commentMode);
      numpos = getNumPos(rest, pythonNumberMode);
      keywordpos = getKeywordPos("python", rest, pythonKeywordMode);      
      if (Math.max(numpos[0], sfnuttpos[0], dfnuttpos[0], compos[0], comhashpos[0], keywordpos[0]) == -1) {break;}
      mypos = getMinPos(numpos, sfnuttpos, dfnuttpos, compos, comhashpos, keywordpos);
      if (mypos[0] == -1) {break;}
      if (mypos[0] > -1) {
        done += rest.substring(0, mypos[0]);
        done += mypos[2](rest.substring(mypos[0], mypos[1]));
        rest = rest.substr(mypos[1]);
      }
    }
    rest = done + rest;
    return "<span class='pythoncolor' style=color:" + pythoncolor + ">" + rest + "</span>";
  }
  function pythonStringMode(txt) {
    return "<span class='pythonstringcolor' style=color:" + pythonstringcolor + ">" + txt + "</span>";
  }
  function pythonNumberMode(txt) {
    return "<span class='pythonnumbercolor' style=color:" + pythonnumbercolor + ">" + txt + "</span>";
  }
  function pythonKeywordMode(txt) {
    return "<span class='pythonkeywordcolor' style=color:" + pythonkeywordcolor + ">" + txt + "</span>";
  }
  function getKeywordPos(typ, txt, func) {
    var words, i, pos, rpos = -1, rpos2 = -1, patt;
    if (typ == "js") {
      words = ["abstract","arguments","async","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete",
      "do","double","else","enum","eval","event","export","extends","false","final","finally","float","for","function","goto","if","implements","import",
      "in","instanceof","int","interface","let","long","NaN","native","new","null","package","private","protected","public","return","short","static",
      "super","switch","synchronized","then","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"];
    } else if (typ == "java") {
      words = ["abstract","arguments","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete",
      "do","double","else","enum","eval","event","export","extends","false","final","finally","float","for","function","goto","if","implements","import",
      "in","instanceof","int","interface","let","long","NaN","native","new","null","package","private","protected","public","return","short","static",
      "super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield",
      "String"];
    } else if (typ == "kotlin") {
      words = ['package','as','typealias','class','interface','this','super','val','operator','var','fun','for','is','in','This','throw','return',
      'annotation','break','continue','object','if','else','while','do','try','when','!in','!is','as?','file','import','where','by','get','set',
      'abstract','enum','open','inner','override','private','public','internal','protected','catch','finally','out','final','vararg','reified',
      'dynamic','companion','constructor','init','sealed','field','property','receiver','param','sparam','lateinit','data','inline','noinline',
      'tailrec','external','annotation','crossinline','const','operator','infix','suspend','actual','expect','setparam','Boolean','Byte','Character',
      'CharSequence','Class','ClassLoader','Cloneable','Comparable','Compiler','Double','Exception','Float','Integer','Long','Math','Number','Object',
      'Package','Pair','Process','Runtime','Runnable','SecurityManager','Short','StackTraceElement','StrictMath','String','StringBuffer','System',
      'Thread','ThreadGroup','ThreadLocal','Throwable','Triple','Void','Annotation','Any','BooleanArray','ByteArray','Char','CharArray',
      'DeprecationLevel','DoubleArray','Enum','FloatArray','Function','Int','IntArray','Lazy','LazyThreadSafetyMode','LongArray','Nothing','ShortArray','Unit'];
    } else if (typ == "php") {
      words = ["$GLOBALS","$_SERVER","$_REQUEST","$_POST","$_GET","$_FILES","$_ENV","$_COOKIE","$_SESSION",
      "__halt_compiler","abstract","and","array","as","break","callable","case","catch","class","clone","const","continue","declare","default",
      "die","do","echo","else","elseif","empty","enddeclare","endfor","endforeach","endif","endswitch","endwhile","eval","exit","extends","final","for",
      "foreach","function","global","goto","if","implements","include","include_once","instanceof","insteadof","interface","isset","list","namespace","new",
      "or","print","private","protected","public","require","require_once","return","static","switch","throw","trait","try","unset","use","var","while","xor"];
    } else if (typ == "sql") {
      words = ["ADD","EXTERNAL","PROCEDURE","ALL","FETCH","PUBLIC","ALTER","FILE","RAISERROR","AND","FILLFACTOR","READ","ANY","READTEXT","AS","FOREIGN",
      "RECONFIGURE","ASC","FREETEXT","REFERENCES","AUTHORIZATION","FREETEXTTABLE","REPLICATION","BACKUP","FROM","RESTORE","BEGIN","FULL","RESTRICT","BETWEEN",
      "FUNCTION","RETURN","BREAK","GOTO","REVERT","BROWSE","GRANT","REVOKE","BULK","GROUP","RIGHT","BY","HAVING","ROLLBACK","CASCADE","HOLDLOCK","ROWCOUNT",
      "CASE","IDENTITY","ROWGUIDCOL","CHECK","IDENTITY_INSERT","RULE","CHECKPOINT","IDENTITYCOL","SAVE","CLOSE","IF","SCHEMA","CLUSTERED","IN",
      "SECURITYAUDIT","COALESCE","INDEX","SELECT","COLLATE","INNER","SEMANTICKEYPHRASETABLE","COLUMN","INSERT","SEMANTICSIMILARITYDETAILSTABLE","COMMIT",
      "INTERSECT","SEMANTICSIMILARITYTABLE","COMPUTE","INTO","SESSION_USER","CONSTRAINT","IS","SET","CONTAINS","JOIN","SETUSER","CONTAINSTABLE","KEY",
      "SHUTDOWN","CONTINUE","KILL","SOME","CONVERT","LEFT","STATISTICS","CREATE","LIKE","SYSTEM_USER","CROSS","LINENO","TABLE","CURRENT","LOAD","TABLESAMPLE",
      "CURRENT_DATE","MERGE","TEXTSIZE","CURRENT_TIME","NATIONAL","THEN","CURRENT_TIMESTAMP","NOCHECK","TO","CURRENT_USER","NONCLUSTERED","TOP","CURSOR",
      "NOT","TRAN","DATABASE","NULL","TRANSACTION","DBCC","NULLIF","TRIGGER","DEALLOCATE","OF","TRUNCATE","DECLARE","OFF","TRY_CONVERT","DEFAULT","OFFSETS",
      "TSEQUAL","DELETE","ON","UNION","DENY","OPEN","UNIQUE","DESC","OPENDATASOURCE","UNPIVOT","DISK","OPENQUERY","UPDATE","DISTINCT","OPENROWSET",
      "UPDATETEXT","DISTRIBUTED","OPENXML","USE","DOUBLE","OPTION","USER","DROP","OR","VALUES","DUMP","ORDER","VARYING","ELSE","OUTER","VIEW","END",
      "OVER","WAITFOR","ERRLVL","PERCENT","WHEN","ESCAPE","PIVOT","WHERE","EXCEPT","PLAN","WHILE","EXEC","PRECISION","WITH","EXECUTE","PRIMARY",
      "WITHIN GROUP","EXISTS","PRINT","WRITETEXT","EXIT","PROC","LIMIT","MODIFY","COUNT","REPLACE"];
    } else if (typ == "python") {
      words = ["as", "assert", "break", "class", "continue", "def", "del", "elif", "else", "except", "False", "finally", "for", "from", "global", "if", "import",
      "lambda", "pass", "raise", "return", "try", "while", "with", "yield", "in", "abs", "all", "any", "bin", "bool", "bytearray", "callable", "chr",
      "classmethod", "compile", "complex", "delattr", "dict", "dir", "divmod", "enumerate", "eval", "filter", "float", "format", "frozenset", "getattr",
      "globals", "hasattr", "hash", "help", "hex", "id", "input", "int", "isinstance", "issubclass", "iter", "len", "list", "locals", "map", "max",
      "memoryview", "min", "next", "object", "oct", "open", "ord", "pow", "print", "property", "range", "repr", "reversed", "round", "set", "setattr", "slice",
      "sorted", "staticmethod", "str", "sum", "super", "tuple", "True", "type", "vars", "zip", "__import__", "NotImplemented", "Ellipsis", "__debug__"];
    }
    for (i = 0; i < words.length; i++) {
      if (typ == "php" || typ == "sql") {
        pos = txt.toLowerCase().indexOf(words[i].toLowerCase());
      } else {
        pos = txt.indexOf(words[i]);
      }
      if (pos > -1) {
        patt = /\W/g;
        if (txt.substr(pos + words[i].length,1).match(patt) && txt.substr(pos - 1,1).match(patt)) {
          if (pos > -1 && (rpos == -1 || pos < rpos)) {
            rpos = pos;
            rpos2 = rpos + words[i].length;
          }
        }
      } 
    }
    return [rpos, rpos2, func];
  }
  function getPos(txt, start, end, func) {
    var s, e;
    s = txt.search(start);
    e = txt.indexOf(end, s + (end.length));
    if (e == -1) {e = txt.length;}
    return [s, e + (end.length), func];
  }
  function getNumPos(txt, func) {
    var arr = ["<br>", " ", ";", "(", "+", ")", "[", "]", ",", "&", ":", "{", "}", "/" ,"-", "*", "|", "%", "="], i, j, c, startpos = 0, endpos, word;
    for (i = 0; i < txt.length; i++) {
      for (j = 0; j < arr.length; j++) {
        c = txt.substr(i, arr[j].length);
        if (c == arr[j]) {
          if (c == "-" && (txt.substr(i - 1, 1) == "e" || txt.substr(i - 1, 1) == "E")) {
            continue;
          }
          endpos = i;
          if (startpos < endpos) {
            word = txt.substring(startpos, endpos);
            //console.log(word + " " + isNaN(word));
            if (!isNaN(word)) {return [startpos, endpos, func];}
          }
          i += arr[j].length;
          startpos = i;
          i -= 1;
          break;
        }
      }
    }  
    return [-1, -1, func];
  }  
}
}
)();
/*
(
function setThemeMode() {
  var x = localStorage.getItem("preferredmode");
  var y = localStorage.getItem("preferredpagemode");  
  if (x == "dark") {
    document.body.className += " darktheme";
  }
  if (y == "dark") {
    document.body.className += " darkpagetheme";
  }
})();
*/



Unique Id: f696649e-8c14-455f-b3d3-9731fde9eacc
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
var stickyadstatus = "";
function fix_stickyad() {
  document.getElementById("stickypos").style.position = "sticky";
  var elem = document.getElementById("stickyadcontainer");
  if (!elem) {return false;}
  if (document.getElementById("skyscraper")) {
    var skyWidth = Number(w3_getStyleValue(document.getElementById("skyscraper"), "width").replace("px", ""));  
    }
  else {
    var skyWidth = Number(w3_getStyleValue(document.getElementById("right"), "width").replace("px", ""));  
  }
  elem.style.width = skyWidth + "px";
  if (window.innerWidth <= 992) {
    elem.style.position = "";
    elem.style.top = stickypos + "px";
    return false;
  }
  var stickypos = document.getElementById("stickypos").offsetTop;
  var docTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
  var adHeight = Number(w3_getStyleValue(elem, "height").replace("px", ""));
  if (stickyadstatus == "") {
    if ((stickypos - docTop) < 100) {
      elem.style.position = "fixed";
      elem.style.top = "100px";
      stickyadstatus = "sticky";
      document.getElementById("stickypos").style.position = "sticky";

    }
  } else {
    if ((docTop + 100) - stickypos < 0) {  
      elem.style.position = "";
      elem.style.top = stickypos + "px";
      stickyadstatus = "";
      document.getElementById("stickypos").style.position = "static";
    }
  }
  if (stickyadstatus == "sticky") {
    if ((docTop + adHeight + 100) > document.getElementById("footer").offsetTop) {
      elem.style.position = "absolute";
      elem.style.top = (document.getElementById("footer").offsetTop - adHeight) + "px";
      document.getElementById("stickypos").style.position = "static";
    } else {
        elem.style.position = "fixed";
        elem.style.top = "100px";
        stickyadstatus = "sticky";
        document.getElementById("stickypos").style.position = "sticky";
    }
  }
}
function w3_getStyleValue(elmnt,style) {
  if (window.getComputedStyle) {
    return window.getComputedStyle(elmnt,null).getPropertyValue(style);
  } else {
    return elmnt.currentStyle[style];
  }
}




Unique Id: fc5b516f-b9f9-4853-8731-c8cb59446d99
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KTCFC3S');

var subjectFolder = location.pathname;
subjectFolder = subjectFolder.replace("/", "");
if (subjectFolder.startsWith("python/") == true ) {
  if (subjectFolder.includes("/numpy/") == true ) {
    subjectFolder = "numpy/"
  } else if (subjectFolder.includes("/pandas/") == true ) {
      subjectFolder = "pandas/"
  } else if (subjectFolder.includes("/scipy/") == true ) {
      subjectFolder = "scipy/"
  }
}
subjectFolder = subjectFolder.substr(0, subjectFolder.indexOf("/"));




Unique Id: 7eaaffaf-4f6a-4d86-8eaf-051393e271d0
Related html node: 
Type: internal
Src: 
Async: 0
Defer: 0
Content: 
(
function setThemeMode() {
  var x = localStorage.getItem("preferredmode");
  var y = localStorage.getItem("preferredpagemode");  
  if (x == "dark") {
    document.body.className += " darktheme";
  }
  if (y == "dark") {
    document.body.className += " darkpagetheme";
  }
})();




